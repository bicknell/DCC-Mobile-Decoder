

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Dec 12 11:07:41 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og9 
     1                           	processor	18F16Q40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK5,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK6,global,class=CODE,delta=1,noexec
     7                           	psect	nvBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1
    81                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    82                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1
    84                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    85                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    86                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    87  0000                     
    88                           ; Version 2.40
    89                           ; Generated 08/12/2021 GMT
    90                           ; 
    91                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    92                           ; All rights reserved.
    93                           ; 
    94                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    95                           ; 
    96                           ; Redistribution and use in source and binary forms, with or without modification, are
    97                           ; permitted provided that the following conditions are met:
    98                           ; 
    99                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   100                           ;        conditions and the following disclaimer.
   101                           ; 
   102                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   103                           ;        of conditions and the following disclaimer in the documentation and/or other
   104                           ;        materials provided with the distribution. Publication is not required when
   105                           ;        this file is used in an embedded application.
   106                           ; 
   107                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   108                           ;        software without specific prior written permission.
   109                           ; 
   110                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   111                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   112                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   113                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   114                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   115                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   116                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   117                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   118                           ; 
   119                           ; 
   120                           ; Code-generator required, PIC18F16Q40 Definitions
   121                           ; 
   122                           ; SFR Addresses
   123  0000                     
   124 ;; Function _UART1_DefaultFramingErrorHandler is unused but had its address taken
   125  0000                     
   126 ;; Function _UART1_DefaultOverrunErrorHandler is unused but had its address taken
   127  0000                     
   128 ;; Function _UART1_DefaultErrorHandler is unused but had its address taken
   129  0000                     
   130 ;; Function _PWM1_16BIT_Slice1Output1_DefaultInterruptHandler is unused but had its address taken
   131  0000                     
   132 ;; Function _PWM1_16BIT_Slice1Output2_DefaultInterruptHandler is unused but had its address taken
   133  0000                     
   134 ;; Function _PWM1_16BIT_Period_DefaultInterruptHandler is unused but had its address taken
   135  0000                     
   136                           	psect	idataBANK5
   137  004162                     __pidataBANK5:
   138                           	callstack 0
   139                           
   140                           ;initializer for _dcc_bit
   141  004162  09                 	db	9
   142                           
   143                           ;initializer for _my_dcc_direction
   144  004163  46                 	db	70
   145                           
   146                           	psect	idataBANK6
   147  003FFA                     __pidataBANK6:
   148                           	callstack 0
   149                           
   150                           ;initializer for _dcc_speeds
   151  003FFA  00                 	db	0
   152  003FFB  00                 	db	0
   153  003FFC  01                 	db	1
   154  003FFD  03                 	db	3
   155  003FFE  05                 	db	5
   156  003FFF  07                 	db	7
   157  004000  09                 	db	9
   158  004001  0B                 	db	11
   159  004002  0D                 	db	13
   160  004003  0F                 	db	15
   161  004004  11                 	db	17
   162  004005  13                 	db	19
   163  004006  15                 	db	21
   164  004007  17                 	db	23
   165  004008  19                 	db	25
   166  004009  1B                 	db	27
   167  00400A  00                 	db	0
   168  00400B  00                 	db	0
   169  00400C  02                 	db	2
   170  00400D  04                 	db	4
   171  00400E  06                 	db	6
   172  00400F  08                 	db	8
   173  004010  0A                 	db	10
   174  004011  0C                 	db	12
   175  004012  0E                 	db	14
   176  004013  10                 	db	16
   177  004014  12                 	db	18
   178  004015  14                 	db	20
   179  004016  16                 	db	22
   180  004017  18                 	db	24
   181  004018  1A                 	db	26
   182  004019  1C                 	db	28
   183                           
   184                           	psect	nvBANK5
   185  0005E5                     __pnvBANK5:
   186                           	callstack 0
   187  0005E5                     _PWM1_16BIT_Period_InterruptHandler:
   188                           	callstack 0
   189  0005E5                     	ds	2
   190  0005E7                     _PWM1_16BIT_Slice1Output2_InterruptHandler:
   191                           	callstack 0
   192  0005E7                     	ds	2
   193  0005E9                     _PWM1_16BIT_Slice1Output1_InterruptHandler:
   194                           	callstack 0
   195  0005E9                     	ds	2
   196  0005EB                     _UART1_ErrorHandler:
   197                           	callstack 0
   198  0005EB                     	ds	2
   199  0005ED                     _UART1_OverrunErrorHandler:
   200                           	callstack 0
   201  0005ED                     	ds	2
   202  0005EF                     _UART1_FramingErrorHandler:
   203                           	callstack 0
   204  0005EF                     	ds	2
   205  0005F1                     _TMR2_InterruptHandler:
   206                           	callstack 0
   207  0005F1                     	ds	2
   208  0000                     _NVMDATL	set	70
   209  0000                     _NVMCON0bits	set	64
   210  0000                     _NVMLOCK	set	66
   211  0000                     _NVMCON1bits	set	65
   212  0000                     _NVMADRL	set	67
   213  0000                     _NVMADRH	set	68
   214  0000                     _NVMADRU	set	69
   215  0000                     _PMD5	set	104
   216  0000                     _PMD4	set	103
   217  0000                     _PMD3	set	102
   218  0000                     _PMD2	set	101
   219  0000                     _PMD1	set	100
   220  0000                     _PMD0	set	99
   221  0000                     _ACTCON	set	172
   222  0000                     _OSCTUNE	set	176
   223  0000                     _OSCFRQ	set	177
   224  0000                     _OSCEN	set	179
   225  0000                     _OSCCON3	set	175
   226  0000                     _OSCCON1	set	173
   227  0000                     _U1TXB	set	675
   228  0000                     _U1ERRIE	set	691
   229  0000                     _U1ERRIR	set	690
   230  0000                     _U1UIR	set	689
   231  0000                     _U1FIFO	set	688
   232  0000                     _U1BRGH	set	687
   233  0000                     _U1BRGL	set	686
   234  0000                     _U1CON2	set	685
   235  0000                     _U1CON1	set	684
   236  0000                     _U1CON0	set	683
   237  0000                     _U1P3H	set	682
   238  0000                     _U1P3L	set	681
   239  0000                     _U1P2H	set	680
   240  0000                     _U1P2L	set	679
   241  0000                     _U1P1H	set	678
   242  0000                     _U1P1L	set	677
   243  0000                     _U1RXPPS	set	626
   244  0000                     _RC5PPS	set	534
   245  0000                     _T2INPPS	set	584
   246  0000                     _RC4PPS	set	533
   247  0000                     _RC1PPS	set	530
   248  0000                     _RB7PPS	set	528
   249  0000                     _PWMIN0PPS	set	599
   250  0000                     _RC0PPS	set	529
   251  0000                     _PWMIN1PPS	set	600
   252  0000                     _CWG1CON0	set	960
   253  0000                     _CWG1ISM	set	957
   254  0000                     _CWG1STR	set	964
   255  0000                     _CWG1CLKCON	set	956
   256  0000                     _CWG1AS1	set	963
   257  0000                     _CWG1AS0	set	962
   258  0000                     _CWG1DBF	set	959
   259  0000                     _CWG1DBR	set	958
   260  0000                     _CWG1CON1	set	961
   261  0000                     _ADCON0	set	1011
   262  0000                     _ADCLK	set	1018
   263  0000                     _ADACT	set	1017
   264  0000                     _ADREF	set	1016
   265  0000                     _ADSTAT	set	1015
   266  0000                     _ADCON3	set	1014
   267  0000                     _ADCON2	set	1013
   268  0000                     _ADCON1	set	1012
   269  0000                     _ADPREH	set	1010
   270  0000                     _ADPREL	set	1009
   271  0000                     _ADCAP	set	1008
   272  0000                     _ADACQH	set	1007
   273  0000                     _ADACQL	set	1006
   274  0000                     _ADPCH	set	1004
   275  0000                     _ADRPT	set	999
   276  0000                     _ADACCU	set	997
   277  0000                     _ADSTPTH	set	992
   278  0000                     _ADSTPTL	set	991
   279  0000                     _ADUTHH	set	988
   280  0000                     _ADUTHL	set	987
   281  0000                     _ADLTHH	set	986
   282  0000                     _ADLTHL	set	985
   283  0000                     _T2CONbits	set	798
   284  0000                     _T2CON	set	798
   285  0000                     _T2TMR	set	796
   286  0000                     _T2PR	set	797
   287  0000                     _T2RST	set	801
   288  0000                     _T2HLT	set	799
   289  0000                     _T2CLKCON	set	800
   290  0000                     _T0CON0bits	set	794
   291  0000                     _T0CON0	set	794
   292  0000                     _TMR0L	set	792
   293  0000                     _TMR0H	set	793
   294  0000                     _T0CON1	set	795
   295  0000                     _INLVLC	set	1044
   296  0000                     _INLVLB	set	1036
   297  0000                     _INLVLA	set	1028
   298  0000                     _SLRCONC	set	1043
   299  0000                     _SLRCONB	set	1035
   300  0000                     _SLRCONA	set	1027
   301  0000                     _ODCONC	set	1042
   302  0000                     _ODCONB	set	1034
   303  0000                     _ODCONA	set	1026
   304  0000                     _WPUC	set	1041
   305  0000                     _WPUA	set	1025
   306  0000                     _WPUB	set	1033
   307  0000                     _ANSELA	set	1024
   308  0000                     _ANSELB	set	1032
   309  0000                     _ANSELC	set	1040
   310  0000                     _LATAbits	set	1214
   311  0000                     _LATCbits	set	1216
   312  0000                     _PORTAbits	set	1230
   313  0000                     _LATBbits	set	1215
   314  0000                     _PWM1CONbits	set	1129
   315  0000                     _PWM1CON	set	1129
   316  0000                     _PIE4bits	set	1196
   317  0000                     _PWM1GIRbits	set	1127
   318  0000                     _PWM1S1P2H	set	1134
   319  0000                     _PWM1S1P2L	set	1133
   320  0000                     _PWM1S1P1H	set	1132
   321  0000                     _PWM1S1P1L	set	1131
   322  0000                     _PWM1S1CFG	set	1130
   323  0000                     _PWM1GIE	set	1128
   324  0000                     _PWM1GIR	set	1127
   325  0000                     _PWM1PIPOS	set	1126
   326  0000                     _PWM1CPRE	set	1125
   327  0000                     _PWM1PRH	set	1124
   328  0000                     _PWM1PRL	set	1123
   329  0000                     _PWM1LDS	set	1122
   330  0000                     _PWM1CLK	set	1121
   331  0000                     _PWM1ERS	set	1120
   332  0000                     _PIR4bits	set	1207
   333  0000                     _TRISC	set	1224
   334  0000                     _TRISB	set	1223
   335  0000                     _TRISA	set	1222
   336  0000                     _LATC	set	1216
   337  0000                     _LATB	set	1215
   338  0000                     _LATA	set	1214
   339  0000                     _PIR3bits	set	1206
   340  0000                     _PIE3bits	set	1195
   341  0000                     _INTCON0bits	set	1238
   342  0000                     
   343                           	psect	smallconst
   344  001500                     __psmallconst:
   345                           	callstack 0
   346  001500  00                 	db	0
   347  001501                     STR_3:
   348                           
   349                           ; BSR set to: 3
   350  001501  53                 	db	83	;'S'
   351  001502  65                 	db	101	;'e'
   352  001503  72                 	db	114	;'r'
   353  001504  76                 	db	118	;'v'
   354  001505  69                 	db	105	;'i'
   355  001506  63                 	db	99	;'c'
   356  001507  65                 	db	101	;'e'
   357  001508  20                 	db	32
   358  001509  4D                 	db	77	;'M'
   359  00150A  6F                 	db	111	;'o'
   360  00150B  64                 	db	100	;'d'
   361  00150C  65                 	db	101	;'e'
   362  00150D  20                 	db	32
   363  00150E  44                 	db	68	;'D'
   364  00150F  65                 	db	101	;'e'
   365  001510  63                 	db	99	;'c'
   366  001511  6F                 	db	111	;'o'
   367  001512  64                 	db	100	;'d'
   368  001513  65                 	db	101	;'e'
   369  001514  72                 	db	114	;'r'
   370  001515  20                 	db	32
   371  001516  4C                 	db	76	;'L'
   372  001517  6F                 	db	111	;'o'
   373  001518  63                 	db	99	;'c'
   374  001519  6B                 	db	107	;'k'
   375  00151A  20                 	db	32
   376  00151B  52                 	db	82	;'R'
   377  00151C  65                 	db	101	;'e'
   378  00151D  71                 	db	113	;'q'
   379  00151E  75                 	db	117	;'u'
   380  00151F  65                 	db	101	;'e'
   381  001520  73                 	db	115	;'s'
   382  001521  74                 	db	116	;'t'
   383  001522  65                 	db	101	;'e'
   384  001523  64                 	db	100	;'d'
   385  001524  20                 	db	32
   386  001525  73                 	db	115	;'s'
   387  001526  65                 	db	101	;'e'
   388  001527  6E                 	db	110	;'n'
   389  001528  74                 	db	116	;'t'
   390  001529  20                 	db	32
   391  00152A  74                 	db	116	;'t'
   392  00152B  6F                 	db	111	;'o'
   393  00152C  20                 	db	32
   394  00152D  25                 	db	37
   395  00152E  64                 	db	100	;'d'
   396  00152F  20                 	db	32
   397  001530  6C                 	db	108	;'l'
   398  001531  6F                 	db	111	;'o'
   399  001532  63                 	db	99	;'c'
   400  001533  6B                 	db	107	;'k'
   401  001534  69                 	db	105	;'i'
   402  001535  6E                 	db	110	;'n'
   403  001536  67                 	db	103	;'g'
   404  001537  20                 	db	32
   405  001538  61                 	db	97	;'a'
   406  001539  64                 	db	100	;'d'
   407  00153A  64                 	db	100	;'d'
   408  00153B  72                 	db	114	;'r'
   409  00153C  65                 	db	101	;'e'
   410  00153D  73                 	db	115	;'s'
   411  00153E  73                 	db	115	;'s'
   412  00153F  3D                 	db	61	;'='
   413  001540  25                 	db	37
   414  001541  64                 	db	100	;'d'
   415  001542  00                 	db	0
   416  001543                     STR_4:
   417                           
   418                           ; BSR set to: 3
   419  001543  43                 	db	67	;'C'
   420  001544  56                 	db	86	;'V'
   421  001545  20                 	db	32
   422  001546  41                 	db	65	;'A'
   423  001547  63                 	db	99	;'c'
   424  001548  63                 	db	99	;'c'
   425  001549  65                 	db	101	;'e'
   426  00154A  73                 	db	115	;'s'
   427  00154B  73                 	db	115	;'s'
   428  00154C  20                 	db	32
   429  00154D  53                 	db	83	;'S'
   430  00154E  68                 	db	104	;'h'
   431  00154F  6F                 	db	111	;'o'
   432  001550  72                 	db	114	;'r'
   433  001551  74                 	db	116	;'t'
   434  001552  20                 	db	32
   435  001553  46                 	db	70	;'F'
   436  001554  6F                 	db	111	;'o'
   437  001555  72                 	db	114	;'r'
   438  001556  6D                 	db	109	;'m'
   439  001557  20                 	db	32
   440  001558  75                 	db	117	;'u'
   441  001559  6E                 	db	110	;'n'
   442  00155A  64                 	db	100	;'d'
   443  00155B  65                 	db	101	;'e'
   444  00155C  66                 	db	102	;'f'
   445  00155D  69                 	db	105	;'i'
   446  00155E  6E                 	db	110	;'n'
   447  00155F  65                 	db	101	;'e'
   448  001560  64                 	db	100	;'d'
   449  001561  20                 	db	32
   450  001562  76                 	db	118	;'v'
   451  001563  61                 	db	97	;'a'
   452  001564  6C                 	db	108	;'l'
   453  001565  75                 	db	117	;'u'
   454  001566  65                 	db	101	;'e'
   455  001567  20                 	db	32
   456  001568  25                 	db	37
   457  001569  78                 	db	120	;'x'
   458  00156A  2C                 	db	44
   459  00156B  20                 	db	32
   460  00156C  69                 	db	105	;'i'
   461  00156D  67                 	db	103	;'g'
   462  00156E  6E                 	db	110	;'n'
   463  00156F  6F                 	db	111	;'o'
   464  001570  72                 	db	114	;'r'
   465  001571  69                 	db	105	;'i'
   466  001572  6E                 	db	110	;'n'
   467  001573  67                 	db	103	;'g'
   468  001574  00                 	db	0
   469  001575                     STR_2:
   470                           
   471                           ; BSR set to: 3
   472  001575  25                 	db	37
   473  001576  64                 	db	100	;'d'
   474  001577  20                 	db	32
   475  001578  69                 	db	105	;'i'
   476  001579  73                 	db	115	;'s'
   477  00157A  20                 	db	32
   478  00157B  25                 	db	37
   479  00157C  63                 	db	99	;'c'
   480  00157D  40                 	db	64	;'@'
   481  00157E  25                 	db	37
   482  00157F  64                 	db	100	;'d'
   483  001580  2F                 	db	47
   484  001581  25                 	db	37
   485  001582  64                 	db	100	;'d'
   486  001583  20                 	db	32
   487  001584  46                 	db	70	;'F'
   488  001585  6E                 	db	110	;'n'
   489  001586  3D                 	db	61	;'='
   490  001587  25                 	db	37
   491  001588  64                 	db	100	;'d'
   492  001589  25                 	db	37
   493  00158A  64                 	db	100	;'d'
   494  00158B  25                 	db	37
   495  00158C  64                 	db	100	;'d'
   496  00158D  25                 	db	37
   497  00158E  64                 	db	100	;'d'
   498  00158F  25                 	db	37
   499  001590  64                 	db	100	;'d'
   500  001591  25                 	db	37
   501  001592  64                 	db	100	;'d'
   502  001593  25                 	db	37
   503  001594  64                 	db	100	;'d'
   504  001595  25                 	db	37
   505  001596  64                 	db	100	;'d'
   506  001597  25                 	db	37
   507  001598  64                 	db	100	;'d'
   508  001599  25                 	db	37
   509  00159A  64                 	db	100	;'d'
   510  00159B  25                 	db	37
   511  00159C  64                 	db	100	;'d'
   512  00159D  25                 	db	37
   513  00159E  64                 	db	100	;'d'
   514  00159F  25                 	db	37
   515  0015A0  64                 	db	100	;'d'
   516  0015A1  0D                 	db	13
   517  0015A2  0A                 	db	10
   518  0015A3  00                 	db	0
   519  0015A4                     STR_5:
   520                           
   521                           ; BSR set to: 3
   522  0015A4  50                 	db	80	;'P'
   523  0015A5  65                 	db	101	;'e'
   524  0015A6  72                 	db	114	;'r'
   525  0015A7  66                 	db	102	;'f'
   526  0015A8  3A                 	db	58	;':'
   527  0015A9  20                 	db	32
   528  0015AA  25                 	db	37
   529  0015AB  6C                 	db	108	;'l'
   530  0015AC  75                 	db	117	;'u'
   531  0015AD  2F                 	db	47
   532  0015AE  25                 	db	37
   533  0015AF  75                 	db	117	;'u'
   534  0015B0  2F                 	db	47
   535  0015B1  25                 	db	37
   536  0015B2  75                 	db	117	;'u'
   537  0015B3  20                 	db	32
   538  0015B4  28                 	db	40
   539  0015B5  25                 	db	37
   540  0015B6  75                 	db	117	;'u'
   541  0015B7  2C                 	db	44
   542  0015B8  20                 	db	32
   543  0015B9  25                 	db	37
   544  0015BA  75                 	db	117	;'u'
   545  0015BB  29                 	db	41
   546  0015BC  0D                 	db	13
   547  0015BD  0A                 	db	10
   548  0015BE  00                 	db	0
   549  0015BF                     STR_1:
   550                           
   551                           ; BSR set to: 3
   552  0015BF  0D                 	db	13
   553  0015C0  0A                 	db	10
   554  0015C1  53                 	db	83	;'S'
   555  0015C2  79                 	db	121	;'y'
   556  0015C3  73                 	db	115	;'s'
   557  0015C4  74                 	db	116	;'t'
   558  0015C5  65                 	db	101	;'e'
   559  0015C6  6D                 	db	109	;'m'
   560  0015C7  20                 	db	32
   561  0015C8  42                 	db	66	;'B'
   562  0015C9  6F                 	db	111	;'o'
   563  0015CA  6F                 	db	111	;'o'
   564  0015CB  74                 	db	116	;'t'
   565  0015CC  0D                 	db	13
   566  0015CD  0A                 	db	10
   567  0015CE  00                 	db	0
   568  0015CF                     STR_24:
   569                           
   570                           ; BSR set to: 3
   571  0015CF  6C                 	db	108	;'l'
   572  0015D0  58                 	db	88	;'X'
   573  0015D1  00                 	db	0
   574  0015D2                     STR_6:
   575                           
   576                           ; BSR set to: 3
   577  0015D2  6C                 	db	108	;'l'
   578  0015D3  64                 	db	100	;'d'
   579  0015D4  00                 	db	0
   580  0015D5                     STR_10:
   581                           
   582                           ; BSR set to: 3
   583  0015D5  6C                 	db	108	;'l'
   584  0015D6  69                 	db	105	;'i'
   585  0015D7  00                 	db	0
   586  0015D8                     STR_15:
   587                           
   588                           ; BSR set to: 3
   589  0015D8  6C                 	db	108	;'l'
   590  0015D9  75                 	db	117	;'u'
   591  0015DA  00                 	db	0
   592  0015DB                     STR_20:
   593                           
   594                           ; BSR set to: 3
   595  0015DB  6C                 	db	108	;'l'
   596  0015DC  78                 	db	120	;'x'
   597  0015DD  00                 	db	0
   598  0015DE  00                 	db	0	; dummy byte at the end
   599  0000                     
   600                           ; #config settings
   601                           
   602                           	psect	cinit
   603  0039CE                     __pcinit:
   604                           	callstack 0
   605  0039CE                     start_initialization:
   606                           	callstack 0
   607  0039CE                     __initialization:
   608                           	callstack 0
   609                           
   610                           ; Initialize objects allocated to BANK6 (32 bytes)
   611                           ; load TBLPTR registers with __pidataBANK6
   612  0039CE  0EFA               	movlw	low __pidataBANK6
   613  0039D0  6EF6               	movwf	tblptrl,c
   614  0039D2  0E3F               	movlw	high __pidataBANK6
   615  0039D4  6EF7               	movwf	tblptrh,c
   616  0039D6  0E00               	movlw	low (__pidataBANK6 shr (0+16))
   617  0039D8  6EF8               	movwf	tblptru,c
   618  0039DA  EE01  F220         	lfsr	0,__pdataBANK6
   619  0039DE  EE10 F020          	lfsr	1,32
   620  0039E2                     copy_data0:
   621  0039E2  0009               	tblrd		*+
   622  0039E4  C4F5 F4EE          	movff	tablat,postinc0
   623  0039E8  50E5               	movf	postdec1,w,c
   624  0039EA  50E1               	movf	fsr1l,w,c
   625  0039EC  E1FA               	bnz	copy_data0
   626                           
   627                           ; Initialize objects allocated to BANK5 (2 bytes)
   628                           ; load TBLPTR registers with __pidataBANK5
   629  0039EE  0E62               	movlw	low __pidataBANK5
   630  0039F0  6EF6               	movwf	tblptrl,c
   631  0039F2  0E41               	movlw	high __pidataBANK5
   632  0039F4  6EF7               	movwf	tblptrh,c
   633  0039F6  0E00               	movlw	low (__pidataBANK5 shr (0+16))
   634  0039F8  6EF8               	movwf	tblptru,c
   635  0039FA  0009               	tblrd		*+	;fetch initializer
   636  0039FC  0061 F3D4  F5F3    	movff	tablat,__pdataBANK5
   637  003A02  0009               	tblrd		*+	;fetch initializer
   638  003A04  0061 F3D4  F5F4    	movff	tablat,__pdataBANK5+1
   639                           
   640                           ; Clear objects allocated to BANK6 (32 bytes)
   641  003A0A  EE01  F200         	lfsr	0,__pbssBANK6
   642  003A0E  0E20               	movlw	32
   643  003A10                     clear_0:
   644  003A10  6AEE               	clrf	postinc0,c
   645  003A12  06E8               	decf	wreg,f,c
   646  003A14  E1FD               	bnz	clear_0
   647                           
   648                           ; Clear objects allocated to BANK5 (57 bytes)
   649  003A16  EE01  F1AC         	lfsr	0,__pbssBANK5
   650  003A1A  0E39               	movlw	57
   651  003A1C                     clear_1:
   652  003A1C  6AEE               	clrf	postinc0,c
   653  003A1E  06E8               	decf	wreg,f,c
   654  003A20  E1FD               	bnz	clear_1
   655                           
   656                           ; Clear objects allocated to COMRAM (2 bytes)
   657  003A22  6A5D               	clrf	(__pbssCOMRAM+1)& (0+255),c
   658  003A24  6A5C               	clrf	__pbssCOMRAM& (0+255),c
   659                           
   660                           ;
   661                           ; Setup IVTBASE
   662                           ;
   663  003A26  0104               	movlb	4
   664  003A28  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   665  003A2A  6F5D               	movwf	93,b
   666  003A2C  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   667  003A2E  6F5E               	movwf	94,b
   668  003A30  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   669  003A32  6F5F               	movwf	95,b
   670  003A34                     end_of_initialization:
   671                           	callstack 0
   672  003A34                     __end_of__initialization:
   673                           	callstack 0
   674  003A34  0100               	movlb	0
   675  003A36  EFD1  F019         	goto	_main	;jump to C main() function
   676                           
   677                           	psect	bssCOMRAM
   678  00055C                     __pbssCOMRAM:
   679                           	callstack 0
   680  00055C                     _flags:
   681                           	callstack 0
   682  00055C                     	ds	2
   683                           
   684                           	psect	bssBANK5
   685  0005AC                     __pbssBANK5:
   686                           	callstack 0
   687  0005AC                     _my_dcc_functions:
   688                           	callstack 0
   689  0005AC                     	ds	13
   690  0005B9                     _dcc_bits:
   691                           	callstack 0
   692  0005B9                     	ds	6
   693  0005BF                     _dcc_mesg:
   694                           	callstack 0
   695  0005BF                     	ds	6
   696  0005C5                     _idle_count:
   697                           	callstack 0
   698  0005C5                     	ds	4
   699  0005C9                     _nout:
   700                           	callstack 0
   701  0005C9                     	ds	2
   702  0005CB                     _width:
   703                           	callstack 0
   704  0005CB                     	ds	2
   705  0005CD                     _prec:
   706                           	callstack 0
   707  0005CD                     	ds	2
   708  0005CF                     _dcc_overrun:
   709                           	callstack 0
   710  0005CF                     	ds	2
   711  0005D1                     _dcc_ones:
   712                           	callstack 0
   713  0005D1                     	ds	2
   714  0005D3                     _dcc_zeros:
   715                           	callstack 0
   716  0005D3                     	ds	2
   717  0005D5                     _dcc_drops:
   718                           	callstack 0
   719  0005D5                     	ds	2
   720  0005D7                     _dcc_interrupts:
   721                           	callstack 0
   722  0005D7                     	ds	2
   723  0005D9                     _my_dcc_address:
   724                           	callstack 0
   725  0005D9                     	ds	2
   726  0005DB                     _motor_direction:
   727                           	callstack 0
   728  0005DB                     	ds	1
   729  0005DC                     _motor_speed:
   730                           	callstack 0
   731  0005DC                     	ds	1
   732  0005DD                     _cv_cv29:
   733                           	callstack 0
   734  0005DD                     	ds	1
   735  0005DE                     _preamble:
   736                           	callstack 0
   737  0005DE                     	ds	1
   738  0005DF                     _dcc_byte:
   739                           	callstack 0
   740  0005DF                     	ds	1
   741  0005E0                     _dcc_ready:
   742                           	callstack 0
   743  0005E0                     	ds	1
   744  0005E1                     _dcc_len:
   745                           	callstack 0
   746  0005E1                     	ds	1
   747  0005E2                     _my_dcc_speed:
   748                           	callstack 0
   749  0005E2                     	ds	1
   750  0005E3                     _my_dcc_speedsteps:
   751                           	callstack 0
   752  0005E3                     	ds	1
   753  0005E4                     _uart1RxLastError:
   754                           	callstack 0
   755  0005E4                     	ds	1
   756                           
   757                           	psect	dataBANK5
   758  0005F3                     __pdataBANK5:
   759                           	callstack 0
   760  0005F3                     _dcc_bit:
   761                           	callstack 0
   762  0005F3                     	ds	1
   763  0005F4                     _my_dcc_direction:
   764                           	callstack 0
   765  0005F4                     	ds	1
   766                           
   767                           	psect	bssBANK6
   768  000600                     __pbssBANK6:
   769                           	callstack 0
   770  000600                     _dbuf:
   771                           	callstack 0
   772  000600                     	ds	32
   773                           
   774                           	psect	dataBANK6
   775  000620                     __pdataBANK6:
   776                           	callstack 0
   777  000620                     _dcc_speeds:
   778                           	callstack 0
   779  000620                     	ds	32
   780                           
   781                           	psect	cstackBANK5
   782  000560                     __pcstackBANK5:
   783                           	callstack 0
   784  000560                     vfpfcnvrt@ll:
   785                           	callstack 0
   786                           
   787                           ; 8 bytes @ 0x0
   788  000560                     	ds	8
   789  000568                     vfpfcnvrt@c:
   790                           	callstack 0
   791                           
   792                           ; 1 bytes @ 0x8
   793  000568                     	ds	1
   794  000569                     vfpfcnvrt@llu:
   795                           	callstack 0
   796                           
   797                           ; 8 bytes @ 0x9
   798  000569                     	ds	8
   799  000571                     ?_vfprintf:
   800                           	callstack 0
   801  000571                     vfprintf@fp:
   802                           	callstack 0
   803                           
   804                           ; 2 bytes @ 0x11
   805  000571                     	ds	2
   806  000573                     vfprintf@fmt:
   807                           	callstack 0
   808                           
   809                           ; 1 bytes @ 0x13
   810  000573                     	ds	1
   811  000574                     vfprintf@ap:
   812                           	callstack 0
   813                           
   814                           ; 2 bytes @ 0x14
   815  000574                     	ds	2
   816  000576                     ?_printf:
   817                           	callstack 0
   818  000576                     printf@fmt:
   819                           	callstack 0
   820                           
   821                           ; 1 bytes @ 0x16
   822  000576                     	ds	35
   823  000599                     printf@ap:
   824                           	callstack 0
   825                           
   826                           ; 2 bytes @ 0x39
   827  000599                     	ds	2
   828  00059B                     ??_dcc_decode:
   829                           
   830                           ; 1 bytes @ 0x3B
   831  00059B                     	ds	3
   832  00059E                     _dcc_decode$1841:
   833                           	callstack 0
   834                           
   835                           ; 2 bytes @ 0x3E
   836  00059E                     	ds	2
   837  0005A0                     _dcc_decode$1845:
   838                           	callstack 0
   839                           
   840                           ; 2 bytes @ 0x40
   841  0005A0                     	ds	2
   842  0005A2                     dcc_decode@i_start:
   843                           	callstack 0
   844                           
   845                           ; 1 bytes @ 0x42
   846  0005A2                     	ds	1
   847  0005A3                     dcc_decode@bit:
   848                           	callstack 0
   849                           
   850                           ; 1 bytes @ 0x43
   851  0005A3                     	ds	1
   852  0005A4                     dcc_decode@value:
   853                           	callstack 0
   854                           
   855                           ; 1 bytes @ 0x44
   856  0005A4                     	ds	1
   857  0005A5                     dcc_decode@pkt_addr:
   858                           	callstack 0
   859                           
   860                           ; 2 bytes @ 0x45
   861  0005A5                     	ds	2
   862  0005A7                     dcc_decode@cv_address:
   863                           	callstack 0
   864                           
   865                           ; 2 bytes @ 0x47
   866  0005A7                     	ds	2
   867  0005A9                     dcc_decode@i:
   868                           	callstack 0
   869                           
   870                           ; 1 bytes @ 0x49
   871  0005A9                     	ds	1
   872  0005AA                     main@xor:
   873                           	callstack 0
   874                           
   875                           ; 1 bytes @ 0x4A
   876  0005AA                     	ds	1
   877  0005AB                     main@idx:
   878                           	callstack 0
   879                           
   880                           ; 1 bytes @ 0x4B
   881  0005AB                     	ds	1
   882                           
   883                           	psect	cstackCOMRAM
   884  000501                     __pcstackCOMRAM:
   885                           	callstack 0
   886  000501                     ??_DCC_ISR:
   887  000501                     
   888                           ; 1 bytes @ 0x0
   889  000501                     	ds	2
   890  000503                     ?_strlen:
   891                           	callstack 0
   892  000503                     ?_isupper:
   893                           	callstack 0
   894  000503                     ?_isalpha:
   895                           	callstack 0
   896  000503                     ?_strncmp:
   897                           	callstack 0
   898  000503                     ?_islower:
   899                           	callstack 0
   900  000503                     ?___aodiv:
   901                           	callstack 0
   902  000503                     ?___aomod:
   903                           	callstack 0
   904  000503                     ?___lodiv:
   905                           	callstack 0
   906  000503                     ?___lomod:
   907                           	callstack 0
   908  000503                     UART1_Write@txData:
   909                           	callstack 0
   910  000503                     strncmp@_l:
   911                           	callstack 0
   912  000503                     TMR2_SetInterruptHandler@InterruptHandler:
   913                           	callstack 0
   914  000503                     UART1_SetFramingErrorHandler@interruptHandler:
   915                           	callstack 0
   916  000503                     UART1_SetOverrunErrorHandler@interruptHandler:
   917                           	callstack 0
   918  000503                     UART1_SetErrorHandler@interruptHandler:
   919                           	callstack 0
   920  000503                     DATAEE_WriteByte@bAdd:
   921                           	callstack 0
   922  000503                     DATAEE_ReadByte@bAdd:
   923                           	callstack 0
   924  000503                     PWM1_16BIT_SetSlice1Output2DutyCycleRegister@registerValue:
   925                           	callstack 0
   926  000503                     PWM1_16BIT_Slice1Output1_SetInterruptHandler@InterruptHandler:
   927                           	callstack 0
   928  000503                     PWM1_16BIT_Slice1Output2_SetInterruptHandler@InterruptHandler:
   929                           	callstack 0
   930  000503                     PWM1_16BIT_Period_SetInterruptHandler@InterruptHandler:
   931                           	callstack 0
   932  000503                     isalpha@c:
   933                           	callstack 0
   934  000503                     isupper@c:
   935                           	callstack 0
   936  000503                     strlen@s:
   937                           	callstack 0
   938  000503                     islower@c:
   939                           	callstack 0
   940  000503                     ___aodiv@dividend:
   941                           	callstack 0
   942  000503                     ___aomod@dividend:
   943                           	callstack 0
   944  000503                     ___lodiv@dividend:
   945                           	callstack 0
   946  000503                     ___lomod@dividend:
   947                           	callstack 0
   948                           
   949                           ; 8 bytes @ 0x2
   950  000503                     	ds	1
   951  000504                     putch@txData:
   952                           	callstack 0
   953  000504                     strncmp@_r:
   954                           	callstack 0
   955                           
   956                           ; 1 bytes @ 0x3
   957  000504                     	ds	1
   958  000505                     ??_isupper:
   959  000505                     ??_isalpha:
   960  000505                     ??_islower:
   961  000505                     DATAEE_WriteByte@bData:
   962                           	callstack 0
   963  000505                     motor_control@speed:
   964                           	callstack 0
   965  000505                     cv_read@cv:
   966                           	callstack 0
   967  000505                     fputc@c:
   968                           	callstack 0
   969  000505                     strlen@a:
   970                           	callstack 0
   971  000505                     strncmp@n:
   972                           	callstack 0
   973                           
   974                           ; 2 bytes @ 0x4
   975  000505                     	ds	1
   976  000506                     DATAEE_WriteByte@GIEBitValue:
   977                           	callstack 0
   978  000506                     motor_control@direction:
   979                           	callstack 0
   980                           
   981                           ; 1 bytes @ 0x5
   982  000506                     	ds	1
   983  000507                     ??_dcc_initialize:
   984  000507                     ??_strncmp:
   985  000507                     motor_control@speedsteps:
   986                           	callstack 0
   987  000507                     cv_write@cv:
   988                           	callstack 0
   989  000507                     fputc@fp:
   990                           	callstack 0
   991                           
   992                           ; 2 bytes @ 0x6
   993  000507                     	ds	1
   994  000508                     strncmp@l:
   995                           	callstack 0
   996                           
   997                           ; 1 bytes @ 0x7
   998  000508                     	ds	1
   999  000509                     ??_fputc:
  1000  000509                     ?_toupper:
  1001                           	callstack 0
  1002  000509                     cv_write@value:
  1003                           	callstack 0
  1004  000509                     strncmp@r:
  1005                           	callstack 0
  1006  000509                     toupper@c:
  1007                           	callstack 0
  1008                           
  1009                           ; 2 bytes @ 0x8
  1010  000509                     	ds	1
  1011  00050A                     
  1012                           ; 1 bytes @ 0x9
  1013  00050A                     	ds	1
  1014  00050B                     ??_toupper:
  1015  00050B                     ___aodiv@divisor:
  1016                           	callstack 0
  1017  00050B                     ___aomod@divisor:
  1018                           	callstack 0
  1019  00050B                     ___lodiv@divisor:
  1020                           	callstack 0
  1021  00050B                     ___lomod@divisor:
  1022                           	callstack 0
  1023                           
  1024                           ; 8 bytes @ 0xA
  1025  00050B                     	ds	3
  1026  00050E                     ?_ctoa:
  1027                           	callstack 0
  1028  00050E                     ctoa@fp:
  1029                           	callstack 0
  1030  00050E                     fputs@s:
  1031                           	callstack 0
  1032                           
  1033                           ; 2 bytes @ 0xD
  1034  00050E                     	ds	1
  1035  00050F                     _toupper$2594:
  1036                           	callstack 0
  1037                           
  1038                           ; 2 bytes @ 0xE
  1039  00050F                     	ds	1
  1040  000510                     ctoa@c:
  1041                           	callstack 0
  1042  000510                     fputs@fp:
  1043                           	callstack 0
  1044                           
  1045                           ; 2 bytes @ 0xF
  1046  000510                     	ds	1
  1047  000511                     ??_ctoa:
  1048                           
  1049                           ; 1 bytes @ 0x10
  1050  000511                     	ds	1
  1051  000512                     fputs@c:
  1052                           	callstack 0
  1053  000512                     ctoa@l:
  1054                           	callstack 0
  1055                           
  1056                           ; 2 bytes @ 0x11
  1057  000512                     	ds	1
  1058  000513                     ___aodiv@counter:
  1059                           	callstack 0
  1060  000513                     ___aomod@counter:
  1061                           	callstack 0
  1062  000513                     ___lomod@counter:
  1063                           	callstack 0
  1064  000513                     fputs@i:
  1065                           	callstack 0
  1066  000513                     ___lodiv@quotient:
  1067                           	callstack 0
  1068                           
  1069                           ; 8 bytes @ 0x12
  1070  000513                     	ds	1
  1071  000514                     ___aodiv@sign:
  1072                           	callstack 0
  1073  000514                     ___aomod@sign:
  1074                           	callstack 0
  1075  000514                     ctoa@w:
  1076                           	callstack 0
  1077                           
  1078                           ; 2 bytes @ 0x13
  1079  000514                     	ds	1
  1080  000515                     ?_abs:
  1081                           	callstack 0
  1082  000515                     ?_pad:
  1083                           	callstack 0
  1084  000515                     pad@fp:
  1085                           	callstack 0
  1086  000515                     abs@a:
  1087                           	callstack 0
  1088  000515                     ___aodiv@quotient:
  1089                           	callstack 0
  1090                           
  1091                           ; 8 bytes @ 0x14
  1092  000515                     	ds	2
  1093  000517                     ??_abs:
  1094  000517                     pad@buf:
  1095                           	callstack 0
  1096                           
  1097                           ; 2 bytes @ 0x16
  1098  000517                     	ds	2
  1099  000519                     pad@p:
  1100                           	callstack 0
  1101                           
  1102                           ; 2 bytes @ 0x18
  1103  000519                     	ds	2
  1104  00051B                     ??_pad:
  1105  00051B                     ___lodiv@counter:
  1106                           	callstack 0
  1107                           
  1108                           ; 1 bytes @ 0x1A
  1109  00051B                     	ds	1
  1110  00051C                     pad@i:
  1111                           	callstack 0
  1112                           
  1113                           ; 2 bytes @ 0x1B
  1114  00051C                     	ds	2
  1115  00051E                     pad@w:
  1116                           	callstack 0
  1117                           
  1118                           ; 2 bytes @ 0x1D
  1119  00051E                     	ds	2
  1120  000520                     ?_dtoa:
  1121                           	callstack 0
  1122  000520                     ?_utoa:
  1123                           	callstack 0
  1124  000520                     ?_xtoa:
  1125                           	callstack 0
  1126  000520                     dtoa@fp:
  1127                           	callstack 0
  1128  000520                     utoa@fp:
  1129                           	callstack 0
  1130  000520                     xtoa@fp:
  1131                           	callstack 0
  1132                           
  1133                           ; 2 bytes @ 0x1F
  1134  000520                     	ds	2
  1135  000522                     dtoa@d:
  1136                           	callstack 0
  1137  000522                     utoa@d:
  1138                           	callstack 0
  1139  000522                     xtoa@d:
  1140                           	callstack 0
  1141                           
  1142                           ; 8 bytes @ 0x21
  1143  000522                     	ds	8
  1144  00052A                     ??_dtoa:
  1145  00052A                     ??_utoa:
  1146  00052A                     xtoa@x:
  1147                           	callstack 0
  1148                           
  1149                           ; 1 bytes @ 0x29
  1150  00052A                     	ds	1
  1151  00052B                     ??_xtoa:
  1152                           
  1153                           ; 1 bytes @ 0x2A
  1154  00052B                     	ds	7
  1155  000532                     _dtoa$2466:
  1156                           	callstack 0
  1157  000532                     utoa@p:
  1158                           	callstack 0
  1159                           
  1160                           ; 2 bytes @ 0x31
  1161  000532                     	ds	1
  1162  000533                     _xtoa$2484:
  1163                           	callstack 0
  1164                           
  1165                           ; 2 bytes @ 0x32
  1166  000533                     	ds	1
  1167  000534                     dtoa@p:
  1168                           	callstack 0
  1169  000534                     utoa@w:
  1170                           	callstack 0
  1171                           
  1172                           ; 2 bytes @ 0x33
  1173  000534                     	ds	1
  1174  000535                     _xtoa$2485:
  1175                           	callstack 0
  1176                           
  1177                           ; 2 bytes @ 0x34
  1178  000535                     	ds	1
  1179  000536                     dtoa@w:
  1180                           	callstack 0
  1181  000536                     utoa@n:
  1182                           	callstack 0
  1183                           
  1184                           ; 8 bytes @ 0x35
  1185  000536                     	ds	1
  1186  000537                     xtoa@p:
  1187                           	callstack 0
  1188                           
  1189                           ; 2 bytes @ 0x36
  1190  000537                     	ds	1
  1191  000538                     dtoa@s:
  1192                           	callstack 0
  1193                           
  1194                           ; 2 bytes @ 0x37
  1195  000538                     	ds	1
  1196  000539                     xtoa@w:
  1197                           	callstack 0
  1198                           
  1199                           ; 2 bytes @ 0x38
  1200  000539                     	ds	1
  1201  00053A                     dtoa@n:
  1202                           	callstack 0
  1203                           
  1204                           ; 8 bytes @ 0x39
  1205  00053A                     	ds	1
  1206  00053B                     xtoa@n:
  1207                           	callstack 0
  1208                           
  1209                           ; 8 bytes @ 0x3A
  1210  00053B                     	ds	3
  1211  00053E                     utoa@i:
  1212                           	callstack 0
  1213                           
  1214                           ; 2 bytes @ 0x3D
  1215  00053E                     	ds	4
  1216  000542                     dtoa@i:
  1217                           	callstack 0
  1218                           
  1219                           ; 2 bytes @ 0x41
  1220  000542                     	ds	1
  1221  000543                     xtoa@i:
  1222                           	callstack 0
  1223                           
  1224                           ; 2 bytes @ 0x42
  1225  000543                     	ds	2
  1226  000545                     xtoa@c:
  1227                           	callstack 0
  1228                           
  1229                           ; 2 bytes @ 0x44
  1230  000545                     	ds	2
  1231  000547                     ?_vfpfcnvrt:
  1232                           	callstack 0
  1233  000547                     vfpfcnvrt@fp:
  1234                           	callstack 0
  1235                           
  1236                           ; 2 bytes @ 0x46
  1237  000547                     	ds	2
  1238  000549                     vfpfcnvrt@fmt:
  1239                           	callstack 0
  1240                           
  1241                           ; 2 bytes @ 0x48
  1242  000549                     	ds	2
  1243  00054B                     vfpfcnvrt@ap:
  1244                           	callstack 0
  1245                           
  1246                           ; 2 bytes @ 0x4A
  1247  00054B                     	ds	2
  1248  00054D                     ??_vfpfcnvrt:
  1249                           
  1250                           ; 1 bytes @ 0x4C
  1251  00054D                     	ds	14
  1252  00055B                     vfprintf@cfmt:
  1253                           	callstack 0
  1254                           
  1255                           ; 1 bytes @ 0x5A
  1256  00055B                     	ds	1
  1257  00055C                     
  1258                           ; 1 bytes @ 0x5B
  1259 ;;
  1260 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1261 ;;
  1262 ;; *************** function _main *****************
  1263 ;; Defined at:
  1264 ;;		line 73 in file "main.c"
  1265 ;; Parameters:    Size  Location     Type
  1266 ;;		None
  1267 ;; Auto vars:     Size  Location     Type
  1268 ;;  idx             1   75[BANK5 ] unsigned char 
  1269 ;;  xor             1   74[BANK5 ] unsigned char 
  1270 ;; Return value:  Size  Location     Type
  1271 ;;                  1    wreg      void 
  1272 ;; Registers used:
  1273 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1274 ;; Tracked objects:
  1275 ;;		On entry : 0/0
  1276 ;;		On exit  : 3F/5
  1277 ;;		Unchanged: 0/0
  1278 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  1279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1280 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1282 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1283 ;;Total ram usage:        2 bytes
  1284 ;; Hardware stack levels required when called: 13
  1285 ;; This function calls:
  1286 ;;		_SYSTEM_Initialize
  1287 ;;		_TMR0_HasOverflowOccured
  1288 ;;		_TMR0_Initialize
  1289 ;;		_TMR0_StartTimer
  1290 ;;		_TMR2_SetInterruptHandler
  1291 ;;		_TMR2_StartTimer
  1292 ;;		_cv_check
  1293 ;;		_dcc_decode
  1294 ;;		_dcc_idle
  1295 ;;		_dcc_initialize
  1296 ;;		_dcc_performance
  1297 ;;		_printf
  1298 ;; This function is called by:
  1299 ;;		Startup code after reset
  1300 ;; This function uses a non-reentrant model
  1301 ;;
  1302                           
  1303                           	psect	text0
  1304  0033A2                     __ptext0:
  1305                           	callstack 0
  1306  0033A2                     _main:
  1307                           	callstack 114
  1308                           
  1309                           ;main.c: 76:     SYSTEM_Initialize();
  1310                           
  1311                           ;incstack = 0
  1312  0033A2  ECB3  F01F         	call	_SYSTEM_Initialize	;wreg free
  1313                           
  1314                           ; BSR set to: 5
  1315  0033A6  9CBF               	bcf	191,6,c	;volatile
  1316                           
  1317                           ; BSR set to: 5
  1318                           ;main.c: 82:     TMR2_SetInterruptHandler(DCC_ISR);
  1319  0033A8  0E94               	movlw	low _DCC_ISR
  1320  0033AA  6E03               	movwf	TMR2_SetInterruptHandler@InterruptHandler^(0+1280),c
  1321  0033AC  0E34               	movlw	high _DCC_ISR
  1322  0033AE  6E04               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)^(0+1280),c
  1323  0033B0  EC91  F020         	call	_TMR2_SetInterruptHandler	;wreg free
  1324                           
  1325                           ;main.c: 85:     printf("\r\nSystem Boot\r\n");
  1326  0033B4  0EBF               	movlw	low STR_1
  1327  0033B6  0105               	movlb	5	; () banked
  1328  0033B8  6F76               	movwf	printf@fmt& (0+255),b
  1329  0033BA  ECDB  F01F         	call	_printf	;wreg free
  1330                           
  1331                           ; BSR set to: 5
  1332                           ;main.c: 89:     cv_check();
  1333  0033BE  EC9E  F01F         	call	_cv_check	;wreg free
  1334                           
  1335                           ;main.c: 92:     dcc_initialize();
  1336  0033C2  EC7E  F01E         	call	_dcc_initialize	;wreg free
  1337                           
  1338                           ; BSR set to: 5
  1339                           ;main.c: 95:     (INTCON0bits.GIE = 1);
  1340  0033C6  8ED6               	bsf	214,7,c	;volatile
  1341                           
  1342                           ; BSR set to: 5
  1343                           ;main.c: 98:     TMR2_StartTimer();
  1344  0033C8  ECA5  F020         	call	_TMR2_StartTimer	;wreg free
  1345  0033CC                     l5290:
  1346                           
  1347                           ;main.c: 101:     {;main.c: 103:         TMR0_Initialize();
  1348  0033CC  EC4F  F020         	call	_TMR0_Initialize	;wreg free
  1349                           
  1350                           ; BSR set to: 3
  1351                           ;main.c: 104:         TMR0_StartTimer();
  1352  0033D0  ECAD  F020         	call	_TMR0_StartTimer	;wreg free
  1353                           
  1354                           ;main.c: 107:         while(!TMR0_HasOverflowOccured()) {
  1355  0033D4  D01E               	goto	l5312
  1356  0033D6                     l5294:
  1357                           
  1358                           ;main.c: 109:             dcc_idle();
  1359  0033D6  EC5A  F020         	call	_dcc_idle	;wreg free
  1360                           
  1361                           ; BSR set to: 5
  1362                           ;main.c: 112:             if (dcc_ready) {
  1363  0033DA  51E0               	movf	_dcc_ready& (0+255),w,b	;volatile
  1364  0033DC  B4D8               	btfsc	status,2,c
  1365  0033DE  D019               	goto	l5312
  1366                           
  1367                           ; BSR set to: 5
  1368                           ;main.c: 113:                 uint8_t xor = 0;
  1369  0033E0  0E00               	movlw	0
  1370  0033E2  6FAA               	movwf	main@xor& (0+255),b
  1371                           
  1372                           ;main.c: 116:                 for (uint8_t idx = 0; idx < dcc_len; ++idx) {
  1373  0033E4  0E00               	movlw	0
  1374  0033E6  6FAB               	movwf	main@idx& (0+255),b
  1375  0033E8  D009               	goto	l5304
  1376  0033EA                     l5300:
  1377                           
  1378                           ; BSR set to: 5
  1379                           ;main.c: 117:                     xor ^= dcc_mesg[idx];
  1380  0033EA  0EBF               	movlw	low _dcc_mesg
  1381  0033EC  25AB               	addwf	main@idx& (0+255),w,b
  1382  0033EE  6ED9               	movwf	fsr2l,c
  1383  0033F0  6ADA               	clrf	fsr2h,c
  1384  0033F2  0E05               	movlw	high _dcc_mesg
  1385  0033F4  22DA               	addwfc	fsr2h,f,c
  1386  0033F6  50DF               	movf	indf2,w,c
  1387  0033F8  1BAA               	xorwf	main@xor& (0+255),f,b
  1388                           
  1389                           ; BSR set to: 5
  1390                           ;main.c: 118:                 }
  1391  0033FA  2BAB               	incf	main@idx& (0+255),f,b
  1392  0033FC                     l5304:
  1393                           
  1394                           ; BSR set to: 5
  1395  0033FC  51E1               	movf	_dcc_len& (0+255),w,b
  1396  0033FE  5DAB               	subwf	main@idx& (0+255),w,b
  1397  003400  A0D8               	btfss	status,0,c
  1398  003402  D7F3               	goto	l5300
  1399                           
  1400                           ; BSR set to: 5
  1401                           ;main.c: 128:                 if (xor == 0) {
  1402  003404  51AA               	movf	main@xor& (0+255),w,b
  1403  003406  B4D8               	btfsc	status,2,c
  1404                           
  1405                           ; BSR set to: 5
  1406                           ;main.c: 129:                     dcc_decode();
  1407  003408  ECF0  F00A         	call	_dcc_decode	;wreg free
  1408                           
  1409                           ;main.c: 141:                 dcc_ready = 0;
  1410  00340C  0E00               	movlw	0
  1411  00340E  0105               	movlb	5	; () banked
  1412  003410  6FE0               	movwf	_dcc_ready& (0+255),b	;volatile
  1413  003412                     l5312:
  1414                           
  1415                           ;main.c: 107:         while(!TMR0_HasOverflowOccured()) {
  1416  003412  EC77  F020         	call	_TMR0_HasOverflowOccured	;wreg free
  1417  003416  0900               	iorlw	0
  1418  003418  B4D8               	btfsc	status,2,c
  1419  00341A  D7DD               	goto	l5294
  1420                           
  1421                           ;main.c: 147:         printf("%d is %c@%d/%d Fn=%d%d%d%d%d%d%d%d%d%d%d%d%d\r\n",
  1422  00341C  0E75               	movlw	low STR_2
  1423  00341E  0105               	movlb	5	; () banked
  1424  003420  6F76               	movwf	printf@fmt& (0+255),b
  1425  003422  C5D9  F577         	movff	_my_dcc_address,?_printf+1
  1426  003426  C5DA  F578         	movff	_my_dcc_address+1,?_printf+2
  1427  00342A  C5F4  F579         	movff	_my_dcc_direction,?_printf+3
  1428  00342E  6B7A               	clrf	(?_printf+4)& (0+255),b
  1429  003430  C5E2  F57B         	movff	_my_dcc_speed,?_printf+5
  1430  003434  6B7C               	clrf	(?_printf+6)& (0+255),b
  1431  003436  C5E3  F57D         	movff	_my_dcc_speedsteps,?_printf+7
  1432  00343A  6B7E               	clrf	(?_printf+8)& (0+255),b
  1433  00343C  C5AC  F57F         	movff	_my_dcc_functions,?_printf+9
  1434  003440  6B80               	clrf	(?_printf+10)& (0+255),b
  1435  003442  C5AD  F581         	movff	_my_dcc_functions+1,?_printf+11
  1436  003446  6B82               	clrf	(?_printf+12)& (0+255),b
  1437  003448  C5AE  F583         	movff	_my_dcc_functions+2,?_printf+13
  1438  00344C  6B84               	clrf	(?_printf+14)& (0+255),b
  1439  00344E  C5AF  F585         	movff	_my_dcc_functions+3,?_printf+15
  1440  003452  6B86               	clrf	(?_printf+16)& (0+255),b
  1441  003454  C5B0  F587         	movff	_my_dcc_functions+4,?_printf+17
  1442  003458  6B88               	clrf	(?_printf+18)& (0+255),b
  1443  00345A  C5B1  F589         	movff	_my_dcc_functions+5,?_printf+19
  1444  00345E  6B8A               	clrf	(?_printf+20)& (0+255),b
  1445  003460  C5B2  F58B         	movff	_my_dcc_functions+6,?_printf+21
  1446  003464  6B8C               	clrf	(?_printf+22)& (0+255),b
  1447  003466  C5B3  F58D         	movff	_my_dcc_functions+7,?_printf+23
  1448  00346A  6B8E               	clrf	(?_printf+24)& (0+255),b
  1449  00346C  C5B4  F58F         	movff	_my_dcc_functions+8,?_printf+25
  1450  003470  6B90               	clrf	(?_printf+26)& (0+255),b
  1451  003472  C5B5  F591         	movff	_my_dcc_functions+9,?_printf+27
  1452  003476  6B92               	clrf	(?_printf+28)& (0+255),b
  1453  003478  C5B6  F593         	movff	_my_dcc_functions+10,?_printf+29
  1454  00347C  6B94               	clrf	(?_printf+30)& (0+255),b
  1455  00347E  C5B7  F595         	movff	_my_dcc_functions+11,?_printf+31
  1456  003482  6B96               	clrf	(?_printf+32)& (0+255),b
  1457  003484  C5B8  F597         	movff	_my_dcc_functions+12,?_printf+33
  1458  003488  6B98               	clrf	(?_printf+34)& (0+255),b
  1459  00348A  ECDB  F01F         	call	_printf	;wreg free
  1460                           
  1461                           ;main.c: 156:         dcc_performance();
  1462  00348E  EC89  F01D         	call	_dcc_performance	;wreg free
  1463  003492  D79C               	goto	l5290
  1464  003494                     __end_of_main:
  1465                           	callstack 0
  1466                           
  1467 ;; *************** function _dcc_performance *****************
  1468 ;; Defined at:
  1469 ;;		line 671 in file "dcc.c"
  1470 ;; Parameters:    Size  Location     Type
  1471 ;;		None
  1472 ;; Auto vars:     Size  Location     Type
  1473 ;;		None
  1474 ;; Return value:  Size  Location     Type
  1475 ;;                  1    wreg      void 
  1476 ;; Registers used:
  1477 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1478 ;; Tracked objects:
  1479 ;;		On entry : 3F/5
  1480 ;;		On exit  : 3F/5
  1481 ;;		Unchanged: 0/0
  1482 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  1483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1486 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1487 ;;Total ram usage:        0 bytes
  1488 ;; Hardware stack levels used: 1
  1489 ;; Hardware stack levels required when called: 12
  1490 ;; This function calls:
  1491 ;;		_printf
  1492 ;; This function is called by:
  1493 ;;		_main
  1494 ;; This function uses a non-reentrant model
  1495 ;;
  1496                           
  1497                           	psect	text1
  1498  003B12                     __ptext1:
  1499                           	callstack 0
  1500  003B12                     _dcc_performance:
  1501                           	callstack 114
  1502                           
  1503                           ; BSR set to: 5
  1504                           ;dcc.c: 674:     printf("Perf: %lu/%u/%u (%u, %u)\r\n", idle_count, dcc_interrupts, dcc_
      +                          drops,
  1505                           
  1506                           ; BSR set to: 5
  1507                           ;incstack = 0
  1508  003B12  0EA4               	movlw	low STR_5
  1509  003B14  6F76               	movwf	printf@fmt& (0+255),b
  1510  003B16  C5C5  F577         	movff	_idle_count,?_printf+1	;volatile
  1511  003B1A  C5C6  F578         	movff	_idle_count+1,?_printf+2	;volatile
  1512  003B1E  C5C7  F579         	movff	_idle_count+2,?_printf+3	;volatile
  1513  003B22  C5C8  F57A         	movff	_idle_count+3,?_printf+4	;volatile
  1514  003B26  C5D7  F57B         	movff	_dcc_interrupts,?_printf+5	;volatile
  1515  003B2A  C5D8  F57C         	movff	_dcc_interrupts+1,?_printf+6	;volatile
  1516  003B2E  C5D5  F57D         	movff	_dcc_drops,?_printf+7	;volatile
  1517  003B32  C5D6  F57E         	movff	_dcc_drops+1,?_printf+8	;volatile
  1518  003B36  C5D3  F57F         	movff	_dcc_zeros,?_printf+9	;volatile
  1519  003B3A  C5D4  F580         	movff	_dcc_zeros+1,?_printf+10	;volatile
  1520  003B3E  C5D1  F581         	movff	_dcc_ones,?_printf+11	;volatile
  1521  003B42  C5D2  F582         	movff	_dcc_ones+1,?_printf+12	;volatile
  1522  003B46  ECDB  F01F         	call	_printf	;wreg free
  1523                           
  1524                           ; BSR set to: 5
  1525                           ;dcc.c: 676:     idle_count = 0;
  1526  003B4A  0E00               	movlw	0
  1527  003B4C  6FC5               	movwf	_idle_count& (0+255),b	;volatile
  1528  003B4E  0E00               	movlw	0
  1529  003B50  6FC6               	movwf	(_idle_count+1)& (0+255),b	;volatile
  1530  003B52  0E00               	movlw	0
  1531  003B54  6FC7               	movwf	(_idle_count+2)& (0+255),b	;volatile
  1532  003B56  0E00               	movlw	0
  1533  003B58  6FC8               	movwf	(_idle_count+3)& (0+255),b	;volatile
  1534                           
  1535                           ; BSR set to: 5
  1536                           ;dcc.c: 677:     dcc_interrupts = 0;
  1537  003B5A  0E00               	movlw	0
  1538  003B5C  6FD8               	movwf	(_dcc_interrupts+1)& (0+255),b	;volatile
  1539  003B5E  0E00               	movlw	0
  1540  003B60  6FD7               	movwf	_dcc_interrupts& (0+255),b	;volatile
  1541                           
  1542                           ; BSR set to: 5
  1543                           ;dcc.c: 678:     dcc_drops = 0;
  1544  003B62  0E00               	movlw	0
  1545  003B64  6FD6               	movwf	(_dcc_drops+1)& (0+255),b	;volatile
  1546  003B66  0E00               	movlw	0
  1547  003B68  6FD5               	movwf	_dcc_drops& (0+255),b	;volatile
  1548                           
  1549                           ; BSR set to: 5
  1550                           ;dcc.c: 679:     dcc_zeros = 0;
  1551  003B6A  0E00               	movlw	0
  1552  003B6C  6FD4               	movwf	(_dcc_zeros+1)& (0+255),b	;volatile
  1553  003B6E  0E00               	movlw	0
  1554  003B70  6FD3               	movwf	_dcc_zeros& (0+255),b	;volatile
  1555                           
  1556                           ; BSR set to: 5
  1557                           ;dcc.c: 680:     dcc_ones = 0;
  1558  003B72  0E00               	movlw	0
  1559  003B74  6FD2               	movwf	(_dcc_ones+1)& (0+255),b	;volatile
  1560  003B76  0E00               	movlw	0
  1561  003B78  6FD1               	movwf	_dcc_ones& (0+255),b	;volatile
  1562                           
  1563                           ; BSR set to: 5
  1564  003B7A  0012               	return		;funcret
  1565  003B7C                     __end_of_dcc_performance:
  1566                           	callstack 0
  1567                           
  1568 ;; *************** function _dcc_idle *****************
  1569 ;; Defined at:
  1570 ;;		line 688 in file "dcc.c"
  1571 ;; Parameters:    Size  Location     Type
  1572 ;;		None
  1573 ;; Auto vars:     Size  Location     Type
  1574 ;;		None
  1575 ;; Return value:  Size  Location     Type
  1576 ;;                  1    wreg      void 
  1577 ;; Registers used:
  1578 ;;		wreg, status,2, status,0
  1579 ;; Tracked objects:
  1580 ;;		On entry : 0/3
  1581 ;;		On exit  : 3F/5
  1582 ;;		Unchanged: 0/0
  1583 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  1584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1587 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1588 ;;Total ram usage:        0 bytes
  1589 ;; Hardware stack levels used: 1
  1590 ;; Hardware stack levels required when called: 3
  1591 ;; This function calls:
  1592 ;;		Nothing
  1593 ;; This function is called by:
  1594 ;;		_main
  1595 ;; This function uses a non-reentrant model
  1596 ;;
  1597                           
  1598                           	psect	text2
  1599  0040B4                     __ptext2:
  1600                           	callstack 0
  1601  0040B4                     _dcc_idle:
  1602                           	callstack 123
  1603                           
  1604                           ;dcc.c: 690:     idle_count++;
  1605                           
  1606                           ; BSR set to: 5
  1607                           ;incstack = 0
  1608  0040B4  0E01               	movlw	1
  1609  0040B6  0105               	movlb	5	; () banked
  1610  0040B8  27C5               	addwf	_idle_count& (0+255),f,b	;volatile
  1611  0040BA  0E00               	movlw	0
  1612  0040BC  23C6               	addwfc	(_idle_count+1)& (0+255),f,b	;volatile
  1613  0040BE  23C7               	addwfc	(_idle_count+2)& (0+255),f,b	;volatile
  1614  0040C0  23C8               	addwfc	(_idle_count+3)& (0+255),f,b	;volatile
  1615                           
  1616                           ; BSR set to: 5
  1617  0040C2  0012               	return		;funcret
  1618  0040C4                     __end_of_dcc_idle:
  1619                           	callstack 0
  1620                           
  1621 ;; *************** function _dcc_decode *****************
  1622 ;; Defined at:
  1623 ;;		line 240 in file "dcc.c"
  1624 ;; Parameters:    Size  Location     Type
  1625 ;;		None
  1626 ;; Auto vars:     Size  Location     Type
  1627 ;;  value           1   68[BANK5 ] unsigned char 
  1628 ;;  bit             1   67[BANK5 ] unsigned char 
  1629 ;;  cv_address      2   71[BANK5 ] unsigned short 
  1630 ;;  i               1   73[BANK5 ] unsigned char 
  1631 ;;  i_start         1   66[BANK5 ] unsigned char 
  1632 ;;  address_bits    1    0        unsigned char 
  1633 ;;  pkt_addr        2   69[BANK5 ] unsigned short 
  1634 ;; Return value:  Size  Location     Type
  1635 ;;                  1    wreg      void 
  1636 ;; Registers used:
  1637 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1638 ;; Tracked objects:
  1639 ;;		On entry : 3F/5
  1640 ;;		On exit  : 0/0
  1641 ;;		Unchanged: 0/0
  1642 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  1643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1644 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1645 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1646 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1647 ;;Total ram usage:       15 bytes
  1648 ;; Hardware stack levels used: 1
  1649 ;; Hardware stack levels required when called: 12
  1650 ;; This function calls:
  1651 ;;		_cv_factory_defaults
  1652 ;;		_cv_read
  1653 ;;		_cv_write
  1654 ;;		_dcc_initialize
  1655 ;;		_function_control
  1656 ;;		_motor_control
  1657 ;;		_printf
  1658 ;; This function is called by:
  1659 ;;		_main
  1660 ;; This function uses a non-reentrant model
  1661 ;;
  1662                           
  1663                           	psect	text3
  1664  0015E0                     __ptext3:
  1665                           	callstack 0
  1666  0015E0                     _dcc_decode:
  1667                           	callstack 114
  1668                           
  1669                           ; BSR set to: 5
  1670                           ;dcc.c: 241:     uint16_t pkt_addr;;dcc.c: 245:     --dcc_len;
  1671                           
  1672                           ; BSR set to: 5
  1673                           ;incstack = 0
  1674  0015E0  07E1               	decf	_dcc_len& (0+255),f,b
  1675                           
  1676                           ; BSR set to: 5
  1677                           ;dcc.c: 250:     if (dcc_len == 1) {
  1678  0015E2  05E1               	decf	_dcc_len& (0+255),w,b
  1679  0015E4  B4D8               	btfsc	status,2,c
  1680  0015E6  0012               	return	
  1681  0015E8  D001               	goto	l4978
  1682  0015EA                     l4976:
  1683                           
  1684                           ; BSR set to: 5
  1685                           ;dcc.c: 254:         return;
  1686  0015EA  0012               	return	
  1687  0015EC                     l4978:
  1688                           
  1689                           ; BSR set to: 5
  1690                           ;dcc.c: 258:     if ((dcc_len == 2) && (dcc_mesg[0] == 0xFF) && (dcc_mesg[1] == 0x00)) {
  1691  0015EC  0E02               	movlw	2
  1692  0015EE  19E1               	xorwf	_dcc_len& (0+255),w,b
  1693  0015F0  A4D8               	btfss	status,2,c
  1694  0015F2  D006               	goto	l4986
  1695                           
  1696                           ; BSR set to: 5
  1697  0015F4  29BF               	incf	_dcc_mesg& (0+255),w,b
  1698  0015F6  A4D8               	btfss	status,2,c
  1699  0015F8  D003               	goto	l4986
  1700                           
  1701                           ; BSR set to: 5
  1702  0015FA  51C0               	movf	(_dcc_mesg+1)& (0+255),w,b
  1703  0015FC  B4D8               	btfsc	status,2,c
  1704  0015FE  0012               	return	
  1705  001600                     l4986:
  1706                           
  1707                           ; BSR set to: 5
  1708  001600  0E02               	movlw	2
  1709  001602  19E1               	xorwf	_dcc_len& (0+255),w,b
  1710  001604  A4D8               	btfss	status,2,c
  1711  001606  D00B               	goto	l4994
  1712                           
  1713                           ; BSR set to: 5
  1714  001608  51BF               	movf	_dcc_mesg& (0+255),w,b
  1715  00160A  A4D8               	btfss	status,2,c
  1716  00160C  D008               	goto	l4994
  1717                           
  1718                           ; BSR set to: 5
  1719  00160E  51C0               	movf	(_dcc_mesg+1)& (0+255),w,b
  1720  001610  A4D8               	btfss	status,2,c
  1721  001612  D005               	goto	l4994
  1722                           
  1723                           ; BSR set to: 5
  1724                           ;dcc.c: 267:         cv_factory_defaults();
  1725  001614  ECF0  F012         	call	_cv_factory_defaults	;wreg free
  1726                           
  1727                           ;dcc.c: 268:         dcc_initialize();
  1728  001618  EC7E  F01E         	call	_dcc_initialize	;wreg free
  1729                           
  1730                           ;dcc.c: 270:     } else if ((dcc_len == 2) && (dcc_mesg[0] == 0x00) && ((dcc_mesg[1] & 0
      +                          xC1) == 0xC1)) {
  1731  00161C  0012               	return	
  1732  00161E                     l4994:
  1733                           
  1734                           ; BSR set to: 5
  1735  00161E  0E02               	movlw	2
  1736  001620  19E1               	xorwf	_dcc_len& (0+255),w,b
  1737  001622  A4D8               	btfss	status,2,c
  1738  001624  D012               	goto	l5004
  1739                           
  1740                           ; BSR set to: 5
  1741  001626  51BF               	movf	_dcc_mesg& (0+255),w,b
  1742  001628  A4D8               	btfss	status,2,c
  1743  00162A  D00F               	goto	l5004
  1744                           
  1745                           ; BSR set to: 5
  1746  00162C  51C0               	movf	(_dcc_mesg+1)& (0+255),w,b
  1747  00162E  0BC1               	andlw	193
  1748  001630  0AC1               	xorlw	193
  1749  001632  A4D8               	btfss	status,2,c
  1750  001634  D00A               	goto	l5004
  1751                           
  1752                           ; BSR set to: 5
  1753                           ;dcc.c: 271:         my_dcc_speed = 0;
  1754  001636  0E00               	movlw	0
  1755  001638  6FE2               	movwf	_my_dcc_speed& (0+255),b
  1756                           
  1757                           ; BSR set to: 5
  1758                           ;dcc.c: 272:         motor_control(my_dcc_speedsteps, my_dcc_speed, my_dcc_direction);
  1759  00163A  C5E2  F505         	movff	_my_dcc_speed,motor_control@speed
  1760  00163E  C5F4  F506         	movff	_my_dcc_direction,motor_control@direction
  1761  001642  51E3               	movf	_my_dcc_speedsteps& (0+255),w,b
  1762  001644  ECAB  F01C         	call	_motor_control
  1763                           
  1764                           ;dcc.c: 280:     } else if ((dcc_len == 2) && ((dcc_mesg[0] & 0x80) == 0x00) && ((dcc_me
      +                          sg[1] & 0xC0) == 0x40)) {
  1765  001648  0012               	return	
  1766  00164A                     l5004:
  1767                           
  1768                           ; BSR set to: 5
  1769  00164A  0E02               	movlw	2
  1770  00164C  19E1               	xorwf	_dcc_len& (0+255),w,b
  1771  00164E  B4D8               	btfsc	status,2,c
  1772                           
  1773                           ; BSR set to: 5
  1774  001650  BFBF               	btfsc	_dcc_mesg& (0+255),7,b
  1775  001652  D04A               	goto	l5034
  1776                           
  1777                           ; BSR set to: 5
  1778  001654  51C0               	movf	(_dcc_mesg+1)& (0+255),w,b
  1779  001656  0BC0               	andlw	192
  1780  001658  0A40               	xorlw	64
  1781  00165A  A4D8               	btfss	status,2,c
  1782  00165C  D045               	goto	l5034
  1783                           
  1784                           ; BSR set to: 5
  1785                           ;dcc.c: 282:         pkt_addr = dcc_mesg[0] & 0x7F;
  1786  00165E  C5BF  F59B         	movff	_dcc_mesg,??_dcc_decode
  1787  001662  0E7F               	movlw	127
  1788  001664  179B               	andwf	??_dcc_decode& (0+255),f,b
  1789  001666  519B               	movf	??_dcc_decode& (0+255),w,b
  1790  001668  6FA5               	movwf	dcc_decode@pkt_addr& (0+255),b
  1791  00166A  6BA6               	clrf	(dcc_decode@pkt_addr+1)& (0+255),b
  1792                           
  1793                           ;dcc.c: 285:         if (my_dcc_address == pkt_addr) {
  1794  00166C  51A5               	movf	dcc_decode@pkt_addr& (0+255),w,b
  1795  00166E  19D9               	xorwf	_my_dcc_address& (0+255),w,b
  1796  001670  E1BC               	bnz	l4976
  1797  001672  51A6               	movf	(dcc_decode@pkt_addr+1)& (0+255),w,b
  1798  001674  19DA               	xorwf	(_my_dcc_address+1)& (0+255),w,b
  1799  001676  A4D8               	btfss	status,2,c
  1800  001678  0012               	return	
  1801                           
  1802                           ; BSR set to: 5
  1803                           ;dcc.c: 286:             my_dcc_direction = dcc_mesg[1] & 0x20 ? 'F' : 'B';
  1804  00167A  BBC0               	btfsc	(_dcc_mesg+1)& (0+255),5,b
  1805  00167C  D004               	goto	l5016
  1806                           
  1807                           ; BSR set to: 5
  1808  00167E  0E00               	movlw	0
  1809  001680  6F9F               	movwf	(_dcc_decode$1841+1)& (0+255),b
  1810  001682  0E42               	movlw	66
  1811  001684  D003               	goto	L1
  1812  001686                     l5016:
  1813                           
  1814                           ; BSR set to: 5
  1815  001686  0E00               	movlw	0
  1816  001688  6F9F               	movwf	(_dcc_decode$1841+1)& (0+255),b
  1817  00168A  0E46               	movlw	70
  1818  00168C                     L1:
  1819  00168C  6F9E               	movwf	_dcc_decode$1841& (0+255),b
  1820                           
  1821                           ; BSR set to: 5
  1822  00168E  C59E  F5F4         	movff	_dcc_decode$1841,_my_dcc_direction
  1823                           
  1824                           ; BSR set to: 5
  1825                           ;dcc.c: 288:             if (cv_cv29 & 02) {
  1826  001692  A3DD               	btfss	_cv_cv29& (0+255),1,b
  1827  001694  D00F               	goto	l5026
  1828                           
  1829                           ; BSR set to: 5
  1830                           ;dcc.c: 289:                 my_dcc_speedsteps = 28;
  1831  001696  0E1C               	movlw	28
  1832  001698  6FE3               	movwf	_my_dcc_speedsteps& (0+255),b
  1833                           
  1834                           ; BSR set to: 5
  1835                           ;dcc.c: 290:                 my_dcc_speed = dcc_speeds[dcc_mesg[1] & 0x1F];
  1836  00169A  51C0               	movf	(_dcc_mesg+1)& (0+255),w,b
  1837  00169C  0B1F               	andlw	31
  1838  00169E  6F9B               	movwf	??_dcc_decode& (0+255),b
  1839  0016A0  6B9C               	clrf	(??_dcc_decode+1)& (0+255),b
  1840  0016A2  0E20               	movlw	low _dcc_speeds
  1841  0016A4  259B               	addwf	??_dcc_decode& (0+255),w,b
  1842  0016A6  6ED9               	movwf	fsr2l,c
  1843  0016A8  0E06               	movlw	high _dcc_speeds
  1844  0016AA  219C               	addwfc	(??_dcc_decode+1)& (0+255),w,b
  1845  0016AC  6EDA               	movwf	fsr2h,c
  1846  0016AE  50DF               	movf	indf2,w,c
  1847  0016B0  6FE2               	movwf	_my_dcc_speed& (0+255),b
  1848                           
  1849                           ;dcc.c: 292:             } else {
  1850  0016B2  D012               	goto	l5032
  1851  0016B4                     l5026:
  1852                           
  1853                           ; BSR set to: 5
  1854                           ;dcc.c: 293:                 my_dcc_speedsteps = 14;
  1855  0016B4  0E0E               	movlw	14
  1856  0016B6  6FE3               	movwf	_my_dcc_speedsteps& (0+255),b
  1857                           
  1858                           ; BSR set to: 5
  1859                           ;dcc.c: 294:                 my_dcc_speed = dcc_speeds[dcc_mesg[1] & 0x0F];
  1860  0016B8  51C0               	movf	(_dcc_mesg+1)& (0+255),w,b
  1861  0016BA  0B0F               	andlw	15
  1862  0016BC  6F9B               	movwf	??_dcc_decode& (0+255),b
  1863  0016BE  6B9C               	clrf	(??_dcc_decode+1)& (0+255),b
  1864  0016C0  0E20               	movlw	low _dcc_speeds
  1865  0016C2  259B               	addwf	??_dcc_decode& (0+255),w,b
  1866  0016C4  6ED9               	movwf	fsr2l,c
  1867  0016C6  0E06               	movlw	high _dcc_speeds
  1868  0016C8  219C               	addwfc	(??_dcc_decode+1)& (0+255),w,b
  1869  0016CA  6EDA               	movwf	fsr2h,c
  1870  0016CC  50DF               	movf	indf2,w,c
  1871  0016CE  6FE2               	movwf	_my_dcc_speed& (0+255),b
  1872                           
  1873                           ; BSR set to: 5
  1874                           ;dcc.c: 295:                 my_dcc_functions[0] = (dcc_mesg[1] & 0x10) >> 4;
  1875  0016D0  39C0               	swapf	(_dcc_mesg+1)& (0+255),w,b
  1876  0016D2  0B0F               	andlw	15
  1877  0016D4  0B01               	andlw	1
  1878  0016D6  6FAC               	movwf	_my_dcc_functions& (0+255),b
  1879  0016D8                     l5032:
  1880                           
  1881                           ; BSR set to: 5
  1882                           ;dcc.c: 298:             motor_control(my_dcc_speedsteps, my_dcc_speed, my_dcc_direction
      +                          );
  1883  0016D8  C5E2  F505         	movff	_my_dcc_speed,motor_control@speed
  1884  0016DC  C5F4  F506         	movff	_my_dcc_direction,motor_control@direction
  1885  0016E0  51E3               	movf	_my_dcc_speedsteps& (0+255),w,b
  1886  0016E2  ECAB  F01C         	call	_motor_control
  1887                           
  1888                           ;dcc.c: 302:         } else {
  1889  0016E6  0012               	return	
  1890  0016E8                     l5034:
  1891                           
  1892                           ; BSR set to: 5
  1893                           ;dcc.c: 309:         uint8_t address_bits;;dcc.c: 310:         uint8_t i_start;;dcc.c: 3
      +                          13:         if ((dcc_mesg[0] & 0xC0) == 0xC0) {
  1894  0016E8  51BF               	movf	_dcc_mesg& (0+255),w,b
  1895  0016EA  0BC0               	andlw	192
  1896  0016EC  0AC0               	xorlw	192
  1897  0016EE  A4D8               	btfss	status,2,c
  1898  0016F0  D009               	goto	l5042
  1899  0016F2                     
  1900                           ; BSR set to: 5
  1901                           ;dcc.c: 314:             pkt_addr = (uint16_t) dcc_mesg[1] | (((uint16_t) dcc_mesg[0] & 
      +                          0x3F) << 8);
  1902  0016F2  51BF               	movf	_dcc_mesg& (0+255),w,b
  1903  0016F4  0B3F               	andlw	63
  1904  0016F6  6F9B               	movwf	??_dcc_decode& (0+255),b
  1905  0016F8  51C0               	movf	(_dcc_mesg+1)& (0+255),w,b
  1906  0016FA  6FA5               	movwf	dcc_decode@pkt_addr& (0+255),b
  1907  0016FC  C59B  F5A6         	movff	??_dcc_decode,dcc_decode@pkt_addr+1
  1908                           
  1909                           ; BSR set to: 5
  1910                           ;dcc.c: 316:             i_start = 2;
  1911                           
  1912                           ; BSR set to: 5
  1913  001700  0E02               	movlw	2
  1914  001702  D00F               	goto	L4
  1915  001704                     l5042:
  1916                           
  1917                           ; BSR set to: 5
  1918  001704  51BF               	movf	_dcc_mesg& (0+255),w,b
  1919  001706  0BC0               	andlw	192
  1920  001708  0A80               	xorlw	128
  1921  00170A  B4D8               	btfsc	status,2,c
  1922  00170C  D7F2               	goto	L8
  1923                           
  1924                           ; BSR set to: 5
  1925                           
  1926                           ; BSR set to: 5
  1927                           
  1928                           ; BSR set to: 5
  1929                           ;dcc.c: 320:             pkt_addr = (uint16_t) dcc_mesg[1] | (((uint16_t) dcc_mesg[0] & 
      +                          0x3F) << 8);
  1930  00170E  C5BF  F59B         	movff	_dcc_mesg,??_dcc_decode
  1931  001712  0EC0               	movlw	192
  1932  001714  179B               	andwf	??_dcc_decode& (0+255),f,b
  1933  001716  A4D8               	btfss	status,2,c
  1934  001718  D006               	goto	l5056
  1935                           
  1936                           ; BSR set to: 5
  1937                           ;dcc.c: 326:             pkt_addr = (uint16_t) dcc_mesg[0];
  1938  00171A  C5BF  F5A5         	movff	_dcc_mesg,dcc_decode@pkt_addr
  1939  00171E  6BA6               	clrf	(dcc_decode@pkt_addr+1)& (0+255),b
  1940                           
  1941                           ; BSR set to: 5
  1942                           ;dcc.c: 328:             i_start = 1;
  1943  001720  0E01               	movlw	1
  1944  001722                     L4:
  1945  001722  6FA2               	movwf	dcc_decode@i_start& (0+255),b
  1946                           
  1947                           ;dcc.c: 330:         } else if (dcc_mesg[0] == 0xFF) {
  1948  001724  D003               	goto	l943
  1949  001726                     l5056:
  1950                           
  1951                           ; BSR set to: 5
  1952  001726  29BF               	incf	_dcc_mesg& (0+255),w,b
  1953  001728  B4D8               	btfsc	status,2,c
  1954  00172A  0012               	return	
  1955  00172C                     l943:
  1956                           
  1957                           ; BSR set to: 5
  1958                           ;dcc.c: 338:         if ((my_dcc_address == pkt_addr) || (pkt_addr == 0x00)) {
  1959                           
  1960                           ; BSR set to: 5
  1961  00172C  51A5               	movf	dcc_decode@pkt_addr& (0+255),w,b
  1962  00172E  19D9               	xorwf	_my_dcc_address& (0+255),w,b
  1963  001730  E104               	bnz	u5430
  1964  001732  51A6               	movf	(dcc_decode@pkt_addr+1)& (0+255),w,b
  1965  001734  19DA               	xorwf	(_my_dcc_address+1)& (0+255),w,b
  1966  001736  B4D8               	btfsc	status,2,c
  1967  001738  D004               	goto	u5440
  1968  00173A                     u5430:
  1969                           
  1970                           ; BSR set to: 5
  1971  00173A  51A5               	movf	dcc_decode@pkt_addr& (0+255),w,b
  1972  00173C  11A6               	iorwf	(dcc_decode@pkt_addr+1)& (0+255),w,b
  1973  00173E  A4D8               	btfss	status,2,c
  1974  001740  0012               	return	
  1975  001742                     u5440:
  1976                           
  1977                           ; BSR set to: 5
  1978                           ;dcc.c: 343:             for (uint8_t i = i_start;i < dcc_len;++i) {
  1979  001742  C5A2  F5A9         	movff	dcc_decode@i_start,dcc_decode@i
  1980  001746  D3DD               	goto	l5262
  1981  001748                     l5064:
  1982                           
  1983                           ; BSR set to: 5
  1984                           ;dcc.c: 351:                 if ((dcc_mesg[i] & 0xE0) == 0x00) {
  1985  001748  0EBF               	movlw	low _dcc_mesg
  1986  00174A  25A9               	addwf	dcc_decode@i& (0+255),w,b
  1987  00174C  6ED9               	movwf	fsr2l,c
  1988  00174E  6ADA               	clrf	fsr2h,c
  1989  001750  0E05               	movlw	high _dcc_mesg
  1990  001752  22DA               	addwfc	fsr2h,f,c
  1991  001754  50DF               	movf	indf2,w,c
  1992  001756  6F9B               	movwf	??_dcc_decode& (0+255),b
  1993  001758  0EE0               	movlw	224
  1994  00175A  179B               	andwf	??_dcc_decode& (0+255),f,b
  1995  00175C  A4D8               	btfss	status,2,c
  1996  00175E  D057               	goto	l5098
  1997                           
  1998                           ; BSR set to: 5
  1999                           ;dcc.c: 356:                     if (dcc_mesg[i] & 0x10) {
  2000  001760  0EBF               	movlw	low _dcc_mesg
  2001  001762  25A9               	addwf	dcc_decode@i& (0+255),w,b
  2002  001764  6ED9               	movwf	fsr2l,c
  2003  001766  6ADA               	clrf	fsr2h,c
  2004  001768  0E05               	movlw	high _dcc_mesg
  2005  00176A  22DA               	addwfc	fsr2h,f,c
  2006  00176C  B8DF               	btfsc	indf2,4,c
  2007  00176E  D04C               	goto	l5096
  2008                           
  2009                           ; BSR set to: 5
  2010                           ;dcc.c: 368:                         if ((dcc_mesg[i] & 0xE) == 0x00) {
  2011  001770  0EBF               	movlw	low _dcc_mesg
  2012  001772  25A9               	addwf	dcc_decode@i& (0+255),w,b
  2013  001774  6ED9               	movwf	fsr2l,c
  2014  001776  6ADA               	clrf	fsr2h,c
  2015  001778  0E05               	movlw	high _dcc_mesg
  2016  00177A  22DA               	addwfc	fsr2h,f,c
  2017  00177C  50DF               	movf	indf2,w,c
  2018  00177E  6F9B               	movwf	??_dcc_decode& (0+255),b
  2019  001780  0E0E               	movlw	14
  2020  001782  179B               	andwf	??_dcc_decode& (0+255),f,b
  2021  001784  A4D8               	btfss	status,2,c
  2022  001786  D005               	goto	l5082
  2023                           
  2024                           ; BSR set to: 5
  2025                           ;dcc.c: 372:                                 cv_factory_defaults();
  2026  001788  ECF0  F012         	call	_cv_factory_defaults	;wreg free
  2027                           
  2028                           ;dcc.c: 374:                                 dcc_initialize();
  2029  00178C  EC7E  F01E         	call	_dcc_initialize	;wreg free
  2030                           
  2031                           ;dcc.c: 379:                             } else {
  2032  001790  D03B               	goto	l5096
  2033  001792                     l5082:
  2034                           
  2035                           ; BSR set to: 5
  2036  001792  0EBF               	movlw	low _dcc_mesg
  2037  001794  25A9               	addwf	dcc_decode@i& (0+255),w,b
  2038  001796  6ED9               	movwf	fsr2l,c
  2039  001798  6ADA               	clrf	fsr2h,c
  2040  00179A  0E05               	movlw	high _dcc_mesg
  2041  00179C  22DA               	addwfc	fsr2h,f,c
  2042  00179E  50DF               	movf	indf2,w,c
  2043  0017A0  0B0E               	andlw	14
  2044  0017A2  06E8               	decf	wreg,f,c
  2045  0017A4  B4D8               	btfsc	status,2,c
  2046  0017A6  D030               	goto	l5096
  2047                           
  2048                           ; BSR set to: 5
  2049  0017A8  0EBF               	movlw	low _dcc_mesg
  2050  0017AA  25A9               	addwf	dcc_decode@i& (0+255),w,b
  2051  0017AC  6ED9               	movwf	fsr2l,c
  2052  0017AE  6ADA               	clrf	fsr2h,c
  2053  0017B0  0E05               	movlw	high _dcc_mesg
  2054  0017B2  22DA               	addwfc	fsr2h,f,c
  2055  0017B4  50DF               	movf	indf2,w,c
  2056  0017B6  0B0E               	andlw	14
  2057  0017B8  0A06               	xorlw	6
  2058  0017BA  A4D8               	btfss	status,2,c
  2059  0017BC  D025               	goto	l5096
  2060                           
  2061                           ; BSR set to: 5
  2062                           ;dcc.c: 399:                             if (dcc_mesg[i] & 0x01) {
  2063  0017BE  0EBF               	movlw	low _dcc_mesg
  2064  0017C0  25A9               	addwf	dcc_decode@i& (0+255),w,b
  2065  0017C2  6ED9               	movwf	fsr2l,c
  2066  0017C4  6ADA               	clrf	fsr2h,c
  2067  0017C6  0E05               	movlw	high _dcc_mesg
  2068  0017C8  22DA               	addwfc	fsr2h,f,c
  2069  0017CA  A0DF               	btfss	indf2,0,c
  2070  0017CC  D00F               	goto	l5092
  2071                           
  2072                           ; BSR set to: 5
  2073                           ;dcc.c: 400:                                 cv_write(29, cv_read(29) | 0x20);
  2074  0017CE  0E00               	movlw	0
  2075  0017D0  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  2076  0017D2  0E1D               	movlw	29
  2077  0017D4  6E07               	movwf	cv_write@cv^(0+1280),c
  2078  0017D6  0E00               	movlw	0
  2079  0017D8  6E06               	movwf	(cv_read@cv+1)^(0+1280),c
  2080  0017DA  0E1D               	movlw	29
  2081  0017DC  6E05               	movwf	cv_read@cv^(0+1280),c
  2082  0017DE  EC37  F020         	call	_cv_read	;wreg free
  2083  0017E2  0920               	iorlw	32
  2084  0017E4  6E09               	movwf	cv_write@value^(0+1280),c
  2085  0017E6  EC43  F020         	call	_cv_write	;wreg free
  2086                           
  2087                           ;dcc.c: 405:                             }else {
  2088  0017EA  D00E               	goto	l5096
  2089  0017EC                     l5092:
  2090                           
  2091                           ; BSR set to: 5
  2092                           ;dcc.c: 406:                                 cv_write(29, cv_read(29) & ~0x20);
  2093  0017EC  0E00               	movlw	0
  2094  0017EE  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  2095  0017F0  0E1D               	movlw	29
  2096  0017F2  6E07               	movwf	cv_write@cv^(0+1280),c
  2097  0017F4  0E00               	movlw	0
  2098  0017F6  6E06               	movwf	(cv_read@cv+1)^(0+1280),c
  2099  0017F8  0E1D               	movlw	29
  2100  0017FA  6E05               	movwf	cv_read@cv^(0+1280),c
  2101  0017FC  EC37  F020         	call	_cv_read	;wreg free
  2102  001800  0BDF               	andlw	223
  2103  001802  6E09               	movwf	cv_write@value^(0+1280),c
  2104  001804  EC43  F020         	call	_cv_write	;wreg free
  2105  001808                     l5096:
  2106                           
  2107                           ;dcc.c: 418:                     ++i;
  2108  001808  0105               	movlb	5	; () banked
  2109  00180A  2BA9               	incf	dcc_decode@i& (0+255),f,b
  2110                           
  2111                           ;dcc.c: 420:                 } else if ((dcc_mesg[i] & 0xE0) == 0x20) {
  2112  00180C  D378               	goto	l5260
  2113  00180E                     l5098:
  2114                           
  2115                           ; BSR set to: 5
  2116  00180E  0EBF               	movlw	low _dcc_mesg
  2117  001810  25A9               	addwf	dcc_decode@i& (0+255),w,b
  2118  001812  6ED9               	movwf	fsr2l,c
  2119  001814  6ADA               	clrf	fsr2h,c
  2120  001816  0E05               	movlw	high _dcc_mesg
  2121  001818  22DA               	addwfc	fsr2h,f,c
  2122  00181A  50DF               	movf	indf2,w,c
  2123  00181C  0BE0               	andlw	224
  2124  00181E  0A20               	xorlw	32
  2125  001820  A4D8               	btfss	status,2,c
  2126  001822  D049               	goto	l5126
  2127                           
  2128                           ; BSR set to: 5
  2129                           ;dcc.c: 422:                     if ((dcc_mesg[i] & 0x1F) == 0x1F) {
  2130  001824  0EBF               	movlw	low _dcc_mesg
  2131  001826  25A9               	addwf	dcc_decode@i& (0+255),w,b
  2132  001828  6ED9               	movwf	fsr2l,c
  2133  00182A  6ADA               	clrf	fsr2h,c
  2134  00182C  0E05               	movlw	high _dcc_mesg
  2135  00182E  22DA               	addwfc	fsr2h,f,c
  2136  001830  50DF               	movf	indf2,w,c
  2137  001832  0B1F               	andlw	31
  2138  001834  0A1F               	xorlw	31
  2139  001836  A4D8               	btfss	status,2,c
  2140  001838  D025               	goto	l5116
  2141                           
  2142                           ; BSR set to: 5
  2143                           ;dcc.c: 423:                         my_dcc_direction = dcc_mesg[i+1] & 0x80 ? 'F' : 'R'
      +                          ;
  2144  00183A  0EC0               	movlw	low (_dcc_mesg+1)
  2145  00183C  25A9               	addwf	dcc_decode@i& (0+255),w,b
  2146  00183E  6ED9               	movwf	fsr2l,c
  2147  001840  6ADA               	clrf	fsr2h,c
  2148  001842  0E05               	movlw	high (_dcc_mesg+1)
  2149  001844  22DA               	addwfc	fsr2h,f,c
  2150  001846  BEDF               	btfsc	indf2,7,c
  2151  001848  D004               	goto	l5106
  2152                           
  2153                           ; BSR set to: 5
  2154  00184A  0E00               	movlw	0
  2155  00184C  6FA1               	movwf	(_dcc_decode$1845+1)& (0+255),b
  2156  00184E  0E52               	movlw	82
  2157  001850  D003               	goto	L2
  2158  001852                     l5106:
  2159                           
  2160                           ; BSR set to: 5
  2161  001852  0E00               	movlw	0
  2162  001854  6FA1               	movwf	(_dcc_decode$1845+1)& (0+255),b
  2163  001856  0E46               	movlw	70
  2164  001858                     L2:
  2165  001858  6FA0               	movwf	_dcc_decode$1845& (0+255),b
  2166                           
  2167                           ; BSR set to: 5
  2168  00185A  C5A0  F5F4         	movff	_dcc_decode$1845,_my_dcc_direction
  2169                           
  2170                           ;dcc.c: 424:                         my_dcc_speedsteps = 128;
  2171  00185E  0E80               	movlw	128
  2172  001860  6FE3               	movwf	_my_dcc_speedsteps& (0+255),b
  2173                           
  2174                           ; BSR set to: 5
  2175                           ;dcc.c: 426:                         my_dcc_speed = (uint8_t)dcc_mesg[i+1] & 0x7F;
  2176  001862  0EC0               	movlw	low (_dcc_mesg+1)
  2177  001864  25A9               	addwf	dcc_decode@i& (0+255),w,b
  2178  001866  6ED9               	movwf	fsr2l,c
  2179  001868  6ADA               	clrf	fsr2h,c
  2180  00186A  0E05               	movlw	high (_dcc_mesg+1)
  2181  00186C  22DA               	addwfc	fsr2h,f,c
  2182  00186E  50DF               	movf	indf2,w,c
  2183  001870  0B7F               	andlw	127
  2184  001872  6FE2               	movwf	_my_dcc_speed& (0+255),b
  2185                           
  2186                           ; BSR set to: 5
  2187                           ;dcc.c: 427:                         motor_control(my_dcc_speedsteps, my_dcc_speed, my_d
      +                          cc_direction);
  2188  001874  C5E2  F505         	movff	_my_dcc_speed,motor_control@speed
  2189  001878  C5F4  F506         	movff	_my_dcc_direction,motor_control@direction
  2190  00187C  51E3               	movf	_my_dcc_speedsteps& (0+255),w,b
  2191  00187E  ECAB  F01C         	call	_motor_control
  2192  001882  D7C2               	goto	l5096
  2193  001884                     l5116:
  2194                           
  2195                           ; BSR set to: 5
  2196  001884  0EBF               	movlw	low _dcc_mesg
  2197  001886  25A9               	addwf	dcc_decode@i& (0+255),w,b
  2198  001888  6ED9               	movwf	fsr2l,c
  2199  00188A  6ADA               	clrf	fsr2h,c
  2200  00188C  0E05               	movlw	high _dcc_mesg
  2201  00188E  22DA               	addwfc	fsr2h,f,c
  2202  001890  50DF               	movf	indf2,w,c
  2203  001892  0B1F               	andlw	31
  2204  001894  0A1E               	xorlw	30
  2205  001896  B4D8               	btfsc	status,2,c
  2206  001898  D7B7               	goto	l5096
  2207                           
  2208                           ; BSR set to: 5
  2209  00189A  0EBF               	movlw	low _dcc_mesg
  2210  00189C  25A9               	addwf	dcc_decode@i& (0+255),w,b
  2211  00189E  6ED9               	movwf	fsr2l,c
  2212  0018A0  6ADA               	clrf	fsr2h,c
  2213  0018A2  0E05               	movlw	high _dcc_mesg
  2214  0018A4  22DA               	addwfc	fsr2h,f,c
  2215  0018A6  50DF               	movf	indf2,w,c
  2216  0018A8  0B1F               	andlw	31
  2217  0018AA  0A1D               	xorlw	29
  2218  0018AC  A4D8               	btfss	status,2,c
  2219  0018AE  D7AC               	goto	l5096
  2220  0018B0                     u5550:
  2221                           
  2222                           ;dcc.c: 448:                         i+=2;
  2223  0018B0  0E02               	movlw	2
  2224  0018B2  0105               	movlb	5	; () banked
  2225  0018B4  D13D               	goto	L3
  2226  0018B6                     l5126:
  2227                           
  2228                           ; BSR set to: 5
  2229  0018B6  0EBF               	movlw	low _dcc_mesg
  2230  0018B8  25A9               	addwf	dcc_decode@i& (0+255),w,b
  2231  0018BA  6ED9               	movwf	fsr2l,c
  2232  0018BC  6ADA               	clrf	fsr2h,c
  2233  0018BE  0E05               	movlw	high _dcc_mesg
  2234  0018C0  22DA               	addwfc	fsr2h,f,c
  2235  0018C2  50DF               	movf	indf2,w,c
  2236  0018C4  0BE0               	andlw	224
  2237  0018C6  0A40               	xorlw	64
  2238  0018C8  A4D8               	btfss	status,2,c
  2239  0018CA  D01E               	goto	l5134
  2240                           
  2241                           ; BSR set to: 5
  2242                           ;dcc.c: 461:                     my_dcc_direction = 'R';
  2243  0018CC  0E52               	movlw	82
  2244  0018CE  6FF4               	movwf	_my_dcc_direction& (0+255),b
  2245                           
  2246                           ;dcc.c: 462:                     my_dcc_speedsteps = 28;
  2247  0018D0  0E1C               	movlw	28
  2248  0018D2  6FE3               	movwf	_my_dcc_speedsteps& (0+255),b
  2249                           
  2250                           ; BSR set to: 5
  2251                           ;dcc.c: 463:                     my_dcc_speed = dcc_speeds[dcc_mesg[i] & 0x1F];
  2252  0018D4  0EBF               	movlw	low _dcc_mesg
  2253  0018D6  25A9               	addwf	dcc_decode@i& (0+255),w,b
  2254  0018D8  6ED9               	movwf	fsr2l,c
  2255  0018DA  6ADA               	clrf	fsr2h,c
  2256  0018DC  0E05               	movlw	high _dcc_mesg
  2257  0018DE  22DA               	addwfc	fsr2h,f,c
  2258  0018E0  50DF               	movf	indf2,w,c
  2259  0018E2  0B1F               	andlw	31
  2260  0018E4  6F9B               	movwf	??_dcc_decode& (0+255),b
  2261  0018E6  6B9C               	clrf	(??_dcc_decode+1)& (0+255),b
  2262  0018E8  0E20               	movlw	low _dcc_speeds
  2263  0018EA  259B               	addwf	??_dcc_decode& (0+255),w,b
  2264  0018EC  6ED9               	movwf	fsr2l,c
  2265  0018EE  0E06               	movlw	high _dcc_speeds
  2266  0018F0  219C               	addwfc	(??_dcc_decode+1)& (0+255),w,b
  2267  0018F2  6EDA               	movwf	fsr2h,c
  2268  0018F4  50DF               	movf	indf2,w,c
  2269  0018F6  6FE2               	movwf	_my_dcc_speed& (0+255),b
  2270                           
  2271                           ; BSR set to: 5
  2272                           ;dcc.c: 464:                     motor_control(my_dcc_speedsteps, my_dcc_speed, my_dcc_d
      +                          irection);
  2273  0018F8  C5E2  F505         	movff	_my_dcc_speed,motor_control@speed
  2274  0018FC  C5F4  F506         	movff	_my_dcc_direction,motor_control@direction
  2275  001900  51E3               	movf	_my_dcc_speedsteps& (0+255),w,b
  2276  001902  ECAB  F01C         	call	_motor_control
  2277                           
  2278                           ;dcc.c: 469:                 } else if ((dcc_mesg[i] & 0xE0) == 0x60) {
  2279  001906  D2FB               	goto	l5260
  2280  001908                     l5134:
  2281                           
  2282                           ; BSR set to: 5
  2283  001908  0EBF               	movlw	low _dcc_mesg
  2284  00190A  25A9               	addwf	dcc_decode@i& (0+255),w,b
  2285  00190C  6ED9               	movwf	fsr2l,c
  2286  00190E  6ADA               	clrf	fsr2h,c
  2287  001910  0E05               	movlw	high _dcc_mesg
  2288  001912  22DA               	addwfc	fsr2h,f,c
  2289  001914  50DF               	movf	indf2,w,c
  2290  001916  0BE0               	andlw	224
  2291  001918  0A60               	xorlw	96
  2292  00191A  A4D8               	btfss	status,2,c
  2293  00191C  D01E               	goto	l5142
  2294                           
  2295                           ; BSR set to: 5
  2296                           ;dcc.c: 471:                     my_dcc_direction = 'F';
  2297  00191E  0E46               	movlw	70
  2298  001920  6FF4               	movwf	_my_dcc_direction& (0+255),b
  2299                           
  2300                           ;dcc.c: 472:                     my_dcc_speedsteps = 28;
  2301  001922  0E1C               	movlw	28
  2302  001924  6FE3               	movwf	_my_dcc_speedsteps& (0+255),b
  2303                           
  2304                           ; BSR set to: 5
  2305                           ;dcc.c: 473:                     my_dcc_speed = dcc_speeds[dcc_mesg[i] & 0x1F];
  2306  001926  0EBF               	movlw	low _dcc_mesg
  2307  001928  25A9               	addwf	dcc_decode@i& (0+255),w,b
  2308  00192A  6ED9               	movwf	fsr2l,c
  2309  00192C  6ADA               	clrf	fsr2h,c
  2310  00192E  0E05               	movlw	high _dcc_mesg
  2311  001930  22DA               	addwfc	fsr2h,f,c
  2312  001932  50DF               	movf	indf2,w,c
  2313  001934  0B1F               	andlw	31
  2314  001936  6F9B               	movwf	??_dcc_decode& (0+255),b
  2315  001938  6B9C               	clrf	(??_dcc_decode+1)& (0+255),b
  2316  00193A  0E20               	movlw	low _dcc_speeds
  2317  00193C  259B               	addwf	??_dcc_decode& (0+255),w,b
  2318  00193E  6ED9               	movwf	fsr2l,c
  2319  001940  0E06               	movlw	high _dcc_speeds
  2320  001942  219C               	addwfc	(??_dcc_decode+1)& (0+255),w,b
  2321  001944  6EDA               	movwf	fsr2h,c
  2322  001946  50DF               	movf	indf2,w,c
  2323  001948  6FE2               	movwf	_my_dcc_speed& (0+255),b
  2324                           
  2325                           ; BSR set to: 5
  2326                           ;dcc.c: 474:                     motor_control(my_dcc_speedsteps, my_dcc_speed, my_dcc_d
      +                          irection);
  2327  00194A  C5E2  F505         	movff	_my_dcc_speed,motor_control@speed
  2328  00194E  C5F4  F506         	movff	_my_dcc_direction,motor_control@direction
  2329  001952  51E3               	movf	_my_dcc_speedsteps& (0+255),w,b
  2330  001954  ECAB  F01C         	call	_motor_control
  2331                           
  2332                           ;dcc.c: 479:                 } else if ((dcc_mesg[i] & 0xE0) == 0x80) {
  2333  001958  D2D2               	goto	l5260
  2334  00195A                     l5142:
  2335                           
  2336                           ; BSR set to: 5
  2337  00195A  0EBF               	movlw	low _dcc_mesg
  2338  00195C  25A9               	addwf	dcc_decode@i& (0+255),w,b
  2339  00195E  6ED9               	movwf	fsr2l,c
  2340  001960  6ADA               	clrf	fsr2h,c
  2341  001962  0E05               	movlw	high _dcc_mesg
  2342  001964  22DA               	addwfc	fsr2h,f,c
  2343  001966  50DF               	movf	indf2,w,c
  2344  001968  0BE0               	andlw	224
  2345  00196A  0A80               	xorlw	128
  2346  00196C  A4D8               	btfss	status,2,c
  2347  00196E  D042               	goto	l5148
  2348                           
  2349                           ; BSR set to: 5
  2350                           ;dcc.c: 480:                     my_dcc_functions[0] = (dcc_mesg[i] & 0x10) >> 4;
  2351  001970  0EBF               	movlw	low _dcc_mesg
  2352  001972  25A9               	addwf	dcc_decode@i& (0+255),w,b
  2353  001974  6ED9               	movwf	fsr2l,c
  2354  001976  6ADA               	clrf	fsr2h,c
  2355  001978  0E05               	movlw	high _dcc_mesg
  2356  00197A  22DA               	addwfc	fsr2h,f,c
  2357  00197C  50DF               	movf	indf2,w,c
  2358  00197E  6F9B               	movwf	??_dcc_decode& (0+255),b
  2359  001980  399B               	swapf	??_dcc_decode& (0+255),w,b
  2360  001982  0B0F               	andlw	15
  2361  001984  0B01               	andlw	1
  2362  001986  6FAC               	movwf	_my_dcc_functions& (0+255),b
  2363                           
  2364                           ;dcc.c: 481:                     my_dcc_functions[1] = (dcc_mesg[i] & 0x01);
  2365  001988  0EBF               	movlw	low _dcc_mesg
  2366  00198A  25A9               	addwf	dcc_decode@i& (0+255),w,b
  2367  00198C  6ED9               	movwf	fsr2l,c
  2368  00198E  6ADA               	clrf	fsr2h,c
  2369  001990  0E05               	movlw	high _dcc_mesg
  2370  001992  22DA               	addwfc	fsr2h,f,c
  2371  001994  50DF               	movf	indf2,w,c
  2372  001996  0B01               	andlw	1
  2373  001998  6FAD               	movwf	(_my_dcc_functions+1)& (0+255),b
  2374                           
  2375                           ;dcc.c: 482:                     my_dcc_functions[2] = (dcc_mesg[i] & 0x02) >> 1;
  2376  00199A  0EBF               	movlw	low _dcc_mesg
  2377  00199C  25A9               	addwf	dcc_decode@i& (0+255),w,b
  2378  00199E  6ED9               	movwf	fsr2l,c
  2379  0019A0  6ADA               	clrf	fsr2h,c
  2380  0019A2  0E05               	movlw	high _dcc_mesg
  2381  0019A4  22DA               	addwfc	fsr2h,f,c
  2382  0019A6  50DF               	movf	indf2,w,c
  2383  0019A8  6F9B               	movwf	??_dcc_decode& (0+255),b
  2384  0019AA  90D8               	bcf	status,0,c
  2385  0019AC  319B               	rrcf	??_dcc_decode& (0+255),w,b
  2386  0019AE  0B01               	andlw	1
  2387  0019B0  6FAE               	movwf	(_my_dcc_functions+2)& (0+255),b
  2388                           
  2389                           ;dcc.c: 483:                     my_dcc_functions[3] = (dcc_mesg[i] & 0x04) >> 2;
  2390  0019B2  0EBF               	movlw	low _dcc_mesg
  2391  0019B4  25A9               	addwf	dcc_decode@i& (0+255),w,b
  2392  0019B6  6ED9               	movwf	fsr2l,c
  2393  0019B8  6ADA               	clrf	fsr2h,c
  2394  0019BA  0E05               	movlw	high _dcc_mesg
  2395  0019BC  22DA               	addwfc	fsr2h,f,c
  2396  0019BE  50DF               	movf	indf2,w,c
  2397  0019C0  6F9B               	movwf	??_dcc_decode& (0+255),b
  2398  0019C2  90D8               	bcf	status,0,c
  2399  0019C4  339B               	rrcf	??_dcc_decode& (0+255),f,b
  2400  0019C6  90D8               	bcf	status,0,c
  2401  0019C8  319B               	rrcf	??_dcc_decode& (0+255),w,b
  2402  0019CA  0B01               	andlw	1
  2403  0019CC  6FAF               	movwf	(_my_dcc_functions+3)& (0+255),b
  2404                           
  2405                           ;dcc.c: 484:                     my_dcc_functions[4] = (dcc_mesg[i] & 0x08) >> 3;
  2406  0019CE  0EBF               	movlw	low _dcc_mesg
  2407  0019D0  25A9               	addwf	dcc_decode@i& (0+255),w,b
  2408  0019D2  6ED9               	movwf	fsr2l,c
  2409  0019D4  6ADA               	clrf	fsr2h,c
  2410  0019D6  0E05               	movlw	high _dcc_mesg
  2411  0019D8  22DA               	addwfc	fsr2h,f,c
  2412  0019DA  50DF               	movf	indf2,w,c
  2413  0019DC  6F9B               	movwf	??_dcc_decode& (0+255),b
  2414  0019DE  90D8               	bcf	status,0,c
  2415  0019E0  339B               	rrcf	??_dcc_decode& (0+255),f,b
  2416  0019E2  90D8               	bcf	status,0,c
  2417  0019E4  339B               	rrcf	??_dcc_decode& (0+255),f,b
  2418  0019E6  90D8               	bcf	status,0,c
  2419  0019E8  319B               	rrcf	??_dcc_decode& (0+255),w,b
  2420  0019EA  0B01               	andlw	1
  2421  0019EC  6FB0               	movwf	(_my_dcc_functions+4)& (0+255),b
  2422  0019EE                     l5146:
  2423                           
  2424                           ; BSR set to: 5
  2425                           ;dcc.c: 485:                     function_control();
  2426  0019EE  ECF3  F01D         	call	_function_control	;wreg free
  2427                           
  2428                           ;dcc.c: 492:                 } else if ((dcc_mesg[i] & 0xE0) == 0xA0) {
  2429  0019F2  D285               	goto	l5260
  2430  0019F4                     l5148:
  2431                           
  2432                           ; BSR set to: 5
  2433  0019F4  0EBF               	movlw	low _dcc_mesg
  2434  0019F6  25A9               	addwf	dcc_decode@i& (0+255),w,b
  2435  0019F8  6ED9               	movwf	fsr2l,c
  2436  0019FA  6ADA               	clrf	fsr2h,c
  2437  0019FC  0E05               	movlw	high _dcc_mesg
  2438  0019FE  22DA               	addwfc	fsr2h,f,c
  2439  001A00  50DF               	movf	indf2,w,c
  2440  001A02  0BE0               	andlw	224
  2441  001A04  0AA0               	xorlw	160
  2442  001A06  A4D8               	btfss	status,2,c
  2443  001A08  D070               	goto	l5160
  2444                           
  2445                           ; BSR set to: 5
  2446                           ;dcc.c: 493:                     if ((dcc_mesg[i] & 0x10) == 0x10) {
  2447  001A0A  0EBF               	movlw	low _dcc_mesg
  2448  001A0C  25A9               	addwf	dcc_decode@i& (0+255),w,b
  2449  001A0E  6ED9               	movwf	fsr2l,c
  2450  001A10  6ADA               	clrf	fsr2h,c
  2451  001A12  0E05               	movlw	high _dcc_mesg
  2452  001A14  22DA               	addwfc	fsr2h,f,c
  2453  001A16  A8DF               	btfss	indf2,4,c
  2454  001A18  D034               	goto	l5156
  2455                           
  2456                           ; BSR set to: 5
  2457                           ;dcc.c: 494:                         my_dcc_functions[5] = (dcc_mesg[i] & 0x01);
  2458  001A1A  0EBF               	movlw	low _dcc_mesg
  2459  001A1C  25A9               	addwf	dcc_decode@i& (0+255),w,b
  2460  001A1E  6ED9               	movwf	fsr2l,c
  2461  001A20  6ADA               	clrf	fsr2h,c
  2462  001A22  0E05               	movlw	high _dcc_mesg
  2463  001A24  22DA               	addwfc	fsr2h,f,c
  2464  001A26  50DF               	movf	indf2,w,c
  2465  001A28  0B01               	andlw	1
  2466  001A2A  6FB1               	movwf	(_my_dcc_functions+5)& (0+255),b
  2467                           
  2468                           ;dcc.c: 495:                         my_dcc_functions[6] = (dcc_mesg[i] & 0x02) >> 1;
  2469  001A2C  0EBF               	movlw	low _dcc_mesg
  2470  001A2E  25A9               	addwf	dcc_decode@i& (0+255),w,b
  2471  001A30  6ED9               	movwf	fsr2l,c
  2472  001A32  6ADA               	clrf	fsr2h,c
  2473  001A34  0E05               	movlw	high _dcc_mesg
  2474  001A36  22DA               	addwfc	fsr2h,f,c
  2475  001A38  50DF               	movf	indf2,w,c
  2476  001A3A  6F9B               	movwf	??_dcc_decode& (0+255),b
  2477  001A3C  90D8               	bcf	status,0,c
  2478  001A3E  319B               	rrcf	??_dcc_decode& (0+255),w,b
  2479  001A40  0B01               	andlw	1
  2480  001A42  6FB2               	movwf	(_my_dcc_functions+6)& (0+255),b
  2481                           
  2482                           ;dcc.c: 496:                         my_dcc_functions[7] = (dcc_mesg[i] & 0x04) >> 2;
  2483  001A44  0EBF               	movlw	low _dcc_mesg
  2484  001A46  25A9               	addwf	dcc_decode@i& (0+255),w,b
  2485  001A48  6ED9               	movwf	fsr2l,c
  2486  001A4A  6ADA               	clrf	fsr2h,c
  2487  001A4C  0E05               	movlw	high _dcc_mesg
  2488  001A4E  22DA               	addwfc	fsr2h,f,c
  2489  001A50  50DF               	movf	indf2,w,c
  2490  001A52  6F9B               	movwf	??_dcc_decode& (0+255),b
  2491  001A54  90D8               	bcf	status,0,c
  2492  001A56  339B               	rrcf	??_dcc_decode& (0+255),f,b
  2493  001A58  90D8               	bcf	status,0,c
  2494  001A5A  319B               	rrcf	??_dcc_decode& (0+255),w,b
  2495  001A5C  0B01               	andlw	1
  2496  001A5E  6FB3               	movwf	(_my_dcc_functions+7)& (0+255),b
  2497                           
  2498                           ;dcc.c: 497:                         my_dcc_functions[8] = (dcc_mesg[i] & 0x08) >> 3;
  2499  001A60  0EBF               	movlw	low _dcc_mesg
  2500  001A62  25A9               	addwf	dcc_decode@i& (0+255),w,b
  2501  001A64  6ED9               	movwf	fsr2l,c
  2502  001A66  6ADA               	clrf	fsr2h,c
  2503  001A68  0E05               	movlw	high _dcc_mesg
  2504  001A6A  22DA               	addwfc	fsr2h,f,c
  2505  001A6C  50DF               	movf	indf2,w,c
  2506  001A6E  6F9B               	movwf	??_dcc_decode& (0+255),b
  2507  001A70  90D8               	bcf	status,0,c
  2508  001A72  339B               	rrcf	??_dcc_decode& (0+255),f,b
  2509  001A74  90D8               	bcf	status,0,c
  2510  001A76  339B               	rrcf	??_dcc_decode& (0+255),f,b
  2511  001A78  90D8               	bcf	status,0,c
  2512  001A7A  319B               	rrcf	??_dcc_decode& (0+255),w,b
  2513  001A7C  0B01               	andlw	1
  2514  001A7E  6FB4               	movwf	(_my_dcc_functions+8)& (0+255),b
  2515  001A80  D7B6               	goto	l5146
  2516  001A82                     l5156:
  2517                           
  2518                           ; BSR set to: 5
  2519                           ;dcc.c: 505:                         my_dcc_functions[9] = (dcc_mesg[i] & 0x01);
  2520  001A82  0EBF               	movlw	low _dcc_mesg
  2521  001A84  25A9               	addwf	dcc_decode@i& (0+255),w,b
  2522  001A86  6ED9               	movwf	fsr2l,c
  2523  001A88  6ADA               	clrf	fsr2h,c
  2524  001A8A  0E05               	movlw	high _dcc_mesg
  2525  001A8C  22DA               	addwfc	fsr2h,f,c
  2526  001A8E  50DF               	movf	indf2,w,c
  2527  001A90  0B01               	andlw	1
  2528  001A92  6FB5               	movwf	(_my_dcc_functions+9)& (0+255),b
  2529                           
  2530                           ;dcc.c: 506:                         my_dcc_functions[10] = (dcc_mesg[i] & 0x02) >> 1;
  2531  001A94  0EBF               	movlw	low _dcc_mesg
  2532  001A96  25A9               	addwf	dcc_decode@i& (0+255),w,b
  2533  001A98  6ED9               	movwf	fsr2l,c
  2534  001A9A  6ADA               	clrf	fsr2h,c
  2535  001A9C  0E05               	movlw	high _dcc_mesg
  2536  001A9E  22DA               	addwfc	fsr2h,f,c
  2537  001AA0  50DF               	movf	indf2,w,c
  2538  001AA2  6F9B               	movwf	??_dcc_decode& (0+255),b
  2539  001AA4  90D8               	bcf	status,0,c
  2540  001AA6  319B               	rrcf	??_dcc_decode& (0+255),w,b
  2541  001AA8  0B01               	andlw	1
  2542  001AAA  6FB6               	movwf	(_my_dcc_functions+10)& (0+255),b
  2543                           
  2544                           ;dcc.c: 507:                         my_dcc_functions[11] = (dcc_mesg[i] & 0x04) >> 2;
  2545  001AAC  0EBF               	movlw	low _dcc_mesg
  2546  001AAE  25A9               	addwf	dcc_decode@i& (0+255),w,b
  2547  001AB0  6ED9               	movwf	fsr2l,c
  2548  001AB2  6ADA               	clrf	fsr2h,c
  2549  001AB4  0E05               	movlw	high _dcc_mesg
  2550  001AB6  22DA               	addwfc	fsr2h,f,c
  2551  001AB8  50DF               	movf	indf2,w,c
  2552  001ABA  6F9B               	movwf	??_dcc_decode& (0+255),b
  2553  001ABC  90D8               	bcf	status,0,c
  2554  001ABE  339B               	rrcf	??_dcc_decode& (0+255),f,b
  2555  001AC0  90D8               	bcf	status,0,c
  2556  001AC2  319B               	rrcf	??_dcc_decode& (0+255),w,b
  2557  001AC4  0B01               	andlw	1
  2558  001AC6  6FB7               	movwf	(_my_dcc_functions+11)& (0+255),b
  2559                           
  2560                           ;dcc.c: 508:                         my_dcc_functions[12] = (dcc_mesg[i] & 0x08) >> 3;
  2561  001AC8  0EBF               	movlw	low _dcc_mesg
  2562  001ACA  25A9               	addwf	dcc_decode@i& (0+255),w,b
  2563  001ACC  6ED9               	movwf	fsr2l,c
  2564  001ACE  6ADA               	clrf	fsr2h,c
  2565  001AD0  0E05               	movlw	high _dcc_mesg
  2566  001AD2  22DA               	addwfc	fsr2h,f,c
  2567  001AD4  50DF               	movf	indf2,w,c
  2568  001AD6  6F9B               	movwf	??_dcc_decode& (0+255),b
  2569  001AD8  90D8               	bcf	status,0,c
  2570  001ADA  339B               	rrcf	??_dcc_decode& (0+255),f,b
  2571  001ADC  90D8               	bcf	status,0,c
  2572  001ADE  339B               	rrcf	??_dcc_decode& (0+255),f,b
  2573  001AE0  90D8               	bcf	status,0,c
  2574  001AE2  319B               	rrcf	??_dcc_decode& (0+255),w,b
  2575  001AE4  0B01               	andlw	1
  2576  001AE6  6FB8               	movwf	(_my_dcc_functions+12)& (0+255),b
  2577  001AE8  D782               	goto	l5146
  2578  001AEA                     l5160:
  2579                           
  2580                           ; BSR set to: 5
  2581  001AEA  0EBF               	movlw	low _dcc_mesg
  2582  001AEC  25A9               	addwf	dcc_decode@i& (0+255),w,b
  2583  001AEE  6ED9               	movwf	fsr2l,c
  2584  001AF0  6ADA               	clrf	fsr2h,c
  2585  001AF2  0E05               	movlw	high _dcc_mesg
  2586  001AF4  22DA               	addwfc	fsr2h,f,c
  2587  001AF6  50DF               	movf	indf2,w,c
  2588  001AF8  0BE0               	andlw	224
  2589  001AFA  0AC0               	xorlw	192
  2590  001AFC  A4D8               	btfss	status,2,c
  2591  001AFE  D07E               	goto	l5206
  2592                           
  2593                           ; BSR set to: 5
  2594                           ;dcc.c: 522:                     if ((dcc_mesg[i] & 0x1F) == 0x00) {
  2595  001B00  0EBF               	movlw	low _dcc_mesg
  2596  001B02  25A9               	addwf	dcc_decode@i& (0+255),w,b
  2597  001B04  6ED9               	movwf	fsr2l,c
  2598  001B06  6ADA               	clrf	fsr2h,c
  2599  001B08  0E05               	movlw	high _dcc_mesg
  2600  001B0A  22DA               	addwfc	fsr2h,f,c
  2601  001B0C  50DF               	movf	indf2,w,c
  2602  001B0E  6F9B               	movwf	??_dcc_decode& (0+255),b
  2603  001B10  0E1F               	movlw	31
  2604  001B12  179B               	andwf	??_dcc_decode& (0+255),f,b
  2605  001B14  B4D8               	btfsc	status,2,c
  2606  001B16  D6CC               	goto	u5550
  2607                           
  2608                           ; BSR set to: 5
  2609  001B18  0EBF               	movlw	low _dcc_mesg
  2610  001B1A  25A9               	addwf	dcc_decode@i& (0+255),w,b
  2611  001B1C  6ED9               	movwf	fsr2l,c
  2612  001B1E  6ADA               	clrf	fsr2h,c
  2613  001B20  0E05               	movlw	high _dcc_mesg
  2614  001B22  22DA               	addwfc	fsr2h,f,c
  2615  001B24  50DF               	movf	indf2,w,c
  2616  001B26  0B1F               	andlw	31
  2617  001B28  06E8               	decf	wreg,f,c
  2618  001B2A  A4D8               	btfss	status,2,c
  2619  001B2C  D003               	goto	l5170
  2620                           
  2621                           ; BSR set to: 5
  2622                           ;dcc.c: 528:                         i+=3;
  2623  001B2E  0E03               	movlw	3
  2624  001B30                     L3:
  2625  001B30  27A9               	addwf	dcc_decode@i& (0+255),f,b
  2626                           
  2627                           ;dcc.c: 530:                     } else if ((dcc_mesg[i] & 0x1F) == 0x02) {
  2628  001B32  D1E5               	goto	l5260
  2629  001B34                     l5170:
  2630                           
  2631                           ; BSR set to: 5
  2632  001B34  0EBF               	movlw	low _dcc_mesg
  2633  001B36  25A9               	addwf	dcc_decode@i& (0+255),w,b
  2634  001B38  6ED9               	movwf	fsr2l,c
  2635  001B3A  6ADA               	clrf	fsr2h,c
  2636  001B3C  0E05               	movlw	high _dcc_mesg
  2637  001B3E  22DA               	addwfc	fsr2h,f,c
  2638  001B40  50DF               	movf	indf2,w,c
  2639  001B42  0B1F               	andlw	31
  2640  001B44  0A02               	xorlw	2
  2641  001B46  B4D8               	btfsc	status,2,c
  2642  001B48  D6B3               	goto	u5550
  2643                           
  2644                           ; BSR set to: 5
  2645  001B4A  0EBF               	movlw	low _dcc_mesg
  2646  001B4C  25A9               	addwf	dcc_decode@i& (0+255),w,b
  2647  001B4E  6ED9               	movwf	fsr2l,c
  2648  001B50  6ADA               	clrf	fsr2h,c
  2649  001B52  0E05               	movlw	high _dcc_mesg
  2650  001B54  22DA               	addwfc	fsr2h,f,c
  2651  001B56  50DF               	movf	indf2,w,c
  2652  001B58  0B1F               	andlw	31
  2653  001B5A  0A1D               	xorlw	29
  2654  001B5C  B4D8               	btfsc	status,2,c
  2655  001B5E  D654               	goto	l5096
  2656                           
  2657                           ; BSR set to: 5
  2658  001B60  0EBF               	movlw	low _dcc_mesg
  2659  001B62  25A9               	addwf	dcc_decode@i& (0+255),w,b
  2660  001B64  6ED9               	movwf	fsr2l,c
  2661  001B66  6ADA               	clrf	fsr2h,c
  2662  001B68  0E05               	movlw	high _dcc_mesg
  2663  001B6A  22DA               	addwfc	fsr2h,f,c
  2664  001B6C  50DF               	movf	indf2,w,c
  2665  001B6E  0B1F               	andlw	31
  2666  001B70  0A1E               	xorlw	30
  2667  001B72  B4D8               	btfsc	status,2,c
  2668  001B74  D649               	goto	l5096
  2669                           
  2670                           ; BSR set to: 5
  2671  001B76  0EBF               	movlw	low _dcc_mesg
  2672  001B78  25A9               	addwf	dcc_decode@i& (0+255),w,b
  2673  001B7A  6ED9               	movwf	fsr2l,c
  2674  001B7C  6ADA               	clrf	fsr2h,c
  2675  001B7E  0E05               	movlw	high _dcc_mesg
  2676  001B80  22DA               	addwfc	fsr2h,f,c
  2677  001B82  50DF               	movf	indf2,w,c
  2678  001B84  0B1F               	andlw	31
  2679  001B86  0A1F               	xorlw	31
  2680  001B88  B4D8               	btfsc	status,2,c
  2681  001B8A  D63E               	goto	l5096
  2682                           
  2683                           ; BSR set to: 5
  2684  001B8C  0EBF               	movlw	low _dcc_mesg
  2685  001B8E  25A9               	addwf	dcc_decode@i& (0+255),w,b
  2686  001B90  6ED9               	movwf	fsr2l,c
  2687  001B92  6ADA               	clrf	fsr2h,c
  2688  001B94  0E05               	movlw	high _dcc_mesg
  2689  001B96  22DA               	addwfc	fsr2h,f,c
  2690  001B98  50DF               	movf	indf2,w,c
  2691  001B9A  0B1F               	andlw	31
  2692  001B9C  0A18               	xorlw	24
  2693  001B9E  B4D8               	btfsc	status,2,c
  2694  001BA0  D633               	goto	l5096
  2695                           
  2696                           ; BSR set to: 5
  2697  001BA2  0EBF               	movlw	low _dcc_mesg
  2698  001BA4  25A9               	addwf	dcc_decode@i& (0+255),w,b
  2699  001BA6  6ED9               	movwf	fsr2l,c
  2700  001BA8  6ADA               	clrf	fsr2h,c
  2701  001BAA  0E05               	movlw	high _dcc_mesg
  2702  001BAC  22DA               	addwfc	fsr2h,f,c
  2703  001BAE  50DF               	movf	indf2,w,c
  2704  001BB0  0B1F               	andlw	31
  2705  001BB2  0A19               	xorlw	25
  2706  001BB4  B4D8               	btfsc	status,2,c
  2707  001BB6  D628               	goto	l5096
  2708                           
  2709                           ; BSR set to: 5
  2710  001BB8  0EBF               	movlw	low _dcc_mesg
  2711  001BBA  25A9               	addwf	dcc_decode@i& (0+255),w,b
  2712  001BBC  6ED9               	movwf	fsr2l,c
  2713  001BBE  6ADA               	clrf	fsr2h,c
  2714  001BC0  0E05               	movlw	high _dcc_mesg
  2715  001BC2  22DA               	addwfc	fsr2h,f,c
  2716  001BC4  50DF               	movf	indf2,w,c
  2717  001BC6  0B1F               	andlw	31
  2718  001BC8  0A1C               	xorlw	28
  2719  001BCA  B4D8               	btfsc	status,2,c
  2720  001BCC  D61D               	goto	l5096
  2721                           
  2722                           ; BSR set to: 5
  2723  001BCE  0EBF               	movlw	low _dcc_mesg
  2724  001BD0  25A9               	addwf	dcc_decode@i& (0+255),w,b
  2725  001BD2  6ED9               	movwf	fsr2l,c
  2726  001BD4  6ADA               	clrf	fsr2h,c
  2727  001BD6  0E05               	movlw	high _dcc_mesg
  2728  001BD8  22DA               	addwfc	fsr2h,f,c
  2729  001BDA  50DF               	movf	indf2,w,c
  2730  001BDC  0B1F               	andlw	31
  2731  001BDE  0A1B               	xorlw	27
  2732  001BE0  B4D8               	btfsc	status,2,c
  2733  001BE2  D612               	goto	l5096
  2734                           
  2735                           ; BSR set to: 5
  2736  001BE4  0EBF               	movlw	low _dcc_mesg
  2737  001BE6  25A9               	addwf	dcc_decode@i& (0+255),w,b
  2738  001BE8  6ED9               	movwf	fsr2l,c
  2739  001BEA  6ADA               	clrf	fsr2h,c
  2740  001BEC  0E05               	movlw	high _dcc_mesg
  2741  001BEE  22DA               	addwfc	fsr2h,f,c
  2742  001BF0  50DF               	movf	indf2,w,c
  2743  001BF2  0B1F               	andlw	31
  2744  001BF4  0A18               	xorlw	24
  2745  001BF6  B4D8               	btfsc	status,2,c
  2746  001BF8  D607               	goto	l5096
  2747  001BFA  D181               	goto	l5260
  2748  001BFC                     l5206:
  2749                           
  2750                           ; BSR set to: 5
  2751  001BFC  0EBF               	movlw	low _dcc_mesg
  2752  001BFE  25A9               	addwf	dcc_decode@i& (0+255),w,b
  2753  001C00  6ED9               	movwf	fsr2l,c
  2754  001C02  6ADA               	clrf	fsr2h,c
  2755  001C04  0E05               	movlw	high _dcc_mesg
  2756  001C06  22DA               	addwfc	fsr2h,f,c
  2757  001C08  50DF               	movf	indf2,w,c
  2758  001C0A  0BE0               	andlw	224
  2759  001C0C  0AE0               	xorlw	224
  2760  001C0E  A4D8               	btfss	status,2,c
  2761  001C10  D176               	goto	l5260
  2762                           
  2763                           ; BSR set to: 5
  2764                           ;dcc.c: 569:                     if (dcc_mesg[i] & 0x10) {
  2765  001C12  0EBF               	movlw	low _dcc_mesg
  2766  001C14  25A9               	addwf	dcc_decode@i& (0+255),w,b
  2767  001C16  6ED9               	movwf	fsr2l,c
  2768  001C18  6ADA               	clrf	fsr2h,c
  2769  001C1A  0E05               	movlw	high _dcc_mesg
  2770  001C1C  22DA               	addwfc	fsr2h,f,c
  2771  001C1E  A8DF               	btfss	indf2,4,c
  2772  001C20  D0C5               	goto	l5234
  2773                           
  2774                           ; BSR set to: 5
  2775                           ;dcc.c: 571:                         if ((dcc_mesg[i] & 0x0F) == 0x02) {
  2776  001C22  0EBF               	movlw	low _dcc_mesg
  2777  001C24  25A9               	addwf	dcc_decode@i& (0+255),w,b
  2778  001C26  6ED9               	movwf	fsr2l,c
  2779  001C28  6ADA               	clrf	fsr2h,c
  2780  001C2A  0E05               	movlw	high _dcc_mesg
  2781  001C2C  22DA               	addwfc	fsr2h,f,c
  2782  001C2E  50DF               	movf	indf2,w,c
  2783  001C30  0B0F               	andlw	15
  2784  001C32  0A02               	xorlw	2
  2785  001C34  A4D8               	btfss	status,2,c
  2786  001C36  D00F               	goto	l5214
  2787                           
  2788                           ; BSR set to: 5
  2789                           ;dcc.c: 572:                             cv_write(23, dcc_mesg[i + 1]);
  2790  001C38  0E00               	movlw	0
  2791  001C3A  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  2792  001C3C  0E17               	movlw	23
  2793  001C3E  6E07               	movwf	cv_write@cv^(0+1280),c
  2794  001C40  0EC0               	movlw	low (_dcc_mesg+1)
  2795  001C42  25A9               	addwf	dcc_decode@i& (0+255),w,b
  2796  001C44  6ED9               	movwf	fsr2l,c
  2797  001C46  6ADA               	clrf	fsr2h,c
  2798  001C48  0E05               	movlw	high (_dcc_mesg+1)
  2799  001C4A  22DA               	addwfc	fsr2h,f,c
  2800  001C4C  50DF               	movf	indf2,w,c
  2801  001C4E  6E09               	movwf	cv_write@value^(0+1280),c
  2802  001C50  EC43  F020         	call	_cv_write	;wreg free
  2803                           
  2804                           ;dcc.c: 577:                         } else if ((dcc_mesg[i] & 0x0F) == 0x03) {
  2805  001C54  D62D               	goto	u5550
  2806  001C56                     l5214:
  2807                           
  2808                           ; BSR set to: 5
  2809  001C56  0EBF               	movlw	low _dcc_mesg
  2810  001C58  25A9               	addwf	dcc_decode@i& (0+255),w,b
  2811  001C5A  6ED9               	movwf	fsr2l,c
  2812  001C5C  6ADA               	clrf	fsr2h,c
  2813  001C5E  0E05               	movlw	high _dcc_mesg
  2814  001C60  22DA               	addwfc	fsr2h,f,c
  2815  001C62  50DF               	movf	indf2,w,c
  2816  001C64  0B0F               	andlw	15
  2817  001C66  0A03               	xorlw	3
  2818  001C68  A4D8               	btfss	status,2,c
  2819  001C6A  D00F               	goto	l5218
  2820                           
  2821                           ; BSR set to: 5
  2822                           ;dcc.c: 578:                             cv_write(24, dcc_mesg[i + 1]);
  2823  001C6C  0E00               	movlw	0
  2824  001C6E  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  2825  001C70  0E18               	movlw	24
  2826  001C72  6E07               	movwf	cv_write@cv^(0+1280),c
  2827  001C74  0EC0               	movlw	low (_dcc_mesg+1)
  2828  001C76  25A9               	addwf	dcc_decode@i& (0+255),w,b
  2829  001C78  6ED9               	movwf	fsr2l,c
  2830  001C7A  6ADA               	clrf	fsr2h,c
  2831  001C7C  0E05               	movlw	high (_dcc_mesg+1)
  2832  001C7E  22DA               	addwfc	fsr2h,f,c
  2833  001C80  50DF               	movf	indf2,w,c
  2834  001C82  6E09               	movwf	cv_write@value^(0+1280),c
  2835  001C84  EC43  F020         	call	_cv_write	;wreg free
  2836                           
  2837                           ;dcc.c: 583:                         } else if ((dcc_mesg[i] & 0x0F) == 0x04) {
  2838  001C88  D613               	goto	u5550
  2839  001C8A                     l5218:
  2840                           
  2841                           ; BSR set to: 5
  2842  001C8A  0EBF               	movlw	low _dcc_mesg
  2843  001C8C  25A9               	addwf	dcc_decode@i& (0+255),w,b
  2844  001C8E  6ED9               	movwf	fsr2l,c
  2845  001C90  6ADA               	clrf	fsr2h,c
  2846  001C92  0E05               	movlw	high _dcc_mesg
  2847  001C94  22DA               	addwfc	fsr2h,f,c
  2848  001C96  50DF               	movf	indf2,w,c
  2849  001C98  0B0F               	andlw	15
  2850  001C9A  0A04               	xorlw	4
  2851  001C9C  A4D8               	btfss	status,2,c
  2852  001C9E  D02C               	goto	l5224
  2853                           
  2854                           ; BSR set to: 5
  2855                           ;dcc.c: 584:                             cv_write(17, dcc_mesg[i + 1]);
  2856  001CA0  0E00               	movlw	0
  2857  001CA2  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  2858  001CA4  0E11               	movlw	17
  2859  001CA6  6E07               	movwf	cv_write@cv^(0+1280),c
  2860  001CA8  0EC0               	movlw	low (_dcc_mesg+1)
  2861  001CAA  25A9               	addwf	dcc_decode@i& (0+255),w,b
  2862  001CAC  6ED9               	movwf	fsr2l,c
  2863  001CAE  6ADA               	clrf	fsr2h,c
  2864  001CB0  0E05               	movlw	high (_dcc_mesg+1)
  2865  001CB2  22DA               	addwfc	fsr2h,f,c
  2866  001CB4  50DF               	movf	indf2,w,c
  2867  001CB6  6E09               	movwf	cv_write@value^(0+1280),c
  2868  001CB8  EC43  F020         	call	_cv_write	;wreg free
  2869                           
  2870                           ;dcc.c: 585:                             cv_write(18, dcc_mesg[i + 2]);
  2871  001CBC  0E00               	movlw	0
  2872  001CBE  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  2873  001CC0  0E12               	movlw	18
  2874  001CC2  6E07               	movwf	cv_write@cv^(0+1280),c
  2875  001CC4  0EC1               	movlw	low (_dcc_mesg+2)
  2876  001CC6  0105               	movlb	5	; () banked
  2877  001CC8  25A9               	addwf	dcc_decode@i& (0+255),w,b
  2878  001CCA  6ED9               	movwf	fsr2l,c
  2879  001CCC  6ADA               	clrf	fsr2h,c
  2880  001CCE  0E05               	movlw	high (_dcc_mesg+2)
  2881  001CD0  22DA               	addwfc	fsr2h,f,c
  2882  001CD2  50DF               	movf	indf2,w,c
  2883  001CD4  6E09               	movwf	cv_write@value^(0+1280),c
  2884  001CD6  EC43  F020         	call	_cv_write	;wreg free
  2885                           
  2886                           ;dcc.c: 587:                             cv_write(29, cv_read(29) | 0x20);
  2887  001CDA  0E00               	movlw	0
  2888  001CDC  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  2889  001CDE  0E1D               	movlw	29
  2890  001CE0  6E07               	movwf	cv_write@cv^(0+1280),c
  2891  001CE2  0E00               	movlw	0
  2892  001CE4  6E06               	movwf	(cv_read@cv+1)^(0+1280),c
  2893  001CE6  0E1D               	movlw	29
  2894  001CE8  6E05               	movwf	cv_read@cv^(0+1280),c
  2895  001CEA  EC37  F020         	call	_cv_read	;wreg free
  2896  001CEE  0920               	iorlw	32
  2897  001CF0  6E09               	movwf	cv_write@value^(0+1280),c
  2898  001CF2  EC43  F020         	call	_cv_write	;wreg free
  2899                           
  2900                           ;dcc.c: 592:                         } else if ((dcc_mesg[i] & 0x0F) == 0x05) {
  2901  001CF6  D5DC               	goto	u5550
  2902  001CF8                     l5224:
  2903                           
  2904                           ; BSR set to: 5
  2905  001CF8  0EBF               	movlw	low _dcc_mesg
  2906  001CFA  25A9               	addwf	dcc_decode@i& (0+255),w,b
  2907  001CFC  6ED9               	movwf	fsr2l,c
  2908  001CFE  6ADA               	clrf	fsr2h,c
  2909  001D00  0E05               	movlw	high _dcc_mesg
  2910  001D02  22DA               	addwfc	fsr2h,f,c
  2911  001D04  50DF               	movf	indf2,w,c
  2912  001D06  0B0F               	andlw	15
  2913  001D08  0A05               	xorlw	5
  2914  001D0A  A4D8               	btfss	status,2,c
  2915  001D0C  D01E               	goto	l5228
  2916                           
  2917                           ; BSR set to: 5
  2918                           ;dcc.c: 593:                             cv_write(31, dcc_mesg[i + 1]);
  2919  001D0E  0E00               	movlw	0
  2920  001D10  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  2921  001D12  0E1F               	movlw	31
  2922  001D14  6E07               	movwf	cv_write@cv^(0+1280),c
  2923  001D16  0EC0               	movlw	low (_dcc_mesg+1)
  2924  001D18  25A9               	addwf	dcc_decode@i& (0+255),w,b
  2925  001D1A  6ED9               	movwf	fsr2l,c
  2926  001D1C  6ADA               	clrf	fsr2h,c
  2927  001D1E  0E05               	movlw	high (_dcc_mesg+1)
  2928  001D20  22DA               	addwfc	fsr2h,f,c
  2929  001D22  50DF               	movf	indf2,w,c
  2930  001D24  6E09               	movwf	cv_write@value^(0+1280),c
  2931  001D26  EC43  F020         	call	_cv_write	;wreg free
  2932                           
  2933                           ;dcc.c: 594:                             cv_write(32, dcc_mesg[i + 2]);
  2934  001D2A  0E00               	movlw	0
  2935  001D2C  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  2936  001D2E  0E20               	movlw	32
  2937  001D30  6E07               	movwf	cv_write@cv^(0+1280),c
  2938  001D32  0EC1               	movlw	low (_dcc_mesg+2)
  2939  001D34  0105               	movlb	5	; () banked
  2940  001D36  25A9               	addwf	dcc_decode@i& (0+255),w,b
  2941  001D38  6ED9               	movwf	fsr2l,c
  2942  001D3A  6ADA               	clrf	fsr2h,c
  2943  001D3C  0E05               	movlw	high (_dcc_mesg+2)
  2944  001D3E  22DA               	addwfc	fsr2h,f,c
  2945  001D40  50DF               	movf	indf2,w,c
  2946  001D42  6E09               	movwf	cv_write@value^(0+1280),c
  2947  001D44  EC43  F020         	call	_cv_write	;wreg free
  2948                           
  2949                           ;dcc.c: 599:                         } else if ((dcc_mesg[i] & 0x0F) == 0x05) {
  2950  001D48  D5B3               	goto	u5550
  2951  001D4A                     l5228:
  2952                           
  2953                           ; BSR set to: 5
  2954  001D4A  0EBF               	movlw	low _dcc_mesg
  2955  001D4C  25A9               	addwf	dcc_decode@i& (0+255),w,b
  2956  001D4E  6ED9               	movwf	fsr2l,c
  2957  001D50  6ADA               	clrf	fsr2h,c
  2958  001D52  0E05               	movlw	high _dcc_mesg
  2959  001D54  22DA               	addwfc	fsr2h,f,c
  2960  001D56  50DF               	movf	indf2,w,c
  2961  001D58  0B0F               	andlw	15
  2962  001D5A  0A05               	xorlw	5
  2963  001D5C  A4D8               	btfss	status,2,c
  2964  001D5E  D014               	goto	l5232
  2965                           
  2966                           ; BSR set to: 5
  2967                           ;dcc.c: 602:                             printf("Service Mode Decoder Lock Requested sen
      +                          t to %d locking address=%d", pkt_addr, dcc_mesg[i+1]);
  2968  001D60  0E01               	movlw	low STR_3
  2969  001D62  6F76               	movwf	printf@fmt& (0+255),b
  2970  001D64  C5A5  F577         	movff	dcc_decode@pkt_addr,?_printf+1
  2971  001D68  C5A6  F578         	movff	dcc_decode@pkt_addr+1,?_printf+2
  2972  001D6C  0EC0               	movlw	low (_dcc_mesg+1)
  2973  001D6E  25A9               	addwf	dcc_decode@i& (0+255),w,b
  2974  001D70  6ED9               	movwf	fsr2l,c
  2975  001D72  6ADA               	clrf	fsr2h,c
  2976  001D74  0E05               	movlw	high (_dcc_mesg+1)
  2977  001D76  22DA               	addwfc	fsr2h,f,c
  2978  001D78  50DF               	movf	indf2,w,c
  2979  001D7A  6F9B               	movwf	??_dcc_decode& (0+255),b
  2980  001D7C  519B               	movf	??_dcc_decode& (0+255),w,b
  2981  001D7E  6F79               	movwf	(?_printf+3)& (0+255),b
  2982  001D80  6B7A               	clrf	(?_printf+4)& (0+255),b
  2983  001D82  ECDB  F01F         	call	_printf	;wreg free
  2984                           
  2985                           ;dcc.c: 604:                         } else {
  2986  001D86  D594               	goto	u5550
  2987  001D88                     l5232:
  2988                           
  2989                           ; BSR set to: 5
  2990                           ;dcc.c: 606:                             printf("CV Access Short Form undefined value %x
      +                          , ignoring", dcc_mesg[i] & 0x0F);
  2991  001D88  0E43               	movlw	low STR_4
  2992  001D8A  6F76               	movwf	printf@fmt& (0+255),b
  2993  001D8C  0EBF               	movlw	low _dcc_mesg
  2994  001D8E  25A9               	addwf	dcc_decode@i& (0+255),w,b
  2995  001D90  6ED9               	movwf	fsr2l,c
  2996  001D92  6ADA               	clrf	fsr2h,c
  2997  001D94  0E05               	movlw	high _dcc_mesg
  2998  001D96  22DA               	addwfc	fsr2h,f,c
  2999  001D98  50DF               	movf	indf2,w,c
  3000  001D9A  6F9B               	movwf	??_dcc_decode& (0+255),b
  3001  001D9C  0E0F               	movlw	15
  3002  001D9E  179B               	andwf	??_dcc_decode& (0+255),f,b
  3003  001DA0  519B               	movf	??_dcc_decode& (0+255),w,b
  3004  001DA2  6F77               	movwf	(?_printf+1)& (0+255),b
  3005  001DA4  6B78               	clrf	(?_printf+2)& (0+255),b
  3006  001DA6  ECDB  F01F         	call	_printf	;wreg free
  3007                           
  3008                           ; BSR set to: 5
  3009  001DAA  D582               	goto	u5550
  3010  001DAC                     l5234:
  3011                           
  3012                           ; BSR set to: 5
  3013                           ;dcc.c: 611:                         uint16_t cv_address = ((uint16_t)(dcc_mesg[i] & 0x0
      +                          3) << 8) | (uint16_t)dcc_mesg[i+1];
  3014  001DAC  0EC0               	movlw	low (_dcc_mesg+1)
  3015  001DAE  25A9               	addwf	dcc_decode@i& (0+255),w,b
  3016  001DB0  6ED9               	movwf	fsr2l,c
  3017  001DB2  6ADA               	clrf	fsr2h,c
  3018  001DB4  0E05               	movlw	high (_dcc_mesg+1)
  3019  001DB6  22DA               	addwfc	fsr2h,f,c
  3020  001DB8  50DF               	movf	indf2,w,c
  3021  001DBA  6F9B               	movwf	??_dcc_decode& (0+255),b
  3022  001DBC  0EBF               	movlw	low _dcc_mesg
  3023  001DBE  25A9               	addwf	dcc_decode@i& (0+255),w,b
  3024  001DC0  6ED9               	movwf	fsr2l,c
  3025  001DC2  6ADA               	clrf	fsr2h,c
  3026  001DC4  0E05               	movlw	high _dcc_mesg
  3027  001DC6  22DA               	addwfc	fsr2h,f,c
  3028  001DC8  50DF               	movf	indf2,w,c
  3029  001DCA  0B03               	andlw	3
  3030  001DCC  6F9C               	movwf	(??_dcc_decode+1)& (0+255),b
  3031  001DCE  519B               	movf	??_dcc_decode& (0+255),w,b
  3032  001DD0  6FA7               	movwf	dcc_decode@cv_address& (0+255),b
  3033  001DD2  C59C  F5A8         	movff	??_dcc_decode+1,dcc_decode@cv_address+1
  3034                           
  3035                           ; BSR set to: 5
  3036                           ;dcc.c: 612:                         ++cv_address;
  3037  001DD6  4BA7               	infsnz	dcc_decode@cv_address& (0+255),f,b
  3038  001DD8  2BA8               	incf	(dcc_decode@cv_address+1)& (0+255),f,b
  3039                           
  3040                           ; BSR set to: 5
  3041                           ;dcc.c: 614:                         if ((dcc_mesg[i] & 0x0C) == 0x04) {
  3042  001DDA  0EBF               	movlw	low _dcc_mesg
  3043  001DDC  25A9               	addwf	dcc_decode@i& (0+255),w,b
  3044  001DDE  6ED9               	movwf	fsr2l,c
  3045  001DE0  6ADA               	clrf	fsr2h,c
  3046  001DE2  0E05               	movlw	high _dcc_mesg
  3047  001DE4  22DA               	addwfc	fsr2h,f,c
  3048  001DE6  50DF               	movf	indf2,w,c
  3049  001DE8  0B0C               	andlw	12
  3050  001DEA  0A04               	xorlw	4
  3051  001DEC  B4D8               	btfsc	status,2,c
  3052  001DEE  D560               	goto	u5550
  3053                           
  3054                           ; BSR set to: 5
  3055  001DF0  0EBF               	movlw	low _dcc_mesg
  3056  001DF2  25A9               	addwf	dcc_decode@i& (0+255),w,b
  3057  001DF4  6ED9               	movwf	fsr2l,c
  3058  001DF6  6ADA               	clrf	fsr2h,c
  3059  001DF8  0E05               	movlw	high _dcc_mesg
  3060  001DFA  22DA               	addwfc	fsr2h,f,c
  3061  001DFC  50DF               	movf	indf2,w,c
  3062  001DFE  0B0C               	andlw	12
  3063  001E00  0A0C               	xorlw	12
  3064  001E02  A4D8               	btfss	status,2,c
  3065  001E04  D011               	goto	l5248
  3066                           
  3067                           ; BSR set to: 5
  3068                           ;dcc.c: 622:                             cv_write(cv_address, dcc_mesg[i+2]);
  3069  001E06  C5A7  F507         	movff	dcc_decode@cv_address,cv_write@cv
  3070  001E0A  C5A8  F508         	movff	dcc_decode@cv_address+1,cv_write@cv+1
  3071  001E0E  0EC1               	movlw	low (_dcc_mesg+2)
  3072  001E10  25A9               	addwf	dcc_decode@i& (0+255),w,b
  3073  001E12  6ED9               	movwf	fsr2l,c
  3074  001E14  6ADA               	clrf	fsr2h,c
  3075  001E16  0E05               	movlw	high (_dcc_mesg+2)
  3076  001E18  22DA               	addwfc	fsr2h,f,c
  3077  001E1A  50DF               	movf	indf2,w,c
  3078  001E1C  6E09               	movwf	cv_write@value^(0+1280),c
  3079  001E1E  EC43  F020         	call	_cv_write	;wreg free
  3080  001E22                     l5246:
  3081                           
  3082                           ;dcc.c: 624:                             dcc_initialize();
  3083  001E22  EC7E  F01E         	call	_dcc_initialize	;wreg free
  3084                           
  3085                           ;dcc.c: 629:                         } else if ((dcc_mesg[i] & 0x0C) == 0x08) {
  3086  001E26  D544               	goto	u5550
  3087  001E28                     l5248:
  3088                           
  3089                           ; BSR set to: 5
  3090  001E28  0EBF               	movlw	low _dcc_mesg
  3091  001E2A  25A9               	addwf	dcc_decode@i& (0+255),w,b
  3092  001E2C  6ED9               	movwf	fsr2l,c
  3093  001E2E  6ADA               	clrf	fsr2h,c
  3094  001E30  0E05               	movlw	high _dcc_mesg
  3095  001E32  22DA               	addwfc	fsr2h,f,c
  3096  001E34  50DF               	movf	indf2,w,c
  3097  001E36  0B0C               	andlw	12
  3098  001E38  0A08               	xorlw	8
  3099  001E3A  A4D8               	btfss	status,2,c
  3100  001E3C  D539               	goto	u5550
  3101                           
  3102                           ; BSR set to: 5
  3103                           ;dcc.c: 630:                             uint8_t value = (dcc_mesg[i+2] & 0x08) >> 3;
  3104  001E3E  0EC1               	movlw	low (_dcc_mesg+2)
  3105  001E40  25A9               	addwf	dcc_decode@i& (0+255),w,b
  3106  001E42  6ED9               	movwf	fsr2l,c
  3107  001E44  6ADA               	clrf	fsr2h,c
  3108  001E46  0E05               	movlw	high (_dcc_mesg+2)
  3109  001E48  22DA               	addwfc	fsr2h,f,c
  3110  001E4A  50DF               	movf	indf2,w,c
  3111  001E4C  6F9B               	movwf	??_dcc_decode& (0+255),b
  3112  001E4E  90D8               	bcf	status,0,c
  3113  001E50  339B               	rrcf	??_dcc_decode& (0+255),f,b
  3114  001E52  90D8               	bcf	status,0,c
  3115  001E54  339B               	rrcf	??_dcc_decode& (0+255),f,b
  3116  001E56  90D8               	bcf	status,0,c
  3117  001E58  319B               	rrcf	??_dcc_decode& (0+255),w,b
  3118  001E5A  0B01               	andlw	1
  3119  001E5C  6FA4               	movwf	dcc_decode@value& (0+255),b
  3120                           
  3121                           ;dcc.c: 631:                             uint8_t bit = dcc_mesg[i+2] & 0x07;
  3122  001E5E  0EC1               	movlw	low (_dcc_mesg+2)
  3123  001E60  25A9               	addwf	dcc_decode@i& (0+255),w,b
  3124  001E62  6ED9               	movwf	fsr2l,c
  3125  001E64  6ADA               	clrf	fsr2h,c
  3126  001E66  0E05               	movlw	high (_dcc_mesg+2)
  3127  001E68  22DA               	addwfc	fsr2h,f,c
  3128  001E6A  50DF               	movf	indf2,w,c
  3129  001E6C  0B07               	andlw	7
  3130  001E6E  6FA3               	movwf	dcc_decode@bit& (0+255),b
  3131                           
  3132                           ;dcc.c: 633:                             if (dcc_mesg[i+2] & 0xF0) {
  3133  001E70  0EC1               	movlw	low (_dcc_mesg+2)
  3134  001E72  25A9               	addwf	dcc_decode@i& (0+255),w,b
  3135  001E74  6ED9               	movwf	fsr2l,c
  3136  001E76  6ADA               	clrf	fsr2h,c
  3137  001E78  0E05               	movlw	high (_dcc_mesg+2)
  3138  001E7A  22DA               	addwfc	fsr2h,f,c
  3139  001E7C  50DF               	movf	indf2,w,c
  3140  001E7E  6F9B               	movwf	??_dcc_decode& (0+255),b
  3141  001E80  0EF0               	movlw	240
  3142  001E82  179B               	andwf	??_dcc_decode& (0+255),f,b
  3143  001E84  B4D8               	btfsc	status,2,c
  3144  001E86  D514               	goto	u5550
  3145                           
  3146                           ; BSR set to: 5
  3147                           ;dcc.c: 635:                                 if (value) {
  3148  001E88  51A4               	movf	dcc_decode@value& (0+255),w,b
  3149  001E8A  B4D8               	btfsc	status,2,c
  3150  001E8C  D01A               	goto	l5256
  3151                           
  3152                           ; BSR set to: 5
  3153                           ;dcc.c: 636:                                     cv_write(cv_address, cv_read(cv_address
      +                          ) | (uint8_t)(value << bit));
  3154  001E8E  C5A7  F507         	movff	dcc_decode@cv_address,cv_write@cv
  3155  001E92  C5A8  F508         	movff	dcc_decode@cv_address+1,cv_write@cv+1
  3156  001E96  C5A3  F59B         	movff	dcc_decode@bit,??_dcc_decode
  3157  001E9A  C5A4  F59C         	movff	dcc_decode@value,??_dcc_decode+1
  3158  001E9E  2B9B               	incf	??_dcc_decode& (0+255),f,b
  3159  001EA0  D002               	goto	u5854
  3160  001EA2                     u5855:
  3161  001EA2  90D8               	bcf	status,0,c
  3162  001EA4  379C               	rlcf	(??_dcc_decode+1)& (0+255),f,b
  3163  001EA6                     u5854:
  3164  001EA6  2F9B               	decfsz	??_dcc_decode& (0+255),f,b
  3165  001EA8  D7FC               	goto	u5855
  3166  001EAA  C5A7  F505         	movff	dcc_decode@cv_address,cv_read@cv
  3167  001EAE  C5A8  F506         	movff	dcc_decode@cv_address+1,cv_read@cv+1
  3168  001EB2  EC37  F020         	call	_cv_read	;wreg free
  3169  001EB6  0105               	movlb	5	; () banked
  3170  001EB8  119C               	iorwf	(??_dcc_decode+1)& (0+255),w,b
  3171  001EBA  6E09               	movwf	cv_write@value^(0+1280),c
  3172  001EBC  EC43  F020         	call	_cv_write	;wreg free
  3173                           
  3174                           ;dcc.c: 639:                                 } else {
  3175  001EC0  D7B0               	goto	l5246
  3176  001EC2                     l5256:
  3177                           
  3178                           ; BSR set to: 5
  3179                           ;dcc.c: 640:                                     cv_write(cv_address, cv_read(cv_address
      +                          ) & ~(value << bit));
  3180  001EC2  C5A7  F507         	movff	dcc_decode@cv_address,cv_write@cv
  3181  001EC6  C5A8  F508         	movff	dcc_decode@cv_address+1,cv_write@cv+1
  3182  001ECA  C5A3  F59B         	movff	dcc_decode@bit,??_dcc_decode
  3183  001ECE  C5A4  F59C         	movff	dcc_decode@value,??_dcc_decode+1
  3184  001ED2  2B9B               	incf	??_dcc_decode& (0+255),f,b
  3185  001ED4  D002               	goto	u5864
  3186  001ED6                     u5865:
  3187  001ED6  90D8               	bcf	status,0,c
  3188  001ED8  379C               	rlcf	(??_dcc_decode+1)& (0+255),f,b
  3189  001EDA                     u5864:
  3190  001EDA  2F9B               	decfsz	??_dcc_decode& (0+255),f,b
  3191  001EDC  D7FC               	goto	u5865
  3192  001EDE  0105               	movlb	5	; () banked
  3193  001EE0  519C               	movf	(??_dcc_decode+1)& (0+255),w,b
  3194  001EE2  0AFF               	xorlw	255
  3195  001EE4  6F9D               	movwf	(??_dcc_decode+2)& (0+255),b
  3196  001EE6  C5A7  F505         	movff	dcc_decode@cv_address,cv_read@cv
  3197  001EEA  C5A8  F506         	movff	dcc_decode@cv_address+1,cv_read@cv+1
  3198  001EEE  EC37  F020         	call	_cv_read	;wreg free
  3199  001EF2  0105               	movlb	5	; () banked
  3200  001EF4  159D               	andwf	(??_dcc_decode+2)& (0+255),w,b
  3201  001EF6  6E09               	movwf	cv_write@value^(0+1280),c
  3202  001EF8  EC43  F020         	call	_cv_write	;wreg free
  3203  001EFC  D792               	goto	l5246
  3204  001EFE                     l5260:
  3205                           
  3206                           ;dcc.c: 659:             }
  3207  001EFE  0105               	movlb	5	; () banked
  3208  001F00  2BA9               	incf	dcc_decode@i& (0+255),f,b
  3209  001F02                     l5262:
  3210                           
  3211                           ; BSR set to: 5
  3212  001F02  51E1               	movf	_dcc_len& (0+255),w,b
  3213  001F04  5DA9               	subwf	dcc_decode@i& (0+255),w,b
  3214  001F06  B0D8               	btfsc	status,0,c
  3215  001F08  0012               	return	
  3216  001F0A  D41E               	goto	l5064
  3217  001F0C                     __end_of_dcc_decode:
  3218                           	callstack 0
  3219                           
  3220 ;; *************** function _printf *****************
  3221 ;; Defined at:
  3222 ;;		line 5 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/printf.c"
  3223 ;; Parameters:    Size  Location     Type
  3224 ;;  fmt             1   22[BANK5 ] PTR const unsigned char 
  3225 ;;		 -> STR_5(27), STR_4(50), STR_3(66), STR_2(47), 
  3226 ;;		 -> STR_1(16), 
  3227 ;; Auto vars:     Size  Location     Type
  3228 ;;  ap              2   57[BANK5 ] PTR void [1]
  3229 ;;		 -> ?_printf(2), 
  3230 ;;  ret             2    0        int 
  3231 ;; Return value:  Size  Location     Type
  3232 ;;                  2   22[BANK5 ] int 
  3233 ;; Registers used:
  3234 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3235 ;; Tracked objects:
  3236 ;;		On entry : 3F/5
  3237 ;;		On exit  : 3F/5
  3238 ;;		Unchanged: 0/0
  3239 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  3240 ;;      Params:         0      35       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3241 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3243 ;;      Totals:         0      37       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3244 ;;Total ram usage:       37 bytes
  3245 ;; Hardware stack levels used: 1
  3246 ;; Hardware stack levels required when called: 11
  3247 ;; This function calls:
  3248 ;;		_vfprintf
  3249 ;; This function is called by:
  3250 ;;		_main
  3251 ;;		_dcc_decode
  3252 ;;		_dcc_performance
  3253 ;; This function uses a non-reentrant model
  3254 ;;
  3255                           
  3256                           	psect	text4
  3257  003FB6                     __ptext4:
  3258                           	callstack 0
  3259  003FB6                     _printf:
  3260                           	callstack 115
  3261                           
  3262                           ; BSR set to: 5
  3263                           
  3264                           ;incstack = 0
  3265  003FB6  0E77               	movlw	low (?_printf+1)
  3266  003FB8  6F99               	movwf	printf@ap& (0+255),b
  3267  003FBA  0E05               	movlw	high (?_printf+1)
  3268  003FBC  6F9A               	movwf	(printf@ap+1)& (0+255),b
  3269                           
  3270                           ; BSR set to: 5
  3271  003FBE  0E00               	movlw	0
  3272  003FC0  6F71               	movwf	vfprintf@fp& (0+255),b
  3273  003FC2  0E00               	movlw	0
  3274  003FC4  6F72               	movwf	(vfprintf@fp+1)& (0+255),b
  3275  003FC6  C576  F573         	movff	printf@fmt,vfprintf@fmt
  3276  003FCA  0E99               	movlw	low printf@ap
  3277  003FCC  6F74               	movwf	vfprintf@ap& (0+255),b
  3278  003FCE  0E05               	movlw	high printf@ap
  3279  003FD0  6F75               	movwf	(vfprintf@ap+1)& (0+255),b
  3280  003FD2  EC54  F01E         	call	_vfprintf	;wreg free
  3281                           
  3282                           ; BSR set to: 5
  3283  003FD6  0012               	return		;funcret
  3284  003FD8                     __end_of_printf:
  3285                           	callstack 0
  3286                           
  3287 ;; *************** function _vfprintf *****************
  3288 ;; Defined at:
  3289 ;;		line 1390 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c"
  3290 ;; Parameters:    Size  Location     Type
  3291 ;;  fp              2   17[BANK5 ] PTR struct _IO_FILE
  3292 ;;		 -> NULL(0), 
  3293 ;;  fmt             1   19[BANK5 ] PTR const unsigned char 
  3294 ;;		 -> STR_5(27), STR_4(50), STR_3(66), STR_2(47), 
  3295 ;;		 -> STR_1(16), 
  3296 ;;  ap              2   20[BANK5 ] PTR PTR void 
  3297 ;;		 -> printf@ap(2), 
  3298 ;; Auto vars:     Size  Location     Type
  3299 ;;  cfmt            1   90[COMRAM] PTR unsigned char 
  3300 ;;		 -> STR_5(27), STR_4(50), STR_3(66), STR_2(47), 
  3301 ;;		 -> STR_1(16), 
  3302 ;; Return value:  Size  Location     Type
  3303 ;;                  2   17[BANK5 ] int 
  3304 ;; Registers used:
  3305 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3306 ;; Tracked objects:
  3307 ;;		On entry : 3F/5
  3308 ;;		On exit  : 3F/5
  3309 ;;		Unchanged: 0/0
  3310 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  3311 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3312 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3314 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3315 ;;Total ram usage:        6 bytes
  3316 ;; Hardware stack levels used: 1
  3317 ;; Hardware stack levels required when called: 10
  3318 ;; This function calls:
  3319 ;;		_vfpfcnvrt
  3320 ;; This function is called by:
  3321 ;;		_printf
  3322 ;; This function uses a non-reentrant model
  3323 ;;
  3324                           
  3325                           	psect	text5
  3326  003CA8                     __ptext5:
  3327                           	callstack 0
  3328  003CA8                     _vfprintf:
  3329                           	callstack 115
  3330                           
  3331                           ; BSR set to: 5
  3332                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1390: int vfprintf(F
      +                          ILE *fp, const char *fmt, va_list ap);/Applications/microchip/xc8/v2.32/pic/sources/c99/
      +                          common/doprnt.c: 1391: {;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt
      +                          .c: 1393:     char *cfmt;;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprn
      +                          t.c: 1395:     cfmt = (char *)fmt;
  3333                           
  3334                           ; BSR set to: 5
  3335                           ;incstack = 0
  3336  003CA8  C573  F55B         	movff	vfprintf@fmt,vfprintf@cfmt
  3337                           
  3338                           ; BSR set to: 5
  3339                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1396:     nout = 0;
  3340  003CAC  0E00               	movlw	0
  3341  003CAE  6FCA               	movwf	(_nout+1)& (0+255),b
  3342  003CB0  0E00               	movlw	0
  3343  003CB2  6FC9               	movwf	_nout& (0+255),b
  3344                           
  3345                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1397:     while (*cf
      +                          mt) {
  3346  003CB4  D013               	goto	l4964
  3347  003CB6                     l4962:
  3348                           
  3349                           ; BSR set to: 5
  3350                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1398:         nout +
      +                          = vfpfcnvrt(fp, &cfmt, ap);
  3351  003CB6  C571  F547         	movff	vfprintf@fp,vfpfcnvrt@fp
  3352  003CBA  C572  F548         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3353  003CBE  0E5B               	movlw	low vfprintf@cfmt
  3354  003CC0  6E49               	movwf	vfpfcnvrt@fmt^(0+1280),c
  3355  003CC2  0E05               	movlw	high vfprintf@cfmt
  3356  003CC4  6E4A               	movwf	(vfpfcnvrt@fmt+1)^(0+1280),c
  3357  003CC6  C574  F54B         	movff	vfprintf@ap,vfpfcnvrt@ap
  3358  003CCA  C575  F54C         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3359  003CCE  EC86  F00F         	call	_vfpfcnvrt	;wreg free
  3360  003CD2  5047               	movf	?_vfpfcnvrt^(0+1280),w,c
  3361  003CD4  0105               	movlb	5	; () banked
  3362  003CD6  27C9               	addwf	_nout& (0+255),f,b
  3363  003CD8  5048               	movf	(?_vfpfcnvrt+1)^(0+1280),w,c
  3364  003CDA  23CA               	addwfc	(_nout+1)& (0+255),f,b
  3365  003CDC                     l4964:
  3366                           
  3367                           ; BSR set to: 5
  3368                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1397:     while (*cf
      +                          mt) {
  3369  003CDC  0061  F56C  F4F6   	movff	vfprintf@cfmt,tblptrl
  3370  003CE2                     	if	1	;There is more than 1 active tblptr byte
  3371  003CE2  0E15               	movlw	high __smallconst
  3372  003CE4  6EF7               	movwf	tblptrh,c
  3373  003CE6                     	endif
  3374  003CE6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3375  003CE6  6AF8               	clrf	tblptru,c
  3376  003CE8                     	endif
  3377  003CE8                     	if	0	;tblptru may be non-zero
  3378  003CE8                     	endif
  3379  003CE8  0008               	tblrd		*
  3380  003CEA  50F5               	movf	tablat,w,c
  3381  003CEC  0900               	iorlw	0
  3382  003CEE  A4D8               	btfss	status,2,c
  3383  003CF0  D7E2               	goto	l4962
  3384                           
  3385                           ; BSR set to: 5
  3386                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1400:     return nou
      +                          t;
  3387  003CF2  C5C9  F571         	movff	_nout,?_vfprintf
  3388  003CF6  C5CA  F572         	movff	_nout+1,?_vfprintf+1
  3389                           
  3390                           ; BSR set to: 5
  3391  003CFA  0012               	return		;funcret
  3392  003CFC                     __end_of_vfprintf:
  3393                           	callstack 0
  3394                           
  3395 ;; *************** function _vfpfcnvrt *****************
  3396 ;; Defined at:
  3397 ;;		line 692 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c"
  3398 ;; Parameters:    Size  Location     Type
  3399 ;;  fp              2   70[COMRAM] PTR struct _IO_FILE
  3400 ;;		 -> NULL(0), 
  3401 ;;  fmt             2   72[COMRAM] PTR PTR unsigned char 
  3402 ;;		 -> vfprintf@cfmt(1), 
  3403 ;;  ap              2   74[COMRAM] PTR PTR void 
  3404 ;;		 -> printf@ap(2), 
  3405 ;; Auto vars:     Size  Location     Type
  3406 ;;  llu             8    9[BANK5 ] unsigned long long 
  3407 ;;  ll              8    0[BANK5 ] long long 
  3408 ;;  f               4    0        long long 
  3409 ;;  vp              3    0        PTR void 
  3410 ;;  ct              3    0        unsigned char [3]
  3411 ;;  cp              3    0        PTR unsigned char 
  3412 ;;  i               2    0        int 
  3413 ;;  done            2    0        int 
  3414 ;;  c               1    8[BANK5 ] unsigned char 
  3415 ;; Return value:  Size  Location     Type
  3416 ;;                  2   70[COMRAM] int 
  3417 ;; Registers used:
  3418 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3419 ;; Tracked objects:
  3420 ;;		On entry : 3F/5
  3421 ;;		On exit  : 0/0
  3422 ;;		Unchanged: 0/0
  3423 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  3424 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3425 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3426 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3427 ;;      Totals:        20      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3428 ;;Total ram usage:       37 bytes
  3429 ;; Hardware stack levels used: 1
  3430 ;; Hardware stack levels required when called: 9
  3431 ;; This function calls:
  3432 ;;		_ctoa
  3433 ;;		_dtoa
  3434 ;;		_fputc
  3435 ;;		_strncmp
  3436 ;;		_utoa
  3437 ;;		_xtoa
  3438 ;; This function is called by:
  3439 ;;		_vfprintf
  3440 ;; This function uses a non-reentrant model
  3441 ;;
  3442                           
  3443                           	psect	text6
  3444  001F0C                     __ptext6:
  3445                           	callstack 0
  3446  001F0C                     _vfpfcnvrt:
  3447                           	callstack 115
  3448                           
  3449                           ; BSR set to: 5
  3450                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 692: static int vfpf
      +                          cnvrt(FILE *fp, char *fmt[], va_list ap);/Applications/microchip/xc8/v2.32/pic/sources/c
      +                          99/common/doprnt.c: 693: {;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/dopr
      +                          nt.c: 694:     char c, *cp, ct[3];;/Applications/microchip/xc8/v2.32/pic/sources/c99/com
      +                          mon/doprnt.c: 695:     int done, i;;/Applications/microchip/xc8/v2.32/pic/sources/c99/co
      +                          mmon/doprnt.c: 696:     long long ll;;/Applications/microchip/xc8/v2.32/pic/sources/c99/
      +                          common/doprnt.c: 697:     unsigned long long llu;
  3451                           
  3452                           ; BSR set to: 5
  3453                           ;incstack = 0
  3454  001F0C  0061  F524  F4D9   	movff	vfpfcnvrt@fmt,fsr2l
  3455  001F12  0061  F528  F4DA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3456  001F18  C4DF F4F6          	movff	indf2,tblptrl
  3457  001F1C                     	if	1	;There is more than 1 active tblptr byte
  3458  001F1C  0E15               	movlw	high __smallconst
  3459  001F1E  6EF7               	movwf	tblptrh,c
  3460  001F20                     	endif
  3461  001F20                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3462  001F20  6AF8               	clrf	tblptru,c
  3463  001F22                     	endif
  3464  001F22                     	if	0	;tblptru may be non-zero
  3465  001F22                     	endif
  3466  001F22  0008               	tblrd		*
  3467  001F24  50F5               	movf	tablat,w,c
  3468  001F26  0A25               	xorlw	37
  3469  001F28  A4D8               	btfss	status,2,c
  3470  001F2A  D33D               	goto	l4950
  3471                           
  3472                           ; BSR set to: 5
  3473                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 703:         ++*fmt;
  3474  001F2C  0061  F524  F4D9   	movff	vfpfcnvrt@fmt,fsr2l
  3475  001F32  0061  F528  F4DA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3476  001F38  2ADF               	incf	indf2,f,c
  3477                           
  3478                           ; BSR set to: 5
  3479                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 705:         flags =
      +                           width = 0;
  3480  001F3A  0E00               	movlw	0
  3481  001F3C  6FCC               	movwf	(_width+1)& (0+255),b
  3482  001F3E  0E00               	movlw	0
  3483  001F40  6FCB               	movwf	_width& (0+255),b
  3484  001F42  C5CB  F55C         	movff	_width,_flags
  3485  001F46  C5CC  F55D         	movff	_width+1,_flags+1
  3486                           
  3487                           ; BSR set to: 5
  3488                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 706:         prec = 
      +                          -1;
  3489  001F4A  69CD               	setf	_prec& (0+255),b
  3490  001F4C  69CE               	setf	(_prec+1)& (0+255),b
  3491                           
  3492                           ; BSR set to: 5
  3493                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 814:         if (*fm
      +                          t[0] == 'c') {
  3494  001F4E  0061  F524  F4D9   	movff	vfpfcnvrt@fmt,fsr2l
  3495  001F54  0061  F528  F4DA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3496  001F5A  C4DF F4F6          	movff	indf2,tblptrl
  3497  001F5E                     	if	1	;There is more than 1 active tblptr byte
  3498  001F5E  0E15               	movlw	high __smallconst
  3499  001F60  6EF7               	movwf	tblptrh,c
  3500  001F62                     	endif
  3501  001F62                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3502  001F62  6AF8               	clrf	tblptru,c
  3503  001F64                     	endif
  3504  001F64                     	if	0	;tblptru may be non-zero
  3505  001F64                     	endif
  3506  001F64  0008               	tblrd		*
  3507  001F66  50F5               	movf	tablat,w,c
  3508  001F68  0A63               	xorlw	99
  3509  001F6A  A4D8               	btfss	status,2,c
  3510  001F6C  D02C               	goto	l4862
  3511                           
  3512                           ; BSR set to: 5
  3513                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 815:             ++*
      +                          fmt;
  3514  001F6E  0061  F524  F4D9   	movff	vfpfcnvrt@fmt,fsr2l
  3515  001F74  0061  F528  F4DA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3516  001F7A  2ADF               	incf	indf2,f,c
  3517                           
  3518                           ; BSR set to: 5
  3519                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 816:             c =
      +                           (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  3520  001F7C  0061  F52C  F4D9   	movff	vfpfcnvrt@ap,fsr2l
  3521  001F82  0061  F530  F4DA   	movff	vfpfcnvrt@ap+1,fsr2h
  3522  001F88  0061 F37C  F54D    	movff	indf2,??_vfpfcnvrt
  3523  001F8E  0E02               	movlw	2
  3524  001F90  26DE               	addwf	postinc2,f,c
  3525  001F92  0061 F37C  F54E    	movff	indf2,??_vfpfcnvrt+1
  3526  001F98  0E00               	movlw	0
  3527  001F9A  22DD               	addwfc	postdec2,f,c
  3528  001F9C  0061  F534  F4D9   	movff	??_vfpfcnvrt,fsr2l
  3529  001FA2  0061  F538  F4DA   	movff	??_vfpfcnvrt+1,fsr2h
  3530  001FA8  50DF               	movf	indf2,w,c
  3531  001FAA  6F68               	movwf	vfpfcnvrt@c& (0+255),b
  3532                           
  3533                           ; BSR set to: 5
  3534                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 817:             ret
      +                          urn ctoa(fp, c);
  3535  001FAC  C547  F50E         	movff	vfpfcnvrt@fp,ctoa@fp
  3536  001FB0  C548  F50F         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  3537  001FB4  C568  F510         	movff	vfpfcnvrt@c,ctoa@c
  3538  001FB8  ECD6  F01B         	call	_ctoa	;wreg free
  3539  001FBC  C50E  F547         	movff	?_ctoa,?_vfpfcnvrt
  3540  001FC0  C50F  F548         	movff	?_ctoa+1,?_vfpfcnvrt+1
  3541  001FC4  0012               	return	
  3542  001FC6                     l4862:
  3543                           
  3544                           ; BSR set to: 5
  3545                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 847:         if ((*f
      +                          mt[0] == 'd') || (*fmt[0] == 'i')) {
  3546  001FC6  0061  F524  F4D9   	movff	vfpfcnvrt@fmt,fsr2l
  3547  001FCC  0061  F528  F4DA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3548  001FD2  C4DF F4F6          	movff	indf2,tblptrl
  3549  001FD6                     	if	1	;There is more than 1 active tblptr byte
  3550  001FD6  0E15               	movlw	high __smallconst
  3551  001FD8  6EF7               	movwf	tblptrh,c
  3552  001FDA                     	endif
  3553  001FDA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3554  001FDA  6AF8               	clrf	tblptru,c
  3555  001FDC                     	endif
  3556  001FDC                     	if	0	;tblptru may be non-zero
  3557  001FDC                     	endif
  3558  001FDC  0008               	tblrd		*
  3559  001FDE  50F5               	movf	tablat,w,c
  3560  001FE0  0A64               	xorlw	100
  3561  001FE2  B4D8               	btfsc	status,2,c
  3562  001FE4  D010               	goto	u5120
  3563                           
  3564                           ; BSR set to: 5
  3565  001FE6  0061  F524  F4D9   	movff	vfpfcnvrt@fmt,fsr2l
  3566  001FEC  0061  F528  F4DA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3567  001FF2  C4DF F4F6          	movff	indf2,tblptrl
  3568  001FF6                     	if	1	;There is more than 1 active tblptr byte
  3569  001FF6  0E15               	movlw	high __smallconst
  3570  001FF8  6EF7               	movwf	tblptrh,c
  3571  001FFA                     	endif
  3572  001FFA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3573  001FFA  6AF8               	clrf	tblptru,c
  3574  001FFC                     	endif
  3575  001FFC                     	if	0	;tblptru may be non-zero
  3576  001FFC                     	endif
  3577  001FFC  0008               	tblrd		*
  3578  001FFE  50F5               	movf	tablat,w,c
  3579  002000  0A69               	xorlw	105
  3580  002002  A4D8               	btfss	status,2,c
  3581  002004  D047               	goto	l4874
  3582  002006                     u5120:
  3583                           
  3584                           ; BSR set to: 5
  3585                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 849:             ++*
      +                          fmt;
  3586  002006  0061  F524  F4D9   	movff	vfpfcnvrt@fmt,fsr2l
  3587  00200C  0061  F528  F4DA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3588  002012  2ADF               	incf	indf2,f,c
  3589                           
  3590                           ; BSR set to: 5
  3591                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 850:             ll 
      +                          = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  3592  002014  0061  F52C  F4D9   	movff	vfpfcnvrt@ap,fsr2l
  3593  00201A  0061  F530  F4DA   	movff	vfpfcnvrt@ap+1,fsr2h
  3594  002020  0061 F37C  F54D    	movff	indf2,??_vfpfcnvrt
  3595  002026  0E02               	movlw	2
  3596  002028  26DE               	addwf	postinc2,f,c
  3597  00202A  0061 F37C  F54E    	movff	indf2,??_vfpfcnvrt+1
  3598  002030  0E00               	movlw	0
  3599  002032  22DD               	addwfc	postdec2,f,c
  3600  002034  0061  F534  F4D9   	movff	??_vfpfcnvrt,fsr2l
  3601  00203A  0061  F538  F4DA   	movff	??_vfpfcnvrt+1,fsr2h
  3602  002040  0061 F378  F560    	movff	postinc2,vfpfcnvrt@ll
  3603  002046  0061 F374  F561    	movff	postdec2,vfpfcnvrt@ll+1
  3604  00204C  0E00               	movlw	0
  3605  00204E  BF61               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  3606  002050  0EFF               	movlw	-1
  3607  002052  6F62               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  3608  002054  6F63               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  3609  002056  6F64               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  3610  002058  6F65               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  3611  00205A  6F66               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  3612  00205C  6F67               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  3613                           
  3614                           ; BSR set to: 5
  3615                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 852:             ret
      +                          urn dtoa(fp, ll);
  3616  00205E  C547  F520         	movff	vfpfcnvrt@fp,dtoa@fp
  3617  002062  C548  F521         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3618  002066  C560  F522         	movff	vfpfcnvrt@ll,dtoa@d
  3619  00206A  C561  F523         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  3620  00206E  C562  F524         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  3621  002072  C563  F525         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  3622  002076  C564  F526         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  3623  00207A  C565  F527         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  3624  00207E  C566  F528         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  3625  002082  C567  F529         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  3626  002086  EC89  F015         	call	_dtoa	;wreg free
  3627  00208A  C520  F547         	movff	?_dtoa,?_vfpfcnvrt
  3628  00208E  C521  F548         	movff	?_dtoa+1,?_vfpfcnvrt+1
  3629  002092  0012               	return	
  3630  002094                     l4874:
  3631                           
  3632                           ; BSR set to: 5
  3633                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 857:         if (!st
      +                          rncmp(*fmt, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("
      +                          li")/sizeof("li"[0]))-1))) {
  3634  002094  0061  F524  F4D9   	movff	vfpfcnvrt@fmt,fsr2l
  3635  00209A  0061  F528  F4DA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3636  0020A0  50DF               	movf	indf2,w,c
  3637  0020A2  6E03               	movwf	strncmp@_l^(0+1280),c
  3638  0020A4  0ED2               	movlw	low STR_6
  3639  0020A6  6E04               	movwf	strncmp@_r^(0+1280),c
  3640  0020A8  0E00               	movlw	0
  3641  0020AA  6E06               	movwf	(strncmp@n+1)^(0+1280),c
  3642  0020AC  0E02               	movlw	2
  3643  0020AE  6E05               	movwf	strncmp@n^(0+1280),c
  3644  0020B0  EC22  F01B         	call	_strncmp	;wreg free
  3645  0020B4  5003               	movf	?_strncmp^(0+1280),w,c
  3646  0020B6  1004               	iorwf	(?_strncmp+1)^(0+1280),w,c
  3647  0020B8  B4D8               	btfsc	status,2,c
  3648  0020BA  D014               	goto	u5140
  3649  0020BC  0061  F524  F4D9   	movff	vfpfcnvrt@fmt,fsr2l
  3650  0020C2  0061  F528  F4DA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3651  0020C8  50DF               	movf	indf2,w,c
  3652  0020CA  6E03               	movwf	strncmp@_l^(0+1280),c
  3653  0020CC  0ED5               	movlw	low STR_10
  3654  0020CE  6E04               	movwf	strncmp@_r^(0+1280),c
  3655  0020D0  0E00               	movlw	0
  3656  0020D2  6E06               	movwf	(strncmp@n+1)^(0+1280),c
  3657  0020D4  0E02               	movlw	2
  3658  0020D6  6E05               	movwf	strncmp@n^(0+1280),c
  3659  0020D8  EC22  F01B         	call	_strncmp	;wreg free
  3660  0020DC  5003               	movf	?_strncmp^(0+1280),w,c
  3661  0020DE  1004               	iorwf	(?_strncmp+1)^(0+1280),w,c
  3662  0020E0  A4D8               	btfss	status,2,c
  3663  0020E2  D066               	goto	l4886
  3664  0020E4                     u5140:
  3665                           
  3666                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 858: ;/Applications/
      +                          microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 860:             *fmt += ((sizeof("
      +                          ld")/sizeof("ld"[0]))-1);
  3667  0020E4  0061  F524  F4D9   	movff	vfpfcnvrt@fmt,fsr2l
  3668  0020EA  0061  F528  F4DA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3669  0020F0  0E02               	movlw	2
  3670  0020F2  26DF               	addwf	indf2,f,c
  3671                           
  3672                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 861:             ll 
      +                          = (long long)(*(long *)__va_arg(*(long **)ap, (long)0));
  3673  0020F4  0061  F52C  F4D9   	movff	vfpfcnvrt@ap,fsr2l
  3674  0020FA  0061  F530  F4DA   	movff	vfpfcnvrt@ap+1,fsr2h
  3675  002100  0061 F37C  F54D    	movff	indf2,??_vfpfcnvrt
  3676  002106  0E04               	movlw	4
  3677  002108  26DE               	addwf	postinc2,f,c
  3678  00210A  0061 F37C  F54E    	movff	indf2,??_vfpfcnvrt+1
  3679  002110  0E00               	movlw	0
  3680  002112  22DD               	addwfc	postdec2,f,c
  3681  002114  0061  F534  F4D9   	movff	??_vfpfcnvrt,fsr2l
  3682  00211A  0061  F538  F4DA   	movff	??_vfpfcnvrt+1,fsr2h
  3683  002120  0061 F378  F54F    	movff	postinc2,??_vfpfcnvrt+2
  3684  002126  0061 F378  F550    	movff	postinc2,??_vfpfcnvrt+3
  3685  00212C  0061 F378  F551    	movff	postinc2,??_vfpfcnvrt+4
  3686  002132  0061 F378  F552    	movff	postinc2,??_vfpfcnvrt+5
  3687  002138  C54F  F553         	movff	??_vfpfcnvrt+2,??_vfpfcnvrt+6
  3688  00213C  C550  F554         	movff	??_vfpfcnvrt+3,??_vfpfcnvrt+7
  3689  002140  C551  F555         	movff	??_vfpfcnvrt+4,??_vfpfcnvrt+8
  3690  002144  C552  F556         	movff	??_vfpfcnvrt+5,??_vfpfcnvrt+9
  3691  002148  6A57               	clrf	(??_vfpfcnvrt+10)^(0+1280),c
  3692  00214A  BE56               	btfsc	(??_vfpfcnvrt+9)^(0+1280),7,c
  3693  00214C  6857               	setf	(??_vfpfcnvrt+10)^(0+1280),c
  3694  00214E  C557  F558         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+11
  3695  002152  C557  F559         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+12
  3696  002156  C557  F55A         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+13
  3697  00215A  C553  F560         	movff	??_vfpfcnvrt+6,vfpfcnvrt@ll
  3698  00215E  C554  F561         	movff	??_vfpfcnvrt+7,vfpfcnvrt@ll+1
  3699  002162  C555  F562         	movff	??_vfpfcnvrt+8,vfpfcnvrt@ll+2
  3700  002166  C556  F563         	movff	??_vfpfcnvrt+9,vfpfcnvrt@ll+3
  3701  00216A  C557  F564         	movff	??_vfpfcnvrt+10,vfpfcnvrt@ll+4
  3702  00216E  C558  F565         	movff	??_vfpfcnvrt+11,vfpfcnvrt@ll+5
  3703  002172  C559  F566         	movff	??_vfpfcnvrt+12,vfpfcnvrt@ll+6
  3704  002176  C55A  F567         	movff	??_vfpfcnvrt+13,vfpfcnvrt@ll+7
  3705                           
  3706                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 863:             ret
      +                          urn dtoa(fp, ll);
  3707  00217A  C547  F520         	movff	vfpfcnvrt@fp,dtoa@fp
  3708  00217E  C548  F521         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3709  002182  C560  F522         	movff	vfpfcnvrt@ll,dtoa@d
  3710  002186  C561  F523         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  3711  00218A  C562  F524         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  3712  00218E  C563  F525         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  3713  002192  C564  F526         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  3714  002196  C565  F527         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  3715  00219A  C566  F528         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  3716  00219E  C567  F529         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  3717  0021A2  EC89  F015         	call	_dtoa	;wreg free
  3718  0021A6  C520  F547         	movff	?_dtoa,?_vfpfcnvrt
  3719  0021AA  C521  F548         	movff	?_dtoa+1,?_vfpfcnvrt+1
  3720  0021AE  0012               	return	
  3721  0021B0                     l4886:
  3722                           
  3723                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1204:         if (*f
      +                          mt[0] == 'u') {
  3724  0021B0  0061  F524  F4D9   	movff	vfpfcnvrt@fmt,fsr2l
  3725  0021B6  0061  F528  F4DA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3726  0021BC  C4DF F4F6          	movff	indf2,tblptrl
  3727  0021C0                     	if	1	;There is more than 1 active tblptr byte
  3728  0021C0  0E15               	movlw	high __smallconst
  3729  0021C2  6EF7               	movwf	tblptrh,c
  3730  0021C4                     	endif
  3731  0021C4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3732  0021C4  6AF8               	clrf	tblptru,c
  3733  0021C6                     	endif
  3734  0021C6                     	if	0	;tblptru may be non-zero
  3735  0021C6                     	endif
  3736  0021C6  0008               	tblrd		*
  3737  0021C8  50F5               	movf	tablat,w,c
  3738  0021CA  0A75               	xorlw	117
  3739  0021CC  A4D8               	btfss	status,2,c
  3740  0021CE  D049               	goto	l4896
  3741                           
  3742                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1206:             ++
      +                          *fmt;
  3743  0021D0  0061  F524  F4D9   	movff	vfpfcnvrt@fmt,fsr2l
  3744  0021D6  0061  F528  F4DA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3745  0021DC  2ADF               	incf	indf2,f,c
  3746                           
  3747                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1207:             ll
      +                          u = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0
      +                          ));
  3748  0021DE  0061  F52C  F4D9   	movff	vfpfcnvrt@ap,fsr2l
  3749  0021E4  0061  F530  F4DA   	movff	vfpfcnvrt@ap+1,fsr2h
  3750  0021EA  0061 F37C  F54D    	movff	indf2,??_vfpfcnvrt
  3751  0021F0  0E02               	movlw	2
  3752  0021F2  26DE               	addwf	postinc2,f,c
  3753  0021F4  0061 F37C  F54E    	movff	indf2,??_vfpfcnvrt+1
  3754  0021FA  0E00               	movlw	0
  3755  0021FC  22DD               	addwfc	postdec2,f,c
  3756  0021FE  0061  F534  F4D9   	movff	??_vfpfcnvrt,fsr2l
  3757  002204  0061  F538  F4DA   	movff	??_vfpfcnvrt+1,fsr2h
  3758  00220A  0061 F378  F54F    	movff	postinc2,??_vfpfcnvrt+2
  3759  002210  0061 F374  F550    	movff	postdec2,??_vfpfcnvrt+3
  3760  002216  C54F  F569         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3761  00221A  C550  F56A         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3762  00221E  0105               	movlb	5	; () banked
  3763  002220  6B6B               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  3764  002222  6B6C               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  3765  002224  6B6D               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  3766  002226  6B6E               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  3767  002228  6B6F               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  3768  00222A  6B70               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  3769                           
  3770                           ; BSR set to: 5
  3771                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1209:             re
      +                          turn utoa(fp, llu);
  3772  00222C  C547  F520         	movff	vfpfcnvrt@fp,utoa@fp
  3773  002230  C548  F521         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  3774  002234  C569  F522         	movff	vfpfcnvrt@llu,utoa@d
  3775  002238  C56A  F523         	movff	vfpfcnvrt@llu+1,utoa@d+1
  3776  00223C  C56B  F524         	movff	vfpfcnvrt@llu+2,utoa@d+2
  3777  002240  C56C  F525         	movff	vfpfcnvrt@llu+3,utoa@d+3
  3778  002244  C56D  F526         	movff	vfpfcnvrt@llu+4,utoa@d+4
  3779  002248  C56E  F527         	movff	vfpfcnvrt@llu+5,utoa@d+5
  3780  00224C  C56F  F528         	movff	vfpfcnvrt@llu+6,utoa@d+6
  3781  002250  C570  F529         	movff	vfpfcnvrt@llu+7,utoa@d+7
  3782  002254  ECC4  F017         	call	_utoa	;wreg free
  3783  002258  C520  F547         	movff	?_utoa,?_vfpfcnvrt
  3784  00225C  C521  F548         	movff	?_utoa+1,?_vfpfcnvrt+1
  3785  002260  0012               	return	
  3786  002262                     l4896:
  3787                           
  3788                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1214:         if (!s
      +                          trncmp(*fmt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
  3789  002262  0061  F524  F4D9   	movff	vfpfcnvrt@fmt,fsr2l
  3790  002268  0061  F528  F4DA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3791  00226E  50DF               	movf	indf2,w,c
  3792  002270  6E03               	movwf	strncmp@_l^(0+1280),c
  3793  002272  0ED8               	movlw	low STR_15
  3794  002274  6E04               	movwf	strncmp@_r^(0+1280),c
  3795  002276  0E00               	movlw	0
  3796  002278  6E06               	movwf	(strncmp@n+1)^(0+1280),c
  3797  00227A  0E02               	movlw	2
  3798  00227C  6E05               	movwf	strncmp@n^(0+1280),c
  3799  00227E  EC22  F01B         	call	_strncmp	;wreg free
  3800  002282  5003               	movf	?_strncmp^(0+1280),w,c
  3801  002284  1004               	iorwf	(?_strncmp+1)^(0+1280),w,c
  3802  002286  A4D8               	btfss	status,2,c
  3803  002288  D052               	goto	l4906
  3804                           
  3805                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1216:             *f
      +                          mt += ((sizeof("lu")/sizeof("lu"[0]))-1);
  3806  00228A  0061  F524  F4D9   	movff	vfpfcnvrt@fmt,fsr2l
  3807  002290  0061  F528  F4DA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3808  002296  0E02               	movlw	2
  3809  002298  26DF               	addwf	indf2,f,c
  3810                           
  3811                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1217:             ll
      +                          u = (unsigned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned lon
      +                          g)0));
  3812  00229A  0061  F52C  F4D9   	movff	vfpfcnvrt@ap,fsr2l
  3813  0022A0  0061  F530  F4DA   	movff	vfpfcnvrt@ap+1,fsr2h
  3814  0022A6  0061 F37C  F54D    	movff	indf2,??_vfpfcnvrt
  3815  0022AC  0E04               	movlw	4
  3816  0022AE  26DE               	addwf	postinc2,f,c
  3817  0022B0  0061 F37C  F54E    	movff	indf2,??_vfpfcnvrt+1
  3818  0022B6  0E00               	movlw	0
  3819  0022B8  22DD               	addwfc	postdec2,f,c
  3820  0022BA  0061  F534  F4D9   	movff	??_vfpfcnvrt,fsr2l
  3821  0022C0  0061  F538  F4DA   	movff	??_vfpfcnvrt+1,fsr2h
  3822  0022C6  0061 F378  F54F    	movff	postinc2,??_vfpfcnvrt+2
  3823  0022CC  0061 F378  F550    	movff	postinc2,??_vfpfcnvrt+3
  3824  0022D2  0061 F378  F551    	movff	postinc2,??_vfpfcnvrt+4
  3825  0022D8  0061 F378  F552    	movff	postinc2,??_vfpfcnvrt+5
  3826  0022DE  504F               	movf	(??_vfpfcnvrt+2)^(0+1280),w,c
  3827  0022E0  0105               	movlb	5	; () banked
  3828  0022E2  6F69               	movwf	vfpfcnvrt@llu& (0+255),b
  3829  0022E4  5050               	movf	(??_vfpfcnvrt+3)^(0+1280),w,c
  3830  0022E6  6F6A               	movwf	(vfpfcnvrt@llu+1)& (0+255),b
  3831  0022E8  5051               	movf	(??_vfpfcnvrt+4)^(0+1280),w,c
  3832  0022EA  6F6B               	movwf	(vfpfcnvrt@llu+2)& (0+255),b
  3833  0022EC  5052               	movf	(??_vfpfcnvrt+5)^(0+1280),w,c
  3834  0022EE  6F6C               	movwf	(vfpfcnvrt@llu+3)& (0+255),b
  3835  0022F0  6B6D               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  3836  0022F2  6B6E               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  3837  0022F4  6B6F               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  3838  0022F6  6B70               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  3839                           
  3840                           ; BSR set to: 5
  3841                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1219:             re
      +                          turn utoa(fp, llu);
  3842  0022F8  C547  F520         	movff	vfpfcnvrt@fp,utoa@fp
  3843  0022FC  C548  F521         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  3844  002300  C569  F522         	movff	vfpfcnvrt@llu,utoa@d
  3845  002304  C56A  F523         	movff	vfpfcnvrt@llu+1,utoa@d+1
  3846  002308  C56B  F524         	movff	vfpfcnvrt@llu+2,utoa@d+2
  3847  00230C  C56C  F525         	movff	vfpfcnvrt@llu+3,utoa@d+3
  3848  002310  C56D  F526         	movff	vfpfcnvrt@llu+4,utoa@d+4
  3849  002314  C56E  F527         	movff	vfpfcnvrt@llu+5,utoa@d+5
  3850  002318  C56F  F528         	movff	vfpfcnvrt@llu+6,utoa@d+6
  3851  00231C  C570  F529         	movff	vfpfcnvrt@llu+7,utoa@d+7
  3852  002320  ECC4  F017         	call	_utoa	;wreg free
  3853  002324  C520  F547         	movff	?_utoa,?_vfpfcnvrt
  3854  002328  C521  F548         	movff	?_utoa+1,?_vfpfcnvrt+1
  3855  00232C  0012               	return	
  3856  00232E                     l4906:
  3857                           
  3858                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1296:         if ((*
      +                          fmt[0] == 'x') || (*fmt[0] == 'X')) {
  3859  00232E  0061  F524  F4D9   	movff	vfpfcnvrt@fmt,fsr2l
  3860  002334  0061  F528  F4DA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3861  00233A  C4DF F4F6          	movff	indf2,tblptrl
  3862  00233E                     	if	1	;There is more than 1 active tblptr byte
  3863  00233E  0E15               	movlw	high __smallconst
  3864  002340  6EF7               	movwf	tblptrh,c
  3865  002342                     	endif
  3866  002342                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3867  002342  6AF8               	clrf	tblptru,c
  3868  002344                     	endif
  3869  002344                     	if	0	;tblptru may be non-zero
  3870  002344                     	endif
  3871  002344  0008               	tblrd		*
  3872  002346  50F5               	movf	tablat,w,c
  3873  002348  0A78               	xorlw	120
  3874  00234A  B4D8               	btfsc	status,2,c
  3875  00234C  D010               	goto	u5180
  3876  00234E  0061  F524  F4D9   	movff	vfpfcnvrt@fmt,fsr2l
  3877  002354  0061  F528  F4DA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3878  00235A  C4DF F4F6          	movff	indf2,tblptrl
  3879  00235E                     	if	1	;There is more than 1 active tblptr byte
  3880  00235E  0E15               	movlw	high __smallconst
  3881  002360  6EF7               	movwf	tblptrh,c
  3882  002362                     	endif
  3883  002362                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3884  002362  6AF8               	clrf	tblptru,c
  3885  002364                     	endif
  3886  002364                     	if	0	;tblptru may be non-zero
  3887  002364                     	endif
  3888  002364  0008               	tblrd		*
  3889  002366  50F5               	movf	tablat,w,c
  3890  002368  0A58               	xorlw	88
  3891  00236A  A4D8               	btfss	status,2,c
  3892  00236C  D05A               	goto	l4920
  3893  00236E                     u5180:
  3894                           
  3895                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1298:             c 
      +                          = (*fmt)[0];
  3896  00236E  0061  F524  F4D9   	movff	vfpfcnvrt@fmt,fsr2l
  3897  002374  0061  F528  F4DA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3898  00237A  C4DF F4F6          	movff	indf2,tblptrl
  3899  00237E                     	if	1	;There is more than 1 active tblptr byte
  3900  00237E  0E15               	movlw	high __smallconst
  3901  002380  6EF7               	movwf	tblptrh,c
  3902  002382                     	endif
  3903  002382                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3904  002382  6AF8               	clrf	tblptru,c
  3905  002384                     	endif
  3906  002384                     	if	0	;tblptru may be non-zero
  3907  002384                     	endif
  3908  002384  0008               	tblrd		*
  3909  002386  0061 F3D4  F568    	movff	tablat,vfpfcnvrt@c
  3910                           
  3911                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1299:             ++
      +                          *fmt;
  3912  00238C  0061  F524  F4D9   	movff	vfpfcnvrt@fmt,fsr2l
  3913  002392  0061  F528  F4DA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3914  002398  2ADF               	incf	indf2,f,c
  3915                           
  3916                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1300:             ll
      +                          u = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0
      +                          ));
  3917  00239A  0061  F52C  F4D9   	movff	vfpfcnvrt@ap,fsr2l
  3918  0023A0  0061  F530  F4DA   	movff	vfpfcnvrt@ap+1,fsr2h
  3919  0023A6  0061 F37C  F54D    	movff	indf2,??_vfpfcnvrt
  3920  0023AC  0E02               	movlw	2
  3921  0023AE  26DE               	addwf	postinc2,f,c
  3922  0023B0  0061 F37C  F54E    	movff	indf2,??_vfpfcnvrt+1
  3923  0023B6  0E00               	movlw	0
  3924  0023B8  22DD               	addwfc	postdec2,f,c
  3925  0023BA  0061  F534  F4D9   	movff	??_vfpfcnvrt,fsr2l
  3926  0023C0  0061  F538  F4DA   	movff	??_vfpfcnvrt+1,fsr2h
  3927  0023C6  0061 F378  F54F    	movff	postinc2,??_vfpfcnvrt+2
  3928  0023CC  0061 F374  F550    	movff	postdec2,??_vfpfcnvrt+3
  3929  0023D2  C54F  F569         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3930  0023D6  C550  F56A         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3931  0023DA  0105               	movlb	5	; () banked
  3932  0023DC  6B6B               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  3933  0023DE  6B6C               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  3934  0023E0  6B6D               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  3935  0023E2  6B6E               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  3936  0023E4  6B6F               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  3937  0023E6  6B70               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  3938                           
  3939                           ; BSR set to: 5
  3940                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1302:             re
      +                          turn xtoa(fp, llu, c);
  3941  0023E8  C547  F520         	movff	vfpfcnvrt@fp,xtoa@fp
  3942  0023EC  C548  F521         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  3943  0023F0  C569  F522         	movff	vfpfcnvrt@llu,xtoa@d
  3944  0023F4  C56A  F523         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  3945  0023F8  C56B  F524         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  3946  0023FC  C56C  F525         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  3947  002400  C56D  F526         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  3948  002404  C56E  F527         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  3949  002408  C56F  F528         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  3950  00240C  C570  F529         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  3951  002410  C568  F52A         	movff	vfpfcnvrt@c,xtoa@x
  3952  002414  ECAC  F016         	call	_xtoa	;wreg free
  3953  002418  C520  F547         	movff	?_xtoa,?_vfpfcnvrt
  3954  00241C  C521  F548         	movff	?_xtoa+1,?_vfpfcnvrt+1
  3955  002420  0012               	return	
  3956  002422                     l4920:
  3957                           
  3958                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1307:         if (!s
      +                          trncmp(*fmt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof(
      +                          "lX")/sizeof("lX"[0]))-1))) {
  3959  002422  0061  F524  F4D9   	movff	vfpfcnvrt@fmt,fsr2l
  3960  002428  0061  F528  F4DA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3961  00242E  50DF               	movf	indf2,w,c
  3962  002430  6E03               	movwf	strncmp@_l^(0+1280),c
  3963  002432  0EDB               	movlw	low STR_20
  3964  002434  6E04               	movwf	strncmp@_r^(0+1280),c
  3965  002436  0E00               	movlw	0
  3966  002438  6E06               	movwf	(strncmp@n+1)^(0+1280),c
  3967  00243A  0E02               	movlw	2
  3968  00243C  6E05               	movwf	strncmp@n^(0+1280),c
  3969  00243E  EC22  F01B         	call	_strncmp	;wreg free
  3970  002442  5003               	movf	?_strncmp^(0+1280),w,c
  3971  002444  1004               	iorwf	(?_strncmp+1)^(0+1280),w,c
  3972  002446  B4D8               	btfsc	status,2,c
  3973  002448  D014               	goto	u5200
  3974  00244A  0061  F524  F4D9   	movff	vfpfcnvrt@fmt,fsr2l
  3975  002450  0061  F528  F4DA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3976  002456  50DF               	movf	indf2,w,c
  3977  002458  6E03               	movwf	strncmp@_l^(0+1280),c
  3978  00245A  0ECF               	movlw	low STR_24
  3979  00245C  6E04               	movwf	strncmp@_r^(0+1280),c
  3980  00245E  0E00               	movlw	0
  3981  002460  6E06               	movwf	(strncmp@n+1)^(0+1280),c
  3982  002462  0E02               	movlw	2
  3983  002464  6E05               	movwf	strncmp@n^(0+1280),c
  3984  002466  EC22  F01B         	call	_strncmp	;wreg free
  3985  00246A  5003               	movf	?_strncmp^(0+1280),w,c
  3986  00246C  1004               	iorwf	(?_strncmp+1)^(0+1280),w,c
  3987  00246E  A4D8               	btfss	status,2,c
  3988  002470  D068               	goto	l4934
  3989  002472                     u5200:
  3990                           
  3991                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1308: ;/Applications
      +                          /microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1310:             c = (*fmt)[1];
  3992  002472  0061  F524  F4D9   	movff	vfpfcnvrt@fmt,fsr2l
  3993  002478  0061  F528  F4DA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3994  00247E  50DF               	movf	indf2,w,c
  3995  002480  6E4D               	movwf	??_vfpfcnvrt^(0+1280),c
  3996  002482  0E01               	movlw	1
  3997  002484  264D               	addwf	??_vfpfcnvrt^(0+1280),f,c
  3998  002486  0061  F534  F4F6   	movff	??_vfpfcnvrt,tblptrl
  3999  00248C                     	if	1	;There is more than 1 active tblptr byte
  4000  00248C  0E15               	movlw	high __smallconst
  4001  00248E  6EF7               	movwf	tblptrh,c
  4002  002490                     	endif
  4003  002490                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4004  002490  6AF8               	clrf	tblptru,c
  4005  002492                     	endif
  4006  002492                     	if	0	;tblptru may be non-zero
  4007  002492                     	endif
  4008  002492  0008               	tblrd		*
  4009  002494  0061 F3D4  F568    	movff	tablat,vfpfcnvrt@c
  4010                           
  4011                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1311:             *f
      +                          mt += ((sizeof("lx")/sizeof("lx"[0]))-1);
  4012  00249A  0061  F524  F4D9   	movff	vfpfcnvrt@fmt,fsr2l
  4013  0024A0  0061  F528  F4DA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4014  0024A6  0E02               	movlw	2
  4015  0024A8  26DF               	addwf	indf2,f,c
  4016                           
  4017                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1312:             ll
      +                          u = (unsigned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned lon
      +                          g)0));
  4018  0024AA  0061  F52C  F4D9   	movff	vfpfcnvrt@ap,fsr2l
  4019  0024B0  0061  F530  F4DA   	movff	vfpfcnvrt@ap+1,fsr2h
  4020  0024B6  0061 F37C  F54D    	movff	indf2,??_vfpfcnvrt
  4021  0024BC  0E04               	movlw	4
  4022  0024BE  26DE               	addwf	postinc2,f,c
  4023  0024C0  0061 F37C  F54E    	movff	indf2,??_vfpfcnvrt+1
  4024  0024C6  0E00               	movlw	0
  4025  0024C8  22DD               	addwfc	postdec2,f,c
  4026  0024CA  0061  F534  F4D9   	movff	??_vfpfcnvrt,fsr2l
  4027  0024D0  0061  F538  F4DA   	movff	??_vfpfcnvrt+1,fsr2h
  4028  0024D6  0061 F378  F54F    	movff	postinc2,??_vfpfcnvrt+2
  4029  0024DC  0061 F378  F550    	movff	postinc2,??_vfpfcnvrt+3
  4030  0024E2  0061 F378  F551    	movff	postinc2,??_vfpfcnvrt+4
  4031  0024E8  0061 F378  F552    	movff	postinc2,??_vfpfcnvrt+5
  4032  0024EE  504F               	movf	(??_vfpfcnvrt+2)^(0+1280),w,c
  4033  0024F0  0105               	movlb	5	; () banked
  4034  0024F2  6F69               	movwf	vfpfcnvrt@llu& (0+255),b
  4035  0024F4  5050               	movf	(??_vfpfcnvrt+3)^(0+1280),w,c
  4036  0024F6  6F6A               	movwf	(vfpfcnvrt@llu+1)& (0+255),b
  4037  0024F8  5051               	movf	(??_vfpfcnvrt+4)^(0+1280),w,c
  4038  0024FA  6F6B               	movwf	(vfpfcnvrt@llu+2)& (0+255),b
  4039  0024FC  5052               	movf	(??_vfpfcnvrt+5)^(0+1280),w,c
  4040  0024FE  6F6C               	movwf	(vfpfcnvrt@llu+3)& (0+255),b
  4041  002500  6B6D               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  4042  002502  6B6E               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  4043  002504  6B6F               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  4044  002506  6B70               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  4045                           
  4046                           ; BSR set to: 5
  4047                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1314:             re
      +                          turn xtoa(fp, llu, c);
  4048  002508  C547  F520         	movff	vfpfcnvrt@fp,xtoa@fp
  4049  00250C  C548  F521         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  4050  002510  C569  F522         	movff	vfpfcnvrt@llu,xtoa@d
  4051  002514  C56A  F523         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  4052  002518  C56B  F524         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  4053  00251C  C56C  F525         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  4054  002520  C56D  F526         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  4055  002524  C56E  F527         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  4056  002528  C56F  F528         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  4057  00252C  C570  F529         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  4058  002530  C568  F52A         	movff	vfpfcnvrt@c,xtoa@x
  4059  002534  ECAC  F016         	call	_xtoa	;wreg free
  4060  002538  C520  F547         	movff	?_xtoa,?_vfpfcnvrt
  4061  00253C  C521  F548         	movff	?_xtoa+1,?_vfpfcnvrt+1
  4062  002540  0012               	return	
  4063  002542                     l4934:
  4064                           
  4065                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1372:         if ((*
      +                          fmt)[0] == '%') {
  4066  002542  0061  F524  F4D9   	movff	vfpfcnvrt@fmt,fsr2l
  4067  002548  0061  F528  F4DA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4068  00254E  C4DF F4F6          	movff	indf2,tblptrl
  4069  002552                     	if	1	;There is more than 1 active tblptr byte
  4070  002552  0E15               	movlw	high __smallconst
  4071  002554  6EF7               	movwf	tblptrh,c
  4072  002556                     	endif
  4073  002556                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4074  002556  6AF8               	clrf	tblptru,c
  4075  002558                     	endif
  4076  002558                     	if	0	;tblptru may be non-zero
  4077  002558                     	endif
  4078  002558  0008               	tblrd		*
  4079  00255A  50F5               	movf	tablat,w,c
  4080  00255C  0A25               	xorlw	37
  4081  00255E  A4D8               	btfss	status,2,c
  4082  002560  D016               	goto	l4944
  4083                           
  4084                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1373:             ++
      +                          *fmt;
  4085  002562  0061  F524  F4D9   	movff	vfpfcnvrt@fmt,fsr2l
  4086  002568  0061  F528  F4DA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4087  00256E  2ADF               	incf	indf2,f,c
  4088                           
  4089                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1374:             fp
      +                          utc((int)'%', fp);
  4090  002570  0E00               	movlw	0
  4091  002572  6E06               	movwf	(fputc@c+1)^(0+1280),c
  4092  002574  0E25               	movlw	37
  4093  002576  6E05               	movwf	fputc@c^(0+1280),c
  4094  002578  C547  F507         	movff	vfpfcnvrt@fp,fputc@fp
  4095  00257C  C548  F508         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4096  002580  EC1D  F01D         	call	_fputc	;wreg free
  4097  002584                     l4940:
  4098                           
  4099                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1375:             re
      +                          turn 1;
  4100  002584  0E00               	movlw	0
  4101  002586  6E48               	movwf	(?_vfpfcnvrt+1)^(0+1280),c
  4102  002588  0E01               	movlw	1
  4103  00258A  6E47               	movwf	?_vfpfcnvrt^(0+1280),c
  4104  00258C  0012               	return	
  4105  00258E                     l4944:
  4106                           
  4107                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1379:         ++*fmt
      +                          ;
  4108  00258E  0061  F524  F4D9   	movff	vfpfcnvrt@fmt,fsr2l
  4109  002594  0061  F528  F4DA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4110  00259A  2ADF               	incf	indf2,f,c
  4111                           
  4112                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1380:         return
      +                           0;
  4113  00259C  0E00               	movlw	0
  4114  00259E  6E48               	movwf	(?_vfpfcnvrt+1)^(0+1280),c
  4115  0025A0  0E00               	movlw	0
  4116  0025A2  6E47               	movwf	?_vfpfcnvrt^(0+1280),c
  4117  0025A4  0012               	return	
  4118  0025A6                     l4950:
  4119                           
  4120                           ; BSR set to: 5
  4121                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1384:     fputc((int
      +                          )(*fmt)[0], fp);
  4122  0025A6  0061  F524  F4D9   	movff	vfpfcnvrt@fmt,fsr2l
  4123  0025AC  0061  F528  F4DA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4124  0025B2  C4DF F4F6          	movff	indf2,tblptrl
  4125  0025B6                     	if	1	;There is more than 1 active tblptr byte
  4126  0025B6  0E15               	movlw	high __smallconst
  4127  0025B8  6EF7               	movwf	tblptrh,c
  4128  0025BA                     	endif
  4129  0025BA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4130  0025BA  6AF8               	clrf	tblptru,c
  4131  0025BC                     	endif
  4132  0025BC                     	if	0	;tblptru may be non-zero
  4133  0025BC                     	endif
  4134  0025BC  0008               	tblrd		*
  4135  0025BE  50F5               	movf	tablat,w,c
  4136  0025C0  6E05               	movwf	fputc@c^(0+1280),c
  4137  0025C2  6A06               	clrf	(fputc@c+1)^(0+1280),c
  4138  0025C4  C547  F507         	movff	vfpfcnvrt@fp,fputc@fp
  4139  0025C8  C548  F508         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4140  0025CC  EC1D  F01D         	call	_fputc	;wreg free
  4141                           
  4142                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1385:     ++*fmt;
  4143  0025D0  0061  F524  F4D9   	movff	vfpfcnvrt@fmt,fsr2l
  4144  0025D6  0061  F528  F4DA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4145  0025DC  2ADF               	incf	indf2,f,c
  4146  0025DE  D7D2               	goto	l4940
  4147  0025E0                     __end_of_vfpfcnvrt:
  4148                           	callstack 0
  4149                           
  4150 ;; *************** function _xtoa *****************
  4151 ;; Defined at:
  4152 ;;		line 645 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c"
  4153 ;; Parameters:    Size  Location     Type
  4154 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  4155 ;;		 -> NULL(0), 
  4156 ;;  d               8   33[COMRAM] unsigned long long 
  4157 ;;  x               1   41[COMRAM] unsigned char 
  4158 ;; Auto vars:     Size  Location     Type
  4159 ;;  n               8   58[COMRAM] unsigned long long 
  4160 ;;  c               2   68[COMRAM] int 
  4161 ;;  i               2   66[COMRAM] int 
  4162 ;;  w               2   56[COMRAM] int 
  4163 ;;  p               2   54[COMRAM] int 
  4164 ;; Return value:  Size  Location     Type
  4165 ;;                  2   31[COMRAM] int 
  4166 ;; Registers used:
  4167 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4168 ;; Tracked objects:
  4169 ;;		On entry : 3F/5
  4170 ;;		On exit  : 0/0
  4171 ;;		Unchanged: 0/0
  4172 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  4173 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4174 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4175 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4176 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4177 ;;Total ram usage:       39 bytes
  4178 ;; Hardware stack levels used: 1
  4179 ;; Hardware stack levels required when called: 8
  4180 ;; This function calls:
  4181 ;;		_isalpha
  4182 ;;		_isupper
  4183 ;;		_pad
  4184 ;;		_toupper
  4185 ;; This function is called by:
  4186 ;;		_vfpfcnvrt
  4187 ;; This function uses a non-reentrant model
  4188 ;;
  4189                           
  4190                           	psect	text7
  4191  002D58                     __ptext7:
  4192                           	callstack 0
  4193  002D58                     _xtoa:
  4194                           	callstack 115
  4195                           
  4196                           ; BSR set to: 5
  4197                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 645: static int xtoa
      +                          (FILE *fp, unsigned long long d, char x);/Applications/microchip/xc8/v2.32/pic/sources/c
      +                          99/common/doprnt.c: 646: {;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/dopr
      +                          nt.c: 647:     int c, i, p, w;;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/
      +                          doprnt.c: 648:     unsigned long long n;;/Applications/microchip/xc8/v2.32/pic/sources/c
      +                          99/common/doprnt.c: 651:     if (!(prec < 0)) {
  4198                           
  4199                           ;incstack = 0
  4200  002D58  AFCE               	btfss	(_prec+1)& (0+255),7,b
  4201                           
  4202                           ; BSR set to: 5
  4203                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 652:         flags &
      +                          = ~(1 << 1);
  4204  002D5A  925C               	bcf	_flags^(0+1280),1,c
  4205                           
  4206                           ; BSR set to: 5
  4207                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 654:     p = (0 < pr
      +                          ec) ? prec : 1;
  4208  002D5C  BFCE               	btfsc	(_prec+1)& (0+255),7,b
  4209  002D5E  D005               	goto	u4880
  4210  002D60  51CE               	movf	(_prec+1)& (0+255),w,b
  4211  002D62  E108               	bnz	l1926
  4212  002D64  05CD               	decf	_prec& (0+255),w,b
  4213  002D66  B0D8               	btfsc	status,0,c
  4214  002D68  D005               	goto	l1926
  4215  002D6A                     u4880:
  4216                           
  4217                           ; BSR set to: 5
  4218  002D6A  0E00               	movlw	0
  4219  002D6C  6E38               	movwf	(xtoa@p+1)^(0+1280),c
  4220  002D6E  0E01               	movlw	1
  4221  002D70  6E37               	movwf	xtoa@p^(0+1280),c
  4222  002D72  D004               	goto	l1928
  4223  002D74                     l1926:
  4224                           
  4225                           ; BSR set to: 5
  4226  002D74  C5CD  F537         	movff	_prec,xtoa@p
  4227  002D78  C5CE  F538         	movff	_prec+1,xtoa@p+1
  4228  002D7C                     l1928:
  4229                           
  4230                           ; BSR set to: 5
  4231                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 655:     w = width;
  4232  002D7C  C5CB  F539         	movff	_width,xtoa@w
  4233  002D80  C5CC  F53A         	movff	_width+1,xtoa@w+1
  4234                           
  4235                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 656:     if (flags &
      +                           (1 << 4)) {
  4236  002D84  A85C               	btfss	_flags^(0+1280),4,c
  4237  002D86  D004               	goto	l4768
  4238                           
  4239                           ; BSR set to: 5
  4240                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 657:         w -= 2;
  4241  002D88  0EFE               	movlw	254
  4242  002D8A  2639               	addwf	xtoa@w^(0+1280),f,c
  4243  002D8C  0EFF               	movlw	255
  4244  002D8E  223A               	addwfc	(xtoa@w+1)^(0+1280),f,c
  4245  002D90                     l4768:
  4246                           
  4247                           ; BSR set to: 5
  4248                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 661:     n = d;
  4249  002D90  C522  F53B         	movff	xtoa@d,xtoa@n
  4250  002D94  C523  F53C         	movff	xtoa@d+1,xtoa@n+1
  4251  002D98  C524  F53D         	movff	xtoa@d+2,xtoa@n+2
  4252  002D9C  C525  F53E         	movff	xtoa@d+3,xtoa@n+3
  4253  002DA0  C526  F53F         	movff	xtoa@d+4,xtoa@n+4
  4254  002DA4  C527  F540         	movff	xtoa@d+5,xtoa@n+5
  4255  002DA8  C528  F541         	movff	xtoa@d+6,xtoa@n+6
  4256  002DAC  C529  F542         	movff	xtoa@d+7,xtoa@n+7
  4257                           
  4258                           ; BSR set to: 5
  4259                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 662:     i = sizeof(
      +                          dbuf) - 1;
  4260  002DB0  0E00               	movlw	0
  4261  002DB2  6E44               	movwf	(xtoa@i+1)^(0+1280),c
  4262  002DB4  0E1F               	movlw	31
  4263  002DB6  6E43               	movwf	xtoa@i^(0+1280),c
  4264                           
  4265                           ; BSR set to: 5
  4266                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 663:     dbuf[i] = '
      +                          \0';
  4267  002DB8  0E00               	movlw	0
  4268  002DBA  0106               	movlb	6	; () banked
  4269  002DBC  6F1F               	movwf	(_dbuf+31)& (0+255),b
  4270                           
  4271                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 664:     while (!(i 
      +                          < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4272  002DBE  D094               	goto	l4804
  4273  002DC0                     l4774:
  4274                           
  4275                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 665:         --i;
  4276  002DC0  0643               	decf	xtoa@i^(0+1280),f,c
  4277  002DC2  A0D8               	btfss	status,0,c
  4278  002DC4  0644               	decf	(xtoa@i+1)^(0+1280),f,c
  4279                           
  4280                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 666:         c = n &
      +                           0x0f;
  4281  002DC6  0E0F               	movlw	15
  4282  002DC8  143B               	andwf	xtoa@n^(0+1280),w,c
  4283  002DCA  6E45               	movwf	xtoa@c^(0+1280),c
  4284  002DCC  6A46               	clrf	(xtoa@c+1)^(0+1280),c
  4285                           
  4286                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 667:         c = (c 
      +                          < 10) ? (int)'0' + c : (int)'a' + (c - 10);
  4287  002DCE  BE46               	btfsc	(xtoa@c+1)^(0+1280),7,c
  4288  002DD0  D008               	goto	l4782
  4289  002DD2  5046               	movf	(xtoa@c+1)^(0+1280),w,c
  4290  002DD4  E104               	bnz	u4900
  4291  002DD6  0E0A               	movlw	10
  4292  002DD8  5C45               	subwf	xtoa@c^(0+1280),w,c
  4293  002DDA  A0D8               	btfss	status,0,c
  4294  002DDC  D002               	goto	l4782
  4295  002DDE                     u4900:
  4296  002DDE  0E57               	movlw	87
  4297  002DE0  D001               	goto	L5
  4298  002DE2                     l4782:
  4299  002DE2  0E30               	movlw	48
  4300  002DE4                     L5:
  4301  002DE4  2445               	addwf	xtoa@c^(0+1280),w,c
  4302  002DE6  6E45               	movwf	xtoa@c^(0+1280),c
  4303  002DE8  0E00               	movlw	0
  4304  002DEA  2046               	addwfc	(xtoa@c+1)^(0+1280),w,c
  4305  002DEC  6E46               	movwf	(xtoa@c+1)^(0+1280),c
  4306                           
  4307                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 668:         if ((0 
      +                          ? isupper((int)x) : ((unsigned)((int)x)-'A') < 26) && (0 ? isalpha(c) : (((unsigned)(c)|
      +                          32)-'a') < 26)) {
  4308  002DEE  0EBF               	movlw	191
  4309  002DF0  6E2B               	movwf	??_xtoa^(0+1280),c
  4310  002DF2  0EFF               	movlw	255
  4311  002DF4  6E2C               	movwf	(??_xtoa+1)^(0+1280),c
  4312  002DF6  502A               	movf	xtoa@x^(0+1280),w,c
  4313  002DF8  6E2D               	movwf	(??_xtoa+2)^(0+1280),c
  4314  002DFA  6A2E               	clrf	(??_xtoa+3)^(0+1280),c
  4315  002DFC  502B               	movf	??_xtoa^(0+1280),w,c
  4316  002DFE  262D               	addwf	(??_xtoa+2)^(0+1280),f,c
  4317  002E00  502C               	movf	(??_xtoa+1)^(0+1280),w,c
  4318  002E02  222E               	addwfc	(??_xtoa+3)^(0+1280),f,c
  4319  002E04  502E               	movf	(??_xtoa+3)^(0+1280),w,c
  4320  002E06  E106               	bnz	u4910
  4321  002E08  0E1A               	movlw	26
  4322  002E0A  5C2D               	subwf	(??_xtoa+2)^(0+1280),w,c
  4323  002E0C  B0D8               	btfsc	status,0,c
  4324  002E0E  D002               	goto	u4910
  4325  002E10  0E01               	movlw	1
  4326  002E12  D001               	goto	u4920
  4327  002E14                     u4910:
  4328  002E14  0E00               	movlw	0
  4329  002E16                     u4920:
  4330  002E16  6E33               	movwf	_xtoa$2484^(0+1280),c
  4331  002E18  6A34               	clrf	(_xtoa$2484+1)^(0+1280),c
  4332  002E1A  5033               	movf	_xtoa$2484^(0+1280),w,c
  4333  002E1C  1034               	iorwf	(_xtoa$2484+1)^(0+1280),w,c
  4334  002E1E  B4D8               	btfsc	status,2,c
  4335  002E20  D027               	goto	l4796
  4336  002E22  0E9F               	movlw	159
  4337  002E24  6E2B               	movwf	??_xtoa^(0+1280),c
  4338  002E26  0EFF               	movlw	255
  4339  002E28  6E2C               	movwf	(??_xtoa+1)^(0+1280),c
  4340  002E2A  0E20               	movlw	32
  4341  002E2C  1045               	iorwf	xtoa@c^(0+1280),w,c
  4342  002E2E  6E2D               	movwf	(??_xtoa+2)^(0+1280),c
  4343  002E30  0E00               	movlw	0
  4344  002E32  1046               	iorwf	(xtoa@c+1)^(0+1280),w,c
  4345  002E34  6E2E               	movwf	(??_xtoa+3)^(0+1280),c
  4346  002E36  502B               	movf	??_xtoa^(0+1280),w,c
  4347  002E38  262D               	addwf	(??_xtoa+2)^(0+1280),f,c
  4348  002E3A  502C               	movf	(??_xtoa+1)^(0+1280),w,c
  4349  002E3C  222E               	addwfc	(??_xtoa+3)^(0+1280),f,c
  4350  002E3E  502E               	movf	(??_xtoa+3)^(0+1280),w,c
  4351  002E40  E106               	bnz	u4940
  4352  002E42  0E1A               	movlw	26
  4353  002E44  5C2D               	subwf	(??_xtoa+2)^(0+1280),w,c
  4354  002E46  B0D8               	btfsc	status,0,c
  4355  002E48  D002               	goto	u4940
  4356  002E4A  0E01               	movlw	1
  4357  002E4C  D001               	goto	u4950
  4358  002E4E                     u4940:
  4359  002E4E  0E00               	movlw	0
  4360  002E50                     u4950:
  4361  002E50  6E35               	movwf	_xtoa$2485^(0+1280),c
  4362  002E52  6A36               	clrf	(_xtoa$2485+1)^(0+1280),c
  4363  002E54  5035               	movf	_xtoa$2485^(0+1280),w,c
  4364  002E56  1036               	iorwf	(_xtoa$2485+1)^(0+1280),w,c
  4365  002E58  B4D8               	btfsc	status,2,c
  4366  002E5A  D00A               	goto	l4796
  4367                           
  4368                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 669:             c =
      +                           toupper(c);
  4369  002E5C  C545  F509         	movff	xtoa@c,toupper@c
  4370  002E60  C546  F50A         	movff	xtoa@c+1,toupper@c+1
  4371  002E64  ECA8  F01E         	call	_toupper	;wreg free
  4372  002E68  C509  F545         	movff	?_toupper,xtoa@c
  4373  002E6C  C50A  F546         	movff	?_toupper+1,xtoa@c+1
  4374  002E70                     l4796:
  4375                           
  4376                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 671:         dbuf[i]
      +                           = (char)c;
  4377  002E70  0E00               	movlw	low _dbuf
  4378  002E72  2443               	addwf	xtoa@i^(0+1280),w,c
  4379  002E74  6ED9               	movwf	fsr2l,c
  4380  002E76  0E06               	movlw	high _dbuf
  4381  002E78  2044               	addwfc	(xtoa@i+1)^(0+1280),w,c
  4382  002E7A  6EDA               	movwf	fsr2h,c
  4383  002E7C  0061  F514  F4DF   	movff	xtoa@c,indf2
  4384                           
  4385                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 672:         --p;
  4386  002E82  0637               	decf	xtoa@p^(0+1280),f,c
  4387  002E84  A0D8               	btfss	status,0,c
  4388  002E86  0638               	decf	(xtoa@p+1)^(0+1280),f,c
  4389                           
  4390                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 673:         --w;
  4391  002E88  0639               	decf	xtoa@w^(0+1280),f,c
  4392  002E8A  A0D8               	btfss	status,0,c
  4393  002E8C  063A               	decf	(xtoa@w+1)^(0+1280),f,c
  4394                           
  4395                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 674:         n = n >
      +                          > 4;
  4396  002E8E  C53B  F52B         	movff	xtoa@n,??_xtoa
  4397  002E92  C53C  F52C         	movff	xtoa@n+1,??_xtoa+1
  4398  002E96  C53D  F52D         	movff	xtoa@n+2,??_xtoa+2
  4399  002E9A  C53E  F52E         	movff	xtoa@n+3,??_xtoa+3
  4400  002E9E  C53F  F52F         	movff	xtoa@n+4,??_xtoa+4
  4401  002EA2  C540  F530         	movff	xtoa@n+5,??_xtoa+5
  4402  002EA6  C541  F531         	movff	xtoa@n+6,??_xtoa+6
  4403  002EAA  C542  F532         	movff	xtoa@n+7,??_xtoa+7
  4404  002EAE  0E05               	movlw	5
  4405  002EB0  D009               	goto	u4970
  4406  002EB2                     u4975:
  4407  002EB2  90D8               	bcf	status,0,c
  4408  002EB4  3232               	rrcf	(??_xtoa+7)^(0+1280),f,c
  4409  002EB6  3231               	rrcf	(??_xtoa+6)^(0+1280),f,c
  4410  002EB8  3230               	rrcf	(??_xtoa+5)^(0+1280),f,c
  4411  002EBA  322F               	rrcf	(??_xtoa+4)^(0+1280),f,c
  4412  002EBC  322E               	rrcf	(??_xtoa+3)^(0+1280),f,c
  4413  002EBE  322D               	rrcf	(??_xtoa+2)^(0+1280),f,c
  4414  002EC0  322C               	rrcf	(??_xtoa+1)^(0+1280),f,c
  4415  002EC2  322B               	rrcf	??_xtoa^(0+1280),f,c
  4416  002EC4                     u4970:
  4417  002EC4  2EE8               	decfsz	wreg,f,c
  4418  002EC6  D7F5               	goto	u4975
  4419  002EC8  C52B  F53B         	movff	??_xtoa,xtoa@n
  4420  002ECC  C52C  F53C         	movff	??_xtoa+1,xtoa@n+1
  4421  002ED0  C52D  F53D         	movff	??_xtoa+2,xtoa@n+2
  4422  002ED4  C52E  F53E         	movff	??_xtoa+3,xtoa@n+3
  4423  002ED8  C52F  F53F         	movff	??_xtoa+4,xtoa@n+4
  4424  002EDC  C530  F540         	movff	??_xtoa+5,xtoa@n+5
  4425  002EE0  C531  F541         	movff	??_xtoa+6,xtoa@n+6
  4426  002EE4  C532  F542         	movff	??_xtoa+7,xtoa@n+7
  4427  002EE8                     l4804:
  4428                           
  4429                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 664:     while (!(i 
      +                          < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4430  002EE8  BE44               	btfsc	(xtoa@i+1)^(0+1280),7,c
  4431  002EEA  D020               	goto	u5020
  4432  002EEC  5044               	movf	(xtoa@i+1)^(0+1280),w,c
  4433  002EEE  E104               	bnz	u4980
  4434  002EF0  0E02               	movlw	2
  4435  002EF2  5C43               	subwf	xtoa@i^(0+1280),w,c
  4436  002EF4  A0D8               	btfss	status,0,c
  4437  002EF6  D01A               	goto	u5020
  4438  002EF8                     u4980:
  4439  002EF8  503B               	movf	xtoa@n^(0+1280),w,c
  4440  002EFA  103C               	iorwf	(xtoa@n+1)^(0+1280),w,c
  4441  002EFC  103D               	iorwf	(xtoa@n+2)^(0+1280),w,c
  4442  002EFE  103E               	iorwf	(xtoa@n+3)^(0+1280),w,c
  4443  002F00  103F               	iorwf	(xtoa@n+4)^(0+1280),w,c
  4444  002F02  1040               	iorwf	(xtoa@n+5)^(0+1280),w,c
  4445  002F04  1041               	iorwf	(xtoa@n+6)^(0+1280),w,c
  4446  002F06  1042               	iorwf	(xtoa@n+7)^(0+1280),w,c
  4447  002F08  A4D8               	btfss	status,2,c
  4448  002F0A  D75A               	goto	l4774
  4449  002F0C  BE38               	btfsc	(xtoa@p+1)^(0+1280),7,c
  4450  002F0E  D005               	goto	u5000
  4451  002F10  5038               	movf	(xtoa@p+1)^(0+1280),w,c
  4452  002F12  E102               	bnz	u5001
  4453  002F14  0437               	decf	xtoa@p^(0+1280),w,c
  4454  002F16  B0D8               	btfsc	status,0,c
  4455  002F18                     u5001:
  4456  002F18  D753               	goto	l4774
  4457  002F1A                     u5000:
  4458  002F1A  BE3A               	btfsc	(xtoa@w+1)^(0+1280),7,c
  4459  002F1C  D007               	goto	u5020
  4460  002F1E  503A               	movf	(xtoa@w+1)^(0+1280),w,c
  4461  002F20  E103               	bnz	u5010
  4462  002F22  0439               	decf	xtoa@w^(0+1280),w,c
  4463  002F24  A0D8               	btfss	status,0,c
  4464  002F26  D002               	goto	u5020
  4465  002F28                     u5010:
  4466  002F28  B25C               	btfsc	_flags^(0+1280),1,c
  4467  002F2A  D74A               	goto	l4774
  4468  002F2C                     u5020:
  4469                           
  4470                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 678:     if (flags &
      +                           (1 << 4)) {
  4471  002F2C  A85C               	btfss	_flags^(0+1280),4,c
  4472  002F2E  D017               	goto	l4820
  4473                           
  4474                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 679:         --i;
  4475  002F30  0643               	decf	xtoa@i^(0+1280),f,c
  4476  002F32  A0D8               	btfss	status,0,c
  4477  002F34  0644               	decf	(xtoa@i+1)^(0+1280),f,c
  4478                           
  4479                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 680:         dbuf[i]
      +                           = x;
  4480  002F36  0E00               	movlw	low _dbuf
  4481  002F38  2443               	addwf	xtoa@i^(0+1280),w,c
  4482  002F3A  6ED9               	movwf	fsr2l,c
  4483  002F3C  0E06               	movlw	high _dbuf
  4484  002F3E  2044               	addwfc	(xtoa@i+1)^(0+1280),w,c
  4485  002F40  6EDA               	movwf	fsr2h,c
  4486  002F42  0061  F4A8  F4DF   	movff	xtoa@x,indf2
  4487                           
  4488                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 681:         --i;
  4489  002F48  0643               	decf	xtoa@i^(0+1280),f,c
  4490  002F4A  A0D8               	btfss	status,0,c
  4491  002F4C  0644               	decf	(xtoa@i+1)^(0+1280),f,c
  4492                           
  4493                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 682:         dbuf[i]
      +                           = '0';
  4494  002F4E  0E00               	movlw	low _dbuf
  4495  002F50  2443               	addwf	xtoa@i^(0+1280),w,c
  4496  002F52  6ED9               	movwf	fsr2l,c
  4497  002F54  0E06               	movlw	high _dbuf
  4498  002F56  2044               	addwfc	(xtoa@i+1)^(0+1280),w,c
  4499  002F58  6EDA               	movwf	fsr2h,c
  4500  002F5A  0E30               	movlw	48
  4501  002F5C  6EDF               	movwf	indf2,c
  4502  002F5E                     l4820:
  4503                           
  4504                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 686:     return pad(
      +                          fp, &dbuf[i], w);
  4505  002F5E  C520  F515         	movff	xtoa@fp,pad@fp
  4506  002F62  C521  F516         	movff	xtoa@fp+1,pad@fp+1
  4507  002F66  0E00               	movlw	low _dbuf
  4508  002F68  2443               	addwf	xtoa@i^(0+1280),w,c
  4509  002F6A  6E17               	movwf	pad@buf^(0+1280),c
  4510  002F6C  0E06               	movlw	high _dbuf
  4511  002F6E  2044               	addwfc	(xtoa@i+1)^(0+1280),w,c
  4512  002F70  6E18               	movwf	(pad@buf+1)^(0+1280),c
  4513  002F72  C539  F519         	movff	xtoa@w,pad@p
  4514  002F76  C53A  F51A         	movff	xtoa@w+1,pad@p+1
  4515  002F7A  EC23  F01C         	call	_pad	;wreg free
  4516  002F7E  C515  F520         	movff	?_pad,?_xtoa
  4517  002F82  C516  F521         	movff	?_pad+1,?_xtoa+1
  4518  002F86  0012               	return		;funcret
  4519  002F88                     __end_of_xtoa:
  4520                           	callstack 0
  4521                           
  4522 ;; *************** function _toupper *****************
  4523 ;; Defined at:
  4524 ;;		line 4 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/toupper.c"
  4525 ;; Parameters:    Size  Location     Type
  4526 ;;  c               2    8[COMRAM] int 
  4527 ;; Auto vars:     Size  Location     Type
  4528 ;;		None
  4529 ;; Return value:  Size  Location     Type
  4530 ;;                  2    8[COMRAM] int 
  4531 ;; Registers used:
  4532 ;;		wreg, status,2, status,0
  4533 ;; Tracked objects:
  4534 ;;		On entry : 0/6
  4535 ;;		On exit  : 0/0
  4536 ;;		Unchanged: 0/0
  4537 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  4538 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4539 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4540 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4541 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4542 ;;Total ram usage:        8 bytes
  4543 ;; Hardware stack levels used: 1
  4544 ;; Hardware stack levels required when called: 4
  4545 ;; This function calls:
  4546 ;;		_islower
  4547 ;; This function is called by:
  4548 ;;		_xtoa
  4549 ;; This function uses a non-reentrant model
  4550 ;;
  4551                           
  4552                           	psect	text8
  4553  003D50                     __ptext8:
  4554                           	callstack 0
  4555  003D50                     _toupper:
  4556                           	callstack 118
  4557                           
  4558                           ;incstack = 0
  4559  003D50  0E9F               	movlw	159
  4560  003D52  6E0B               	movwf	??_toupper^(0+1280),c
  4561  003D54  0EFF               	movlw	255
  4562  003D56  6E0C               	movwf	(??_toupper+1)^(0+1280),c
  4563  003D58  C509  F50D         	movff	toupper@c,??_toupper+2
  4564  003D5C  C50A  F50E         	movff	toupper@c+1,??_toupper+3
  4565  003D60  500B               	movf	??_toupper^(0+1280),w,c
  4566  003D62  260D               	addwf	(??_toupper+2)^(0+1280),f,c
  4567  003D64  500C               	movf	(??_toupper+1)^(0+1280),w,c
  4568  003D66  220E               	addwfc	(??_toupper+3)^(0+1280),f,c
  4569  003D68  500E               	movf	(??_toupper+3)^(0+1280),w,c
  4570  003D6A  E106               	bnz	u4570
  4571  003D6C  0E1A               	movlw	26
  4572  003D6E  5C0D               	subwf	(??_toupper+2)^(0+1280),w,c
  4573  003D70  B0D8               	btfsc	status,0,c
  4574  003D72  D002               	goto	u4570
  4575  003D74  0E01               	movlw	1
  4576  003D76  D001               	goto	u4580
  4577  003D78                     u4570:
  4578  003D78  0E00               	movlw	0
  4579  003D7A                     u4580:
  4580  003D7A  6E0F               	movwf	_toupper$2594^(0+1280),c
  4581  003D7C  6A10               	clrf	(_toupper$2594+1)^(0+1280),c
  4582  003D7E  500F               	movf	_toupper$2594^(0+1280),w,c
  4583  003D80  1010               	iorwf	(_toupper$2594+1)^(0+1280),w,c
  4584  003D82  B4D8               	btfsc	status,2,c
  4585  003D84  D005               	goto	l2036
  4586  003D86  0E5F               	movlw	95
  4587  003D88  1409               	andwf	toupper@c^(0+1280),w,c
  4588  003D8A  6E09               	movwf	?_toupper^(0+1280),c
  4589  003D8C  6A0A               	clrf	(?_toupper+1)^(0+1280),c
  4590  003D8E  0012               	return	
  4591  003D90                     l2036:
  4592  003D90  C509  F509         	movff	toupper@c,?_toupper
  4593  003D94  C50A  F50A         	movff	toupper@c+1,?_toupper+1
  4594  003D98  0012               	return		;funcret
  4595  003D9A                     __end_of_toupper:
  4596                           	callstack 0
  4597                           
  4598 ;; *************** function _islower *****************
  4599 ;; Defined at:
  4600 ;;		line 5 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/islower.c"
  4601 ;; Parameters:    Size  Location     Type
  4602 ;;  c               2    2[COMRAM] int 
  4603 ;; Auto vars:     Size  Location     Type
  4604 ;;		None
  4605 ;; Return value:  Size  Location     Type
  4606 ;;                  2    2[COMRAM] int 
  4607 ;; Registers used:
  4608 ;;		wreg, status,2, status,0
  4609 ;; Tracked objects:
  4610 ;;		On entry : 0/0
  4611 ;;		On exit  : 0/0
  4612 ;;		Unchanged: 0/0
  4613 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  4614 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4616 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4617 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4618 ;;Total ram usage:        6 bytes
  4619 ;; Hardware stack levels used: 1
  4620 ;; Hardware stack levels required when called: 3
  4621 ;; This function calls:
  4622 ;;		Nothing
  4623 ;; This function is called by:
  4624 ;;		_toupper
  4625 ;; This function uses a non-reentrant model
  4626 ;;
  4627                           
  4628                           	psect	text9
  4629  003E82                     __ptext9:
  4630                           	callstack 0
  4631  003E82                     _islower:
  4632                           	callstack 118
  4633                           
  4634                           ;incstack = 0
  4635  003E82  0E9F               	movlw	159
  4636  003E84  6E05               	movwf	??_islower^(0+1280),c
  4637  003E86  0EFF               	movlw	255
  4638  003E88  6E06               	movwf	(??_islower+1)^(0+1280),c
  4639  003E8A  C503  F507         	movff	islower@c,??_islower+2
  4640  003E8E  C504  F508         	movff	islower@c+1,??_islower+3
  4641  003E92  5005               	movf	??_islower^(0+1280),w,c
  4642  003E94  2607               	addwf	(??_islower+2)^(0+1280),f,c
  4643  003E96  5006               	movf	(??_islower+1)^(0+1280),w,c
  4644  003E98  2208               	addwfc	(??_islower+3)^(0+1280),f,c
  4645  003E9A  5008               	movf	(??_islower+3)^(0+1280),w,c
  4646  003E9C  E106               	bnz	u4260
  4647  003E9E  0E1A               	movlw	26
  4648  003EA0  5C07               	subwf	(??_islower+2)^(0+1280),w,c
  4649  003EA2  B0D8               	btfsc	status,0,c
  4650  003EA4  D002               	goto	u4260
  4651  003EA6  0E01               	movlw	1
  4652  003EA8  D001               	goto	u4270
  4653  003EAA                     u4260:
  4654  003EAA  0E00               	movlw	0
  4655  003EAC                     u4270:
  4656  003EAC  6E03               	movwf	?_islower^(0+1280),c
  4657  003EAE  6A04               	clrf	(?_islower+1)^(0+1280),c
  4658  003EB0  0012               	return		;funcret
  4659  003EB2                     __end_of_islower:
  4660                           	callstack 0
  4661                           
  4662 ;; *************** function _isupper *****************
  4663 ;; Defined at:
  4664 ;;		line 5 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/isupper.c"
  4665 ;; Parameters:    Size  Location     Type
  4666 ;;  c               2    2[COMRAM] int 
  4667 ;; Auto vars:     Size  Location     Type
  4668 ;;		None
  4669 ;; Return value:  Size  Location     Type
  4670 ;;                  2    2[COMRAM] int 
  4671 ;; Registers used:
  4672 ;;		wreg, status,2, status,0
  4673 ;; Tracked objects:
  4674 ;;		On entry : 0/0
  4675 ;;		On exit  : 0/0
  4676 ;;		Unchanged: 0/0
  4677 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  4678 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4680 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4681 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4682 ;;Total ram usage:        6 bytes
  4683 ;; Hardware stack levels used: 1
  4684 ;; Hardware stack levels required when called: 3
  4685 ;; This function calls:
  4686 ;;		Nothing
  4687 ;; This function is called by:
  4688 ;;		_xtoa
  4689 ;; This function uses a non-reentrant model
  4690 ;;
  4691                           
  4692                           	psect	text10
  4693  003EB2                     __ptext10:
  4694                           	callstack 0
  4695  003EB2                     _isupper:
  4696                           	callstack 119
  4697                           
  4698                           ;incstack = 0
  4699  003EB2  0EBF               	movlw	191
  4700  003EB4  6E05               	movwf	??_isupper^(0+1280),c
  4701  003EB6  0EFF               	movlw	255
  4702  003EB8  6E06               	movwf	(??_isupper+1)^(0+1280),c
  4703  003EBA  C503  F507         	movff	isupper@c,??_isupper+2
  4704  003EBE  C504  F508         	movff	isupper@c+1,??_isupper+3
  4705  003EC2  5005               	movf	??_isupper^(0+1280),w,c
  4706  003EC4  2607               	addwf	(??_isupper+2)^(0+1280),f,c
  4707  003EC6  5006               	movf	(??_isupper+1)^(0+1280),w,c
  4708  003EC8  2208               	addwfc	(??_isupper+3)^(0+1280),f,c
  4709  003ECA  5008               	movf	(??_isupper+3)^(0+1280),w,c
  4710  003ECC  E106               	bnz	u4530
  4711  003ECE  0E1A               	movlw	26
  4712  003ED0  5C07               	subwf	(??_isupper+2)^(0+1280),w,c
  4713  003ED2  B0D8               	btfsc	status,0,c
  4714  003ED4  D002               	goto	u4530
  4715  003ED6  0E01               	movlw	1
  4716  003ED8  D001               	goto	u4540
  4717  003EDA                     u4530:
  4718  003EDA  0E00               	movlw	0
  4719  003EDC                     u4540:
  4720  003EDC  6E03               	movwf	?_isupper^(0+1280),c
  4721  003EDE  6A04               	clrf	(?_isupper+1)^(0+1280),c
  4722  003EE0  0012               	return		;funcret
  4723  003EE2                     __end_of_isupper:
  4724                           	callstack 0
  4725                           
  4726 ;; *************** function _isalpha *****************
  4727 ;; Defined at:
  4728 ;;		line 5 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/isalpha.c"
  4729 ;; Parameters:    Size  Location     Type
  4730 ;;  c               2    2[COMRAM] int 
  4731 ;; Auto vars:     Size  Location     Type
  4732 ;;		None
  4733 ;; Return value:  Size  Location     Type
  4734 ;;                  2    2[COMRAM] int 
  4735 ;; Registers used:
  4736 ;;		wreg, status,2, status,0
  4737 ;; Tracked objects:
  4738 ;;		On entry : 0/0
  4739 ;;		On exit  : 0/0
  4740 ;;		Unchanged: 0/0
  4741 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  4742 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4744 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4745 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4746 ;;Total ram usage:        6 bytes
  4747 ;; Hardware stack levels used: 1
  4748 ;; Hardware stack levels required when called: 3
  4749 ;; This function calls:
  4750 ;;		Nothing
  4751 ;; This function is called by:
  4752 ;;		_xtoa
  4753 ;; This function uses a non-reentrant model
  4754 ;;
  4755                           
  4756                           	psect	text11
  4757  003E1C                     __ptext11:
  4758                           	callstack 0
  4759  003E1C                     _isalpha:
  4760                           	callstack 119
  4761                           
  4762                           ;incstack = 0
  4763  003E1C  0E9F               	movlw	159
  4764  003E1E  6E05               	movwf	??_isalpha^(0+1280),c
  4765  003E20  0EFF               	movlw	255
  4766  003E22  6E06               	movwf	(??_isalpha+1)^(0+1280),c
  4767  003E24  0E20               	movlw	32
  4768  003E26  1003               	iorwf	isalpha@c^(0+1280),w,c
  4769  003E28  6E07               	movwf	(??_isalpha+2)^(0+1280),c
  4770  003E2A  0E00               	movlw	0
  4771  003E2C  1004               	iorwf	(isalpha@c+1)^(0+1280),w,c
  4772  003E2E  6E08               	movwf	(??_isalpha+3)^(0+1280),c
  4773  003E30  5005               	movf	??_isalpha^(0+1280),w,c
  4774  003E32  2607               	addwf	(??_isalpha+2)^(0+1280),f,c
  4775  003E34  5006               	movf	(??_isalpha+1)^(0+1280),w,c
  4776  003E36  2208               	addwfc	(??_isalpha+3)^(0+1280),f,c
  4777  003E38  5008               	movf	(??_isalpha+3)^(0+1280),w,c
  4778  003E3A  E106               	bnz	u4550
  4779  003E3C  0E1A               	movlw	26
  4780  003E3E  5C07               	subwf	(??_isalpha+2)^(0+1280),w,c
  4781  003E40  B0D8               	btfsc	status,0,c
  4782  003E42  D002               	goto	u4550
  4783  003E44  0E01               	movlw	1
  4784  003E46  D001               	goto	u4560
  4785  003E48                     u4550:
  4786  003E48  0E00               	movlw	0
  4787  003E4A                     u4560:
  4788  003E4A  6E03               	movwf	?_isalpha^(0+1280),c
  4789  003E4C  6A04               	clrf	(?_isalpha+1)^(0+1280),c
  4790  003E4E  0012               	return		;funcret
  4791  003E50                     __end_of_isalpha:
  4792                           	callstack 0
  4793                           
  4794 ;; *************** function _utoa *****************
  4795 ;; Defined at:
  4796 ;;		line 615 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c"
  4797 ;; Parameters:    Size  Location     Type
  4798 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  4799 ;;		 -> NULL(0), 
  4800 ;;  d               8   33[COMRAM] unsigned long long 
  4801 ;; Auto vars:     Size  Location     Type
  4802 ;;  n               8   53[COMRAM] unsigned long long 
  4803 ;;  i               2   61[COMRAM] int 
  4804 ;;  w               2   51[COMRAM] int 
  4805 ;;  p               2   49[COMRAM] int 
  4806 ;; Return value:  Size  Location     Type
  4807 ;;                  2   31[COMRAM] int 
  4808 ;; Registers used:
  4809 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4810 ;; Tracked objects:
  4811 ;;		On entry : 3F/5
  4812 ;;		On exit  : 0/0
  4813 ;;		Unchanged: 0/0
  4814 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  4815 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4816 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4817 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4818 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4819 ;;Total ram usage:       32 bytes
  4820 ;; Hardware stack levels used: 1
  4821 ;; Hardware stack levels required when called: 8
  4822 ;; This function calls:
  4823 ;;		___lodiv
  4824 ;;		___lomod
  4825 ;;		_pad
  4826 ;; This function is called by:
  4827 ;;		_vfpfcnvrt
  4828 ;; This function uses a non-reentrant model
  4829 ;;
  4830                           
  4831                           	psect	text12
  4832  002F88                     __ptext12:
  4833                           	callstack 0
  4834  002F88                     _utoa:
  4835                           	callstack 115
  4836                           
  4837                           ; BSR set to: 5
  4838                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 615: static int utoa
      +                          (FILE *fp, unsigned long long d);/Applications/microchip/xc8/v2.32/pic/sources/c99/commo
      +                          n/doprnt.c: 616: {;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 61
      +                          7:     int i, p, w;;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 6
      +                          18:     unsigned long long n;;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/d
      +                          oprnt.c: 621:     if (!(prec < 0)) {
  4839                           
  4840                           ;incstack = 0
  4841  002F88  AFCE               	btfss	(_prec+1)& (0+255),7,b
  4842                           
  4843                           ; BSR set to: 5
  4844                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 622:         flags &
      +                          = ~(1 << 1);
  4845  002F8A  925C               	bcf	_flags^(0+1280),1,c
  4846                           
  4847                           ; BSR set to: 5
  4848                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 624:     p = (0 < pr
      +                          ec) ? prec : 1;
  4849  002F8C  BFCE               	btfsc	(_prec+1)& (0+255),7,b
  4850  002F8E  D005               	goto	u4810
  4851  002F90  51CE               	movf	(_prec+1)& (0+255),w,b
  4852  002F92  E108               	bnz	l1911
  4853  002F94  05CD               	decf	_prec& (0+255),w,b
  4854  002F96  B0D8               	btfsc	status,0,c
  4855  002F98  D005               	goto	l1911
  4856  002F9A                     u4810:
  4857                           
  4858                           ; BSR set to: 5
  4859  002F9A  0E00               	movlw	0
  4860  002F9C  6E33               	movwf	(utoa@p+1)^(0+1280),c
  4861  002F9E  0E01               	movlw	1
  4862  002FA0  6E32               	movwf	utoa@p^(0+1280),c
  4863  002FA2  D004               	goto	l1913
  4864  002FA4                     l1911:
  4865                           
  4866                           ; BSR set to: 5
  4867  002FA4  C5CD  F532         	movff	_prec,utoa@p
  4868  002FA8  C5CE  F533         	movff	_prec+1,utoa@p+1
  4869  002FAC                     l1913:
  4870                           
  4871                           ; BSR set to: 5
  4872                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 625:     w = width;
  4873  002FAC  C5CB  F534         	movff	_width,utoa@w
  4874  002FB0  C5CC  F535         	movff	_width+1,utoa@w+1
  4875                           
  4876                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 628:     n = d;
  4877  002FB4  C522  F536         	movff	utoa@d,utoa@n
  4878  002FB8  C523  F537         	movff	utoa@d+1,utoa@n+1
  4879  002FBC  C524  F538         	movff	utoa@d+2,utoa@n+2
  4880  002FC0  C525  F539         	movff	utoa@d+3,utoa@n+3
  4881  002FC4  C526  F53A         	movff	utoa@d+4,utoa@n+4
  4882  002FC8  C527  F53B         	movff	utoa@d+5,utoa@n+5
  4883  002FCC  C528  F53C         	movff	utoa@d+6,utoa@n+6
  4884  002FD0  C529  F53D         	movff	utoa@d+7,utoa@n+7
  4885                           
  4886                           ; BSR set to: 5
  4887                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 629:     i = sizeof(
      +                          dbuf) - 1;
  4888  002FD4  0E00               	movlw	0
  4889  002FD6  6E3F               	movwf	(utoa@i+1)^(0+1280),c
  4890  002FD8  0E1F               	movlw	31
  4891  002FDA  6E3E               	movwf	utoa@i^(0+1280),c
  4892                           
  4893                           ; BSR set to: 5
  4894                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 630:     dbuf[i] = '
      +                          \0';
  4895  002FDC  0E00               	movlw	0
  4896  002FDE  0106               	movlb	6	; () banked
  4897  002FE0  6F1F               	movwf	(_dbuf+31)& (0+255),b
  4898                           
  4899                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 631:     while (i &&
      +                           (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4900  002FE2  D076               	goto	l4744
  4901  002FE4                     l4734:
  4902                           
  4903                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 632:         --i;
  4904  002FE4  063E               	decf	utoa@i^(0+1280),f,c
  4905  002FE6  A0D8               	btfss	status,0,c
  4906  002FE8  063F               	decf	(utoa@i+1)^(0+1280),f,c
  4907                           
  4908                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 633:         dbuf[i]
      +                           = '0' + (n % 10);
  4909  002FEA  0E00               	movlw	low _dbuf
  4910  002FEC  243E               	addwf	utoa@i^(0+1280),w,c
  4911  002FEE  6ED9               	movwf	fsr2l,c
  4912  002FF0  0E06               	movlw	high _dbuf
  4913  002FF2  203F               	addwfc	(utoa@i+1)^(0+1280),w,c
  4914  002FF4  6EDA               	movwf	fsr2h,c
  4915  002FF6  C536  F503         	movff	utoa@n,___lomod@dividend
  4916  002FFA  C537  F504         	movff	utoa@n+1,___lomod@dividend+1
  4917  002FFE  C538  F505         	movff	utoa@n+2,___lomod@dividend+2
  4918  003002  C539  F506         	movff	utoa@n+3,___lomod@dividend+3
  4919  003006  C53A  F507         	movff	utoa@n+4,___lomod@dividend+4
  4920  00300A  C53B  F508         	movff	utoa@n+5,___lomod@dividend+5
  4921  00300E  C53C  F509         	movff	utoa@n+6,___lomod@dividend+6
  4922  003012  C53D  F50A         	movff	utoa@n+7,___lomod@dividend+7
  4923  003016  0E0A               	movlw	10
  4924  003018  6E0B               	movwf	___lomod@divisor^(0+1280),c
  4925  00301A  0E00               	movlw	0
  4926  00301C  6E0C               	movwf	(___lomod@divisor+1)^(0+1280),c
  4927  00301E  0E00               	movlw	0
  4928  003020  6E0D               	movwf	(___lomod@divisor+2)^(0+1280),c
  4929  003022  0E00               	movlw	0
  4930  003024  6E0E               	movwf	(___lomod@divisor+3)^(0+1280),c
  4931  003026  0E00               	movlw	0
  4932  003028  6E0F               	movwf	(___lomod@divisor+4)^(0+1280),c
  4933  00302A  0E00               	movlw	0
  4934  00302C  6E10               	movwf	(___lomod@divisor+5)^(0+1280),c
  4935  00302E  0E00               	movlw	0
  4936  003030  6E11               	movwf	(___lomod@divisor+6)^(0+1280),c
  4937  003032  0E00               	movlw	0
  4938  003034  6E12               	movwf	(___lomod@divisor+7)^(0+1280),c
  4939  003036  EC7F  F01B         	call	___lomod	;wreg free
  4940  00303A  C503  F52A         	movff	?___lomod,??_utoa
  4941  00303E  C504  F52B         	movff	?___lomod+1,??_utoa+1
  4942  003042  C505  F52C         	movff	?___lomod+2,??_utoa+2
  4943  003046  C506  F52D         	movff	?___lomod+3,??_utoa+3
  4944  00304A  C507  F52E         	movff	?___lomod+4,??_utoa+4
  4945  00304E  C508  F52F         	movff	?___lomod+5,??_utoa+5
  4946  003052  C509  F530         	movff	?___lomod+6,??_utoa+6
  4947  003056  C50A  F531         	movff	?___lomod+7,??_utoa+7
  4948  00305A  502A               	movf	??_utoa^(0+1280),w,c
  4949  00305C  0F30               	addlw	48
  4950  00305E  6EDF               	movwf	indf2,c
  4951                           
  4952                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 634:         --p;
  4953  003060  0632               	decf	utoa@p^(0+1280),f,c
  4954  003062  A0D8               	btfss	status,0,c
  4955  003064  0633               	decf	(utoa@p+1)^(0+1280),f,c
  4956                           
  4957                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 635:         --w;
  4958  003066  0634               	decf	utoa@w^(0+1280),f,c
  4959  003068  A0D8               	btfss	status,0,c
  4960  00306A  0635               	decf	(utoa@w+1)^(0+1280),f,c
  4961                           
  4962                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 636:         n = n /
      +                           10;
  4963  00306C  C536  F503         	movff	utoa@n,___lodiv@dividend
  4964  003070  C537  F504         	movff	utoa@n+1,___lodiv@dividend+1
  4965  003074  C538  F505         	movff	utoa@n+2,___lodiv@dividend+2
  4966  003078  C539  F506         	movff	utoa@n+3,___lodiv@dividend+3
  4967  00307C  C53A  F507         	movff	utoa@n+4,___lodiv@dividend+4
  4968  003080  C53B  F508         	movff	utoa@n+5,___lodiv@dividend+5
  4969  003084  C53C  F509         	movff	utoa@n+6,___lodiv@dividend+6
  4970  003088  C53D  F50A         	movff	utoa@n+7,___lodiv@dividend+7
  4971  00308C  0E0A               	movlw	10
  4972  00308E  6E0B               	movwf	___lodiv@divisor^(0+1280),c
  4973  003090  0E00               	movlw	0
  4974  003092  6E0C               	movwf	(___lodiv@divisor+1)^(0+1280),c
  4975  003094  0E00               	movlw	0
  4976  003096  6E0D               	movwf	(___lodiv@divisor+2)^(0+1280),c
  4977  003098  0E00               	movlw	0
  4978  00309A  6E0E               	movwf	(___lodiv@divisor+3)^(0+1280),c
  4979  00309C  0E00               	movlw	0
  4980  00309E  6E0F               	movwf	(___lodiv@divisor+4)^(0+1280),c
  4981  0030A0  0E00               	movlw	0
  4982  0030A2  6E10               	movwf	(___lodiv@divisor+5)^(0+1280),c
  4983  0030A4  0E00               	movlw	0
  4984  0030A6  6E11               	movwf	(___lodiv@divisor+6)^(0+1280),c
  4985  0030A8  0E00               	movlw	0
  4986  0030AA  6E12               	movwf	(___lodiv@divisor+7)^(0+1280),c
  4987  0030AC  ECBB  F01A         	call	___lodiv	;wreg free
  4988  0030B0  C503  F536         	movff	?___lodiv,utoa@n
  4989  0030B4  C504  F537         	movff	?___lodiv+1,utoa@n+1
  4990  0030B8  C505  F538         	movff	?___lodiv+2,utoa@n+2
  4991  0030BC  C506  F539         	movff	?___lodiv+3,utoa@n+3
  4992  0030C0  C507  F53A         	movff	?___lodiv+4,utoa@n+4
  4993  0030C4  C508  F53B         	movff	?___lodiv+5,utoa@n+5
  4994  0030C8  C509  F53C         	movff	?___lodiv+6,utoa@n+6
  4995  0030CC  C50A  F53D         	movff	?___lodiv+7,utoa@n+7
  4996  0030D0                     l4744:
  4997                           
  4998                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 631:     while (i &&
      +                           (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4999  0030D0  503E               	movf	utoa@i^(0+1280),w,c
  5000  0030D2  103F               	iorwf	(utoa@i+1)^(0+1280),w,c
  5001  0030D4  B4D8               	btfsc	status,2,c
  5002  0030D6  D01A               	goto	u4860
  5003  0030D8  5036               	movf	utoa@n^(0+1280),w,c
  5004  0030DA  1037               	iorwf	(utoa@n+1)^(0+1280),w,c
  5005  0030DC  1038               	iorwf	(utoa@n+2)^(0+1280),w,c
  5006  0030DE  1039               	iorwf	(utoa@n+3)^(0+1280),w,c
  5007  0030E0  103A               	iorwf	(utoa@n+4)^(0+1280),w,c
  5008  0030E2  103B               	iorwf	(utoa@n+5)^(0+1280),w,c
  5009  0030E4  103C               	iorwf	(utoa@n+6)^(0+1280),w,c
  5010  0030E6  103D               	iorwf	(utoa@n+7)^(0+1280),w,c
  5011  0030E8  A4D8               	btfss	status,2,c
  5012  0030EA  D77C               	goto	l4734
  5013  0030EC  BE33               	btfsc	(utoa@p+1)^(0+1280),7,c
  5014  0030EE  D005               	goto	u4840
  5015  0030F0  5033               	movf	(utoa@p+1)^(0+1280),w,c
  5016  0030F2  E102               	bnz	u4841
  5017  0030F4  0432               	decf	utoa@p^(0+1280),w,c
  5018  0030F6  B0D8               	btfsc	status,0,c
  5019  0030F8                     u4841:
  5020  0030F8  D775               	goto	l4734
  5021  0030FA                     u4840:
  5022  0030FA  BE35               	btfsc	(utoa@w+1)^(0+1280),7,c
  5023  0030FC  D007               	goto	u4860
  5024  0030FE  5035               	movf	(utoa@w+1)^(0+1280),w,c
  5025  003100  E103               	bnz	u4850
  5026  003102  0434               	decf	utoa@w^(0+1280),w,c
  5027  003104  A0D8               	btfss	status,0,c
  5028  003106  D002               	goto	u4860
  5029  003108                     u4850:
  5030  003108  B25C               	btfsc	_flags^(0+1280),1,c
  5031  00310A  D76C               	goto	l4734
  5032  00310C                     u4860:
  5033                           
  5034                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 640:     return pad(
      +                          fp, &dbuf[i], w);
  5035  00310C  C520  F515         	movff	utoa@fp,pad@fp
  5036  003110  C521  F516         	movff	utoa@fp+1,pad@fp+1
  5037  003114  0E00               	movlw	low _dbuf
  5038  003116  243E               	addwf	utoa@i^(0+1280),w,c
  5039  003118  6E17               	movwf	pad@buf^(0+1280),c
  5040  00311A  0E06               	movlw	high _dbuf
  5041  00311C  203F               	addwfc	(utoa@i+1)^(0+1280),w,c
  5042  00311E  6E18               	movwf	(pad@buf+1)^(0+1280),c
  5043  003120  C534  F519         	movff	utoa@w,pad@p
  5044  003124  C535  F51A         	movff	utoa@w+1,pad@p+1
  5045  003128  EC23  F01C         	call	_pad	;wreg free
  5046  00312C  C515  F520         	movff	?_pad,?_utoa
  5047  003130  C516  F521         	movff	?_pad+1,?_utoa+1
  5048  003134  0012               	return		;funcret
  5049  003136                     __end_of_utoa:
  5050                           	callstack 0
  5051                           
  5052 ;; *************** function ___lomod *****************
  5053 ;; Defined at:
  5054 ;;		line 9 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/lomod.c"
  5055 ;; Parameters:    Size  Location     Type
  5056 ;;  dividend        8    2[COMRAM] unsigned long long 
  5057 ;;  divisor         8   10[COMRAM] unsigned long long 
  5058 ;; Auto vars:     Size  Location     Type
  5059 ;;  counter         1   18[COMRAM] unsigned char 
  5060 ;; Return value:  Size  Location     Type
  5061 ;;                  8    2[COMRAM] unsigned long long 
  5062 ;; Registers used:
  5063 ;;		wreg, status,2, status,0
  5064 ;; Tracked objects:
  5065 ;;		On entry : 0/6
  5066 ;;		On exit  : 0/0
  5067 ;;		Unchanged: 0/0
  5068 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  5069 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5070 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5072 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5073 ;;Total ram usage:       17 bytes
  5074 ;; Hardware stack levels used: 1
  5075 ;; Hardware stack levels required when called: 3
  5076 ;; This function calls:
  5077 ;;		Nothing
  5078 ;; This function is called by:
  5079 ;;		_utoa
  5080 ;; This function uses a non-reentrant model
  5081 ;;
  5082                           
  5083                           	psect	text13
  5084  0036FE                     __ptext13:
  5085                           	callstack 0
  5086  0036FE                     ___lomod:
  5087                           	callstack 119
  5088                           
  5089                           ;incstack = 0
  5090  0036FE  500B               	movf	___lomod@divisor^(0+1280),w,c
  5091  003700  100C               	iorwf	(___lomod@divisor+1)^(0+1280),w,c
  5092  003702  100D               	iorwf	(___lomod@divisor+2)^(0+1280),w,c
  5093  003704  100E               	iorwf	(___lomod@divisor+3)^(0+1280),w,c
  5094  003706  100F               	iorwf	(___lomod@divisor+4)^(0+1280),w,c
  5095  003708  1010               	iorwf	(___lomod@divisor+5)^(0+1280),w,c
  5096  00370A  1011               	iorwf	(___lomod@divisor+6)^(0+1280),w,c
  5097  00370C  1012               	iorwf	(___lomod@divisor+7)^(0+1280),w,c
  5098  00370E  B4D8               	btfsc	status,2,c
  5099  003710  D03C               	goto	l1594
  5100  003712  0E01               	movlw	1
  5101  003714  6E13               	movwf	___lomod@counter^(0+1280),c
  5102  003716  D00A               	goto	l4578
  5103  003718                     l4576:
  5104  003718  90D8               	bcf	status,0,c
  5105  00371A  360B               	rlcf	___lomod@divisor^(0+1280),f,c
  5106  00371C  360C               	rlcf	(___lomod@divisor+1)^(0+1280),f,c
  5107  00371E  360D               	rlcf	(___lomod@divisor+2)^(0+1280),f,c
  5108  003720  360E               	rlcf	(___lomod@divisor+3)^(0+1280),f,c
  5109  003722  360F               	rlcf	(___lomod@divisor+4)^(0+1280),f,c
  5110  003724  3610               	rlcf	(___lomod@divisor+5)^(0+1280),f,c
  5111  003726  3611               	rlcf	(___lomod@divisor+6)^(0+1280),f,c
  5112  003728  3612               	rlcf	(___lomod@divisor+7)^(0+1280),f,c
  5113  00372A  2A13               	incf	___lomod@counter^(0+1280),f,c
  5114  00372C                     l4578:
  5115  00372C  AE12               	btfss	(___lomod@divisor+7)^(0+1280),7,c
  5116  00372E  D7F4               	goto	l4576
  5117  003730                     u4460:
  5118  003730  500B               	movf	___lomod@divisor^(0+1280),w,c
  5119  003732  5C03               	subwf	___lomod@dividend^(0+1280),w,c
  5120  003734  500C               	movf	(___lomod@divisor+1)^(0+1280),w,c
  5121  003736  5804               	subwfb	(___lomod@dividend+1)^(0+1280),w,c
  5122  003738  500D               	movf	(___lomod@divisor+2)^(0+1280),w,c
  5123  00373A  5805               	subwfb	(___lomod@dividend+2)^(0+1280),w,c
  5124  00373C  500E               	movf	(___lomod@divisor+3)^(0+1280),w,c
  5125  00373E  5806               	subwfb	(___lomod@dividend+3)^(0+1280),w,c
  5126  003740  500F               	movf	(___lomod@divisor+4)^(0+1280),w,c
  5127  003742  5807               	subwfb	(___lomod@dividend+4)^(0+1280),w,c
  5128  003744  5010               	movf	(___lomod@divisor+5)^(0+1280),w,c
  5129  003746  5808               	subwfb	(___lomod@dividend+5)^(0+1280),w,c
  5130  003748  5011               	movf	(___lomod@divisor+6)^(0+1280),w,c
  5131  00374A  5809               	subwfb	(___lomod@dividend+6)^(0+1280),w,c
  5132  00374C  5012               	movf	(___lomod@divisor+7)^(0+1280),w,c
  5133  00374E  580A               	subwfb	(___lomod@dividend+7)^(0+1280),w,c
  5134  003750  A0D8               	btfss	status,0,c
  5135  003752  D010               	goto	l4584
  5136  003754  500B               	movf	___lomod@divisor^(0+1280),w,c
  5137  003756  5E03               	subwf	___lomod@dividend^(0+1280),f,c
  5138  003758  500C               	movf	(___lomod@divisor+1)^(0+1280),w,c
  5139  00375A  5A04               	subwfb	(___lomod@dividend+1)^(0+1280),f,c
  5140  00375C  500D               	movf	(___lomod@divisor+2)^(0+1280),w,c
  5141  00375E  5A05               	subwfb	(___lomod@dividend+2)^(0+1280),f,c
  5142  003760  500E               	movf	(___lomod@divisor+3)^(0+1280),w,c
  5143  003762  5A06               	subwfb	(___lomod@dividend+3)^(0+1280),f,c
  5144  003764  500F               	movf	(___lomod@divisor+4)^(0+1280),w,c
  5145  003766  5A07               	subwfb	(___lomod@dividend+4)^(0+1280),f,c
  5146  003768  5010               	movf	(___lomod@divisor+5)^(0+1280),w,c
  5147  00376A  5A08               	subwfb	(___lomod@dividend+5)^(0+1280),f,c
  5148  00376C  5011               	movf	(___lomod@divisor+6)^(0+1280),w,c
  5149  00376E  5A09               	subwfb	(___lomod@dividend+6)^(0+1280),f,c
  5150  003770  5012               	movf	(___lomod@divisor+7)^(0+1280),w,c
  5151  003772  5A0A               	subwfb	(___lomod@dividend+7)^(0+1280),f,c
  5152  003774                     l4584:
  5153  003774  90D8               	bcf	status,0,c
  5154  003776  3212               	rrcf	(___lomod@divisor+7)^(0+1280),f,c
  5155  003778  3211               	rrcf	(___lomod@divisor+6)^(0+1280),f,c
  5156  00377A  3210               	rrcf	(___lomod@divisor+5)^(0+1280),f,c
  5157  00377C  320F               	rrcf	(___lomod@divisor+4)^(0+1280),f,c
  5158  00377E  320E               	rrcf	(___lomod@divisor+3)^(0+1280),f,c
  5159  003780  320D               	rrcf	(___lomod@divisor+2)^(0+1280),f,c
  5160  003782  320C               	rrcf	(___lomod@divisor+1)^(0+1280),f,c
  5161  003784  320B               	rrcf	___lomod@divisor^(0+1280),f,c
  5162  003786  2E13               	decfsz	___lomod@counter^(0+1280),f,c
  5163  003788  D7D3               	goto	u4460
  5164  00378A                     l1594:
  5165  00378A  C503  F503         	movff	___lomod@dividend,?___lomod
  5166  00378E  C504  F504         	movff	___lomod@dividend+1,?___lomod+1
  5167  003792  C505  F505         	movff	___lomod@dividend+2,?___lomod+2
  5168  003796  C506  F506         	movff	___lomod@dividend+3,?___lomod+3
  5169  00379A  C507  F507         	movff	___lomod@dividend+4,?___lomod+4
  5170  00379E  C508  F508         	movff	___lomod@dividend+5,?___lomod+5
  5171  0037A2  C509  F509         	movff	___lomod@dividend+6,?___lomod+6
  5172  0037A6  C50A  F50A         	movff	___lomod@dividend+7,?___lomod+7
  5173  0037AA  0012               	return		;funcret
  5174  0037AC                     __end_of___lomod:
  5175                           	callstack 0
  5176                           
  5177 ;; *************** function ___lodiv *****************
  5178 ;; Defined at:
  5179 ;;		line 9 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/lodiv.c"
  5180 ;; Parameters:    Size  Location     Type
  5181 ;;  dividend        8    2[COMRAM] unsigned long long 
  5182 ;;  divisor         8   10[COMRAM] unsigned long long 
  5183 ;; Auto vars:     Size  Location     Type
  5184 ;;  quotient        8   18[COMRAM] unsigned long long 
  5185 ;;  counter         1   26[COMRAM] unsigned char 
  5186 ;; Return value:  Size  Location     Type
  5187 ;;                  8    2[COMRAM] unsigned long long 
  5188 ;; Registers used:
  5189 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5190 ;; Tracked objects:
  5191 ;;		On entry : 0/6
  5192 ;;		On exit  : 0/0
  5193 ;;		Unchanged: 0/0
  5194 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  5195 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5196 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5198 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5199 ;;Total ram usage:       25 bytes
  5200 ;; Hardware stack levels used: 1
  5201 ;; Hardware stack levels required when called: 3
  5202 ;; This function calls:
  5203 ;;		Nothing
  5204 ;; This function is called by:
  5205 ;;		_utoa
  5206 ;; This function uses a non-reentrant model
  5207 ;;
  5208                           
  5209                           	psect	text14
  5210  003576                     __ptext14:
  5211                           	callstack 0
  5212  003576                     ___lodiv:
  5213                           	callstack 119
  5214                           
  5215                           ;incstack = 0
  5216  003576  EE21  F113         	lfsr	2,___lodiv@quotient
  5217  00357A  0E07               	movlw	7
  5218  00357C                     u4411:
  5219  00357C  6ADE               	clrf	postinc2,c
  5220  00357E  06E8               	decf	wreg,f,c
  5221  003580  E2FD               	bc	u4411
  5222  003582  500B               	movf	___lodiv@divisor^(0+1280),w,c
  5223  003584  100C               	iorwf	(___lodiv@divisor+1)^(0+1280),w,c
  5224  003586  100D               	iorwf	(___lodiv@divisor+2)^(0+1280),w,c
  5225  003588  100E               	iorwf	(___lodiv@divisor+3)^(0+1280),w,c
  5226  00358A  100F               	iorwf	(___lodiv@divisor+4)^(0+1280),w,c
  5227  00358C  1010               	iorwf	(___lodiv@divisor+5)^(0+1280),w,c
  5228  00358E  1011               	iorwf	(___lodiv@divisor+6)^(0+1280),w,c
  5229  003590  1012               	iorwf	(___lodiv@divisor+7)^(0+1280),w,c
  5230  003592  B4D8               	btfsc	status,2,c
  5231  003594  D046               	goto	l1584
  5232  003596  0E01               	movlw	1
  5233  003598  6E1B               	movwf	___lodiv@counter^(0+1280),c
  5234  00359A  D00A               	goto	l4558
  5235  00359C                     l4556:
  5236  00359C  90D8               	bcf	status,0,c
  5237  00359E  360B               	rlcf	___lodiv@divisor^(0+1280),f,c
  5238  0035A0  360C               	rlcf	(___lodiv@divisor+1)^(0+1280),f,c
  5239  0035A2  360D               	rlcf	(___lodiv@divisor+2)^(0+1280),f,c
  5240  0035A4  360E               	rlcf	(___lodiv@divisor+3)^(0+1280),f,c
  5241  0035A6  360F               	rlcf	(___lodiv@divisor+4)^(0+1280),f,c
  5242  0035A8  3610               	rlcf	(___lodiv@divisor+5)^(0+1280),f,c
  5243  0035AA  3611               	rlcf	(___lodiv@divisor+6)^(0+1280),f,c
  5244  0035AC  3612               	rlcf	(___lodiv@divisor+7)^(0+1280),f,c
  5245  0035AE  2A1B               	incf	___lodiv@counter^(0+1280),f,c
  5246  0035B0                     l4558:
  5247  0035B0  AE12               	btfss	(___lodiv@divisor+7)^(0+1280),7,c
  5248  0035B2  D7F4               	goto	l4556
  5249  0035B4                     u4430:
  5250  0035B4  90D8               	bcf	status,0,c
  5251  0035B6  3613               	rlcf	___lodiv@quotient^(0+1280),f,c
  5252  0035B8  3614               	rlcf	(___lodiv@quotient+1)^(0+1280),f,c
  5253  0035BA  3615               	rlcf	(___lodiv@quotient+2)^(0+1280),f,c
  5254  0035BC  3616               	rlcf	(___lodiv@quotient+3)^(0+1280),f,c
  5255  0035BE  3617               	rlcf	(___lodiv@quotient+4)^(0+1280),f,c
  5256  0035C0  3618               	rlcf	(___lodiv@quotient+5)^(0+1280),f,c
  5257  0035C2  3619               	rlcf	(___lodiv@quotient+6)^(0+1280),f,c
  5258  0035C4  361A               	rlcf	(___lodiv@quotient+7)^(0+1280),f,c
  5259  0035C6  500B               	movf	___lodiv@divisor^(0+1280),w,c
  5260  0035C8  5C03               	subwf	___lodiv@dividend^(0+1280),w,c
  5261  0035CA  500C               	movf	(___lodiv@divisor+1)^(0+1280),w,c
  5262  0035CC  5804               	subwfb	(___lodiv@dividend+1)^(0+1280),w,c
  5263  0035CE  500D               	movf	(___lodiv@divisor+2)^(0+1280),w,c
  5264  0035D0  5805               	subwfb	(___lodiv@dividend+2)^(0+1280),w,c
  5265  0035D2  500E               	movf	(___lodiv@divisor+3)^(0+1280),w,c
  5266  0035D4  5806               	subwfb	(___lodiv@dividend+3)^(0+1280),w,c
  5267  0035D6  500F               	movf	(___lodiv@divisor+4)^(0+1280),w,c
  5268  0035D8  5807               	subwfb	(___lodiv@dividend+4)^(0+1280),w,c
  5269  0035DA  5010               	movf	(___lodiv@divisor+5)^(0+1280),w,c
  5270  0035DC  5808               	subwfb	(___lodiv@dividend+5)^(0+1280),w,c
  5271  0035DE  5011               	movf	(___lodiv@divisor+6)^(0+1280),w,c
  5272  0035E0  5809               	subwfb	(___lodiv@dividend+6)^(0+1280),w,c
  5273  0035E2  5012               	movf	(___lodiv@divisor+7)^(0+1280),w,c
  5274  0035E4  580A               	subwfb	(___lodiv@dividend+7)^(0+1280),w,c
  5275  0035E6  A0D8               	btfss	status,0,c
  5276  0035E8  D011               	goto	l4568
  5277  0035EA  500B               	movf	___lodiv@divisor^(0+1280),w,c
  5278  0035EC  5E03               	subwf	___lodiv@dividend^(0+1280),f,c
  5279  0035EE  500C               	movf	(___lodiv@divisor+1)^(0+1280),w,c
  5280  0035F0  5A04               	subwfb	(___lodiv@dividend+1)^(0+1280),f,c
  5281  0035F2  500D               	movf	(___lodiv@divisor+2)^(0+1280),w,c
  5282  0035F4  5A05               	subwfb	(___lodiv@dividend+2)^(0+1280),f,c
  5283  0035F6  500E               	movf	(___lodiv@divisor+3)^(0+1280),w,c
  5284  0035F8  5A06               	subwfb	(___lodiv@dividend+3)^(0+1280),f,c
  5285  0035FA  500F               	movf	(___lodiv@divisor+4)^(0+1280),w,c
  5286  0035FC  5A07               	subwfb	(___lodiv@dividend+4)^(0+1280),f,c
  5287  0035FE  5010               	movf	(___lodiv@divisor+5)^(0+1280),w,c
  5288  003600  5A08               	subwfb	(___lodiv@dividend+5)^(0+1280),f,c
  5289  003602  5011               	movf	(___lodiv@divisor+6)^(0+1280),w,c
  5290  003604  5A09               	subwfb	(___lodiv@dividend+6)^(0+1280),f,c
  5291  003606  5012               	movf	(___lodiv@divisor+7)^(0+1280),w,c
  5292  003608  5A0A               	subwfb	(___lodiv@dividend+7)^(0+1280),f,c
  5293  00360A  8013               	bsf	___lodiv@quotient^(0+1280),0,c
  5294  00360C                     l4568:
  5295  00360C  90D8               	bcf	status,0,c
  5296  00360E  3212               	rrcf	(___lodiv@divisor+7)^(0+1280),f,c
  5297  003610  3211               	rrcf	(___lodiv@divisor+6)^(0+1280),f,c
  5298  003612  3210               	rrcf	(___lodiv@divisor+5)^(0+1280),f,c
  5299  003614  320F               	rrcf	(___lodiv@divisor+4)^(0+1280),f,c
  5300  003616  320E               	rrcf	(___lodiv@divisor+3)^(0+1280),f,c
  5301  003618  320D               	rrcf	(___lodiv@divisor+2)^(0+1280),f,c
  5302  00361A  320C               	rrcf	(___lodiv@divisor+1)^(0+1280),f,c
  5303  00361C  320B               	rrcf	___lodiv@divisor^(0+1280),f,c
  5304  00361E  2E1B               	decfsz	___lodiv@counter^(0+1280),f,c
  5305  003620  D7C9               	goto	u4430
  5306  003622                     l1584:
  5307  003622  C513  F503         	movff	___lodiv@quotient,?___lodiv
  5308  003626  C514  F504         	movff	___lodiv@quotient+1,?___lodiv+1
  5309  00362A  C515  F505         	movff	___lodiv@quotient+2,?___lodiv+2
  5310  00362E  C516  F506         	movff	___lodiv@quotient+3,?___lodiv+3
  5311  003632  C517  F507         	movff	___lodiv@quotient+4,?___lodiv+4
  5312  003636  C518  F508         	movff	___lodiv@quotient+5,?___lodiv+5
  5313  00363A  C519  F509         	movff	___lodiv@quotient+6,?___lodiv+6
  5314  00363E  C51A  F50A         	movff	___lodiv@quotient+7,?___lodiv+7
  5315  003642  0012               	return		;funcret
  5316  003644                     __end_of___lodiv:
  5317                           	callstack 0
  5318                           
  5319 ;; *************** function _strncmp *****************
  5320 ;; Defined at:
  5321 ;;		line 3 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/strncmp.c"
  5322 ;; Parameters:    Size  Location     Type
  5323 ;;  _l              1    2[COMRAM] PTR const unsigned char 
  5324 ;;		 -> STR_5(27), STR_4(50), STR_3(66), STR_2(47), 
  5325 ;;		 -> STR_1(16), 
  5326 ;;  _r              1    3[COMRAM] PTR const unsigned char 
  5327 ;;		 -> STR_26(3), STR_22(3), STR_17(3), STR_12(3), 
  5328 ;;		 -> STR_8(3), 
  5329 ;;  n               2    4[COMRAM] unsigned int 
  5330 ;; Auto vars:     Size  Location     Type
  5331 ;;  r               1    8[COMRAM] PTR const unsigned char 
  5332 ;;		 -> STR_26(3), STR_22(3), STR_17(3), STR_12(3), 
  5333 ;;		 -> STR_8(3), 
  5334 ;;  l               1    7[COMRAM] PTR const unsigned char 
  5335 ;;		 -> STR_5(27), STR_4(50), STR_3(66), STR_2(47), 
  5336 ;;		 -> STR_1(16), 
  5337 ;; Return value:  Size  Location     Type
  5338 ;;                  2    2[COMRAM] int 
  5339 ;; Registers used:
  5340 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  5341 ;; Tracked objects:
  5342 ;;		On entry : 0/5
  5343 ;;		On exit  : 0/0
  5344 ;;		Unchanged: 0/0
  5345 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  5346 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5347 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5348 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5349 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5350 ;;Total ram usage:        7 bytes
  5351 ;; Hardware stack levels used: 1
  5352 ;; Hardware stack levels required when called: 3
  5353 ;; This function calls:
  5354 ;;		Nothing
  5355 ;; This function is called by:
  5356 ;;		_vfpfcnvrt
  5357 ;; This function uses a non-reentrant model
  5358 ;;
  5359                           
  5360                           	psect	text15
  5361  003644                     __ptext15:
  5362                           	callstack 0
  5363  003644                     _strncmp:
  5364                           	callstack 120
  5365                           
  5366                           ;incstack = 0
  5367  003644  C503  F508         	movff	strncmp@_l,strncmp@l
  5368  003648  C504  F509         	movff	strncmp@_r,strncmp@r
  5369  00364C  0605               	decf	strncmp@n^(0+1280),f,c
  5370  00364E  A0D8               	btfss	status,0,c
  5371  003650  0606               	decf	(strncmp@n+1)^(0+1280),f,c
  5372  003652  2805               	incf	strncmp@n^(0+1280),w,c
  5373  003654  E10D               	bnz	l4832
  5374  003656  2806               	incf	(strncmp@n+1)^(0+1280),w,c
  5375  003658  A4D8               	btfss	status,2,c
  5376  00365A  D00A               	goto	l4832
  5377  00365C  0E00               	movlw	0
  5378  00365E  6E04               	movwf	(?_strncmp+1)^(0+1280),c
  5379  003660  0E00               	movlw	0
  5380  003662  6E03               	movwf	?_strncmp^(0+1280),c
  5381  003664  0012               	return	
  5382  003666                     l4830:
  5383  003666  2A08               	incf	strncmp@l^(0+1280),f,c
  5384  003668  2A09               	incf	strncmp@r^(0+1280),f,c
  5385  00366A  0605               	decf	strncmp@n^(0+1280),f,c
  5386  00366C  A0D8               	btfss	status,0,c
  5387  00366E  0606               	decf	(strncmp@n+1)^(0+1280),f,c
  5388  003670                     l4832:
  5389  003670  0061  F420  F4F6   	movff	strncmp@l,tblptrl
  5390  003676                     	if	1	;There is more than 1 active tblptr byte
  5391  003676  0E15               	movlw	high __smallconst
  5392  003678  6EF7               	movwf	tblptrh,c
  5393  00367A                     	endif
  5394  00367A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5395  00367A  6AF8               	clrf	tblptru,c
  5396  00367C                     	endif
  5397  00367C                     	if	0	;tblptru may be non-zero
  5398  00367C                     	endif
  5399  00367C  0008               	tblrd		*
  5400  00367E  50F5               	movf	tablat,w,c
  5401  003680  0900               	iorlw	0
  5402  003682  B4D8               	btfsc	status,2,c
  5403  003684  D024               	goto	u5080
  5404  003686  0061  F424  F4F6   	movff	strncmp@r,tblptrl
  5405  00368C                     	if	1	;There is more than 1 active tblptr byte
  5406  00368C  0E15               	movlw	high __smallconst
  5407  00368E  6EF7               	movwf	tblptrh,c
  5408  003690                     	endif
  5409  003690                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5410  003690  6AF8               	clrf	tblptru,c
  5411  003692                     	endif
  5412  003692                     	if	0	;tblptru may be non-zero
  5413  003692                     	endif
  5414  003692  0008               	tblrd		*
  5415  003694  50F5               	movf	tablat,w,c
  5416  003696  0900               	iorlw	0
  5417  003698  B4D8               	btfsc	status,2,c
  5418  00369A  D019               	goto	u5080
  5419  00369C  5005               	movf	strncmp@n^(0+1280),w,c
  5420  00369E  1006               	iorwf	(strncmp@n+1)^(0+1280),w,c
  5421  0036A0  B4D8               	btfsc	status,2,c
  5422  0036A2  D015               	goto	u5080
  5423  0036A4  0061  F420  F4F6   	movff	strncmp@l,tblptrl
  5424  0036AA                     	if	1	;There is more than 1 active tblptr byte
  5425  0036AA  0E15               	movlw	high __smallconst
  5426  0036AC  6EF7               	movwf	tblptrh,c
  5427  0036AE                     	endif
  5428  0036AE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5429  0036AE  6AF8               	clrf	tblptru,c
  5430  0036B0                     	endif
  5431  0036B0                     	if	0	;tblptru may be non-zero
  5432  0036B0                     	endif
  5433  0036B0  0008               	tblrd		*
  5434  0036B2  0061 F3D4  F507    	movff	tablat,??_strncmp
  5435  0036B8  0061  F424  F4F6   	movff	strncmp@r,tblptrl
  5436  0036BE                     	if	1	;There is more than 1 active tblptr byte
  5437  0036BE  0E15               	movlw	high __smallconst
  5438  0036C0  6EF7               	movwf	tblptrh,c
  5439  0036C2                     	endif
  5440  0036C2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5441  0036C2  6AF8               	clrf	tblptru,c
  5442  0036C4                     	endif
  5443  0036C4                     	if	0	;tblptru may be non-zero
  5444  0036C4                     	endif
  5445  0036C4  0008               	tblrd		*
  5446  0036C6  50F5               	movf	tablat,w,c
  5447  0036C8  1807               	xorwf	??_strncmp^(0+1280),w,c
  5448  0036CA  B4D8               	btfsc	status,2,c
  5449  0036CC  D7CC               	goto	l4830
  5450  0036CE                     u5080:
  5451  0036CE  0061  F420  F4F6   	movff	strncmp@l,tblptrl
  5452  0036D4                     	if	1	;There is more than 1 active tblptr byte
  5453  0036D4  0E15               	movlw	high __smallconst
  5454  0036D6  6EF7               	movwf	tblptrh,c
  5455  0036D8                     	endif
  5456  0036D8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5457  0036D8  6AF8               	clrf	tblptru,c
  5458  0036DA                     	endif
  5459  0036DA                     	if	0	;tblptru may be non-zero
  5460  0036DA                     	endif
  5461  0036DA  0008               	tblrd		*
  5462  0036DC  0061 F3D4  F507    	movff	tablat,??_strncmp
  5463  0036E2  0061  F424  F4F6   	movff	strncmp@r,tblptrl
  5464  0036E8                     	if	1	;There is more than 1 active tblptr byte
  5465  0036E8  0E15               	movlw	high __smallconst
  5466  0036EA  6EF7               	movwf	tblptrh,c
  5467  0036EC                     	endif
  5468  0036EC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5469  0036EC  6AF8               	clrf	tblptru,c
  5470  0036EE                     	endif
  5471  0036EE                     	if	0	;tblptru may be non-zero
  5472  0036EE                     	endif
  5473  0036EE  0008               	tblrd		*
  5474  0036F0  50F5               	movf	tablat,w,c
  5475  0036F2  5C07               	subwf	??_strncmp^(0+1280),w,c
  5476  0036F4  6E03               	movwf	?_strncmp^(0+1280),c
  5477  0036F6  6A04               	clrf	(?_strncmp+1)^(0+1280),c
  5478  0036F8  A0D8               	btfss	status,0,c
  5479  0036FA  0604               	decf	(?_strncmp+1)^(0+1280),f,c
  5480  0036FC  0012               	return		;funcret
  5481  0036FE                     __end_of_strncmp:
  5482                           	callstack 0
  5483                           
  5484 ;; *************** function _dtoa *****************
  5485 ;; Defined at:
  5486 ;;		line 287 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c"
  5487 ;; Parameters:    Size  Location     Type
  5488 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  5489 ;;		 -> NULL(0), 
  5490 ;;  d               8   33[COMRAM] long long 
  5491 ;; Auto vars:     Size  Location     Type
  5492 ;;  n               8   57[COMRAM] long long 
  5493 ;;  i               2   65[COMRAM] int 
  5494 ;;  s               2   55[COMRAM] int 
  5495 ;;  w               2   53[COMRAM] int 
  5496 ;;  p               2   51[COMRAM] int 
  5497 ;; Return value:  Size  Location     Type
  5498 ;;                  2   31[COMRAM] int 
  5499 ;; Registers used:
  5500 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5501 ;; Tracked objects:
  5502 ;;		On entry : 0/5
  5503 ;;		On exit  : 0/0
  5504 ;;		Unchanged: 0/0
  5505 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  5506 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5507 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5508 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5509 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5510 ;;Total ram usage:       36 bytes
  5511 ;; Hardware stack levels used: 1
  5512 ;; Hardware stack levels required when called: 8
  5513 ;; This function calls:
  5514 ;;		___aodiv
  5515 ;;		___aomod
  5516 ;;		_abs
  5517 ;;		_pad
  5518 ;; This function is called by:
  5519 ;;		_vfpfcnvrt
  5520 ;; This function uses a non-reentrant model
  5521 ;;
  5522                           
  5523                           	psect	text16
  5524  002B12                     __ptext16:
  5525                           	callstack 0
  5526  002B12                     _dtoa:
  5527                           	callstack 115
  5528                           
  5529                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 287: static int dtoa
      +                          (FILE *fp, long long d);/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.
      +                          c: 288: {;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 289:     in
      +                          t i, p, s, w;;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 290:   
      +                            long long n;;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 293:  
      +                             n = d;
  5530                           
  5531                           ;incstack = 0
  5532  002B12  C522  F53A         	movff	dtoa@d,dtoa@n
  5533  002B16  C523  F53B         	movff	dtoa@d+1,dtoa@n+1
  5534  002B1A  C524  F53C         	movff	dtoa@d+2,dtoa@n+2
  5535  002B1E  C525  F53D         	movff	dtoa@d+3,dtoa@n+3
  5536  002B22  C526  F53E         	movff	dtoa@d+4,dtoa@n+4
  5537  002B26  C527  F53F         	movff	dtoa@d+5,dtoa@n+5
  5538  002B2A  C528  F540         	movff	dtoa@d+6,dtoa@n+6
  5539  002B2E  C529  F541         	movff	dtoa@d+7,dtoa@n+7
  5540                           
  5541                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 294:     s = n < 0 ?
      +                           1 : 0;
  5542  002B32  AE41               	btfss	(dtoa@n+7)^(0+1280),7,c
  5543  002B34  D002               	goto	u4650
  5544  002B36  0E01               	movlw	1
  5545  002B38  D001               	goto	u4660
  5546  002B3A                     u4650:
  5547  002B3A  0E00               	movlw	0
  5548  002B3C                     u4660:
  5549  002B3C  6E38               	movwf	dtoa@s^(0+1280),c
  5550  002B3E  6A39               	clrf	(dtoa@s+1)^(0+1280),c
  5551                           
  5552                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 295:     if (s) {
  5553  002B40  5038               	movf	dtoa@s^(0+1280),w,c
  5554  002B42  1039               	iorwf	(dtoa@s+1)^(0+1280),w,c
  5555  002B44  B4D8               	btfsc	status,2,c
  5556  002B46  D010               	goto	l4666
  5557                           
  5558                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 296:         n = -n;
  5559  002B48  1E41               	comf	(dtoa@n+7)^(0+1280),f,c
  5560  002B4A  1E40               	comf	(dtoa@n+6)^(0+1280),f,c
  5561  002B4C  1E3F               	comf	(dtoa@n+5)^(0+1280),f,c
  5562  002B4E  1E3E               	comf	(dtoa@n+4)^(0+1280),f,c
  5563  002B50  1E3D               	comf	(dtoa@n+3)^(0+1280),f,c
  5564  002B52  1E3C               	comf	(dtoa@n+2)^(0+1280),f,c
  5565  002B54  1E3B               	comf	(dtoa@n+1)^(0+1280),f,c
  5566  002B56  6C3A               	negf	dtoa@n^(0+1280),c
  5567  002B58  0E00               	movlw	0
  5568  002B5A  223B               	addwfc	(dtoa@n+1)^(0+1280),f,c
  5569  002B5C  223C               	addwfc	(dtoa@n+2)^(0+1280),f,c
  5570  002B5E  223D               	addwfc	(dtoa@n+3)^(0+1280),f,c
  5571  002B60  223E               	addwfc	(dtoa@n+4)^(0+1280),f,c
  5572  002B62  223F               	addwfc	(dtoa@n+5)^(0+1280),f,c
  5573  002B64  2240               	addwfc	(dtoa@n+6)^(0+1280),f,c
  5574  002B66  2241               	addwfc	(dtoa@n+7)^(0+1280),f,c
  5575  002B68                     l4666:
  5576                           
  5577                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 300:     if (!(prec 
      +                          < 0)) {
  5578  002B68  0105               	movlb	5	; () banked
  5579  002B6A  AFCE               	btfss	(_prec+1)& (0+255),7,b
  5580                           
  5581                           ; BSR set to: 5
  5582                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 301:         flags &
      +                          = ~(1 << 1);
  5583  002B6C  925C               	bcf	_flags^(0+1280),1,c
  5584                           
  5585                           ; BSR set to: 5
  5586                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 303:     p = (0 < pr
      +                          ec) ? prec : 1;
  5587  002B6E  BFCE               	btfsc	(_prec+1)& (0+255),7,b
  5588  002B70  D005               	goto	u4690
  5589  002B72  51CE               	movf	(_prec+1)& (0+255),w,b
  5590  002B74  E108               	bnz	l1886
  5591  002B76  05CD               	decf	_prec& (0+255),w,b
  5592  002B78  B0D8               	btfsc	status,0,c
  5593  002B7A  D005               	goto	l1886
  5594  002B7C                     u4690:
  5595                           
  5596                           ; BSR set to: 5
  5597  002B7C  0E00               	movlw	0
  5598  002B7E  6E35               	movwf	(dtoa@p+1)^(0+1280),c
  5599  002B80  0E01               	movlw	1
  5600  002B82  6E34               	movwf	dtoa@p^(0+1280),c
  5601  002B84  D004               	goto	l1888
  5602  002B86                     l1886:
  5603                           
  5604                           ; BSR set to: 5
  5605  002B86  C5CD  F534         	movff	_prec,dtoa@p
  5606  002B8A  C5CE  F535         	movff	_prec+1,dtoa@p+1
  5607  002B8E                     l1888:
  5608                           
  5609                           ; BSR set to: 5
  5610                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 304:     w = width;
  5611  002B8E  C5CB  F536         	movff	_width,dtoa@w
  5612  002B92  C5CC  F537         	movff	_width+1,dtoa@w+1
  5613                           
  5614                           ; BSR set to: 5
  5615                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 305:     if (s || (f
      +                          lags & (1 << 2))) {
  5616  002B96  5038               	movf	dtoa@s^(0+1280),w,c
  5617  002B98  1039               	iorwf	(dtoa@s+1)^(0+1280),w,c
  5618  002B9A  A4D8               	btfss	status,2,c
  5619  002B9C  D002               	goto	u4710
  5620                           
  5621                           ; BSR set to: 5
  5622  002B9E  A45C               	btfss	_flags^(0+1280),2,c
  5623  002BA0  D003               	goto	l4680
  5624  002BA2                     u4710:
  5625                           
  5626                           ; BSR set to: 5
  5627                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 306:         --w;
  5628  002BA2  0636               	decf	dtoa@w^(0+1280),f,c
  5629  002BA4  A0D8               	btfss	status,0,c
  5630  002BA6  0637               	decf	(dtoa@w+1)^(0+1280),f,c
  5631  002BA8                     l4680:
  5632                           
  5633                           ; BSR set to: 5
  5634                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 310:     i = sizeof(
      +                          dbuf) - 1;
  5635  002BA8  0E00               	movlw	0
  5636  002BAA  6E43               	movwf	(dtoa@i+1)^(0+1280),c
  5637  002BAC  0E1F               	movlw	31
  5638  002BAE  6E42               	movwf	dtoa@i^(0+1280),c
  5639                           
  5640                           ; BSR set to: 5
  5641                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 311:     dbuf[i] = '
      +                          \0';
  5642  002BB0  0E00               	movlw	0
  5643  002BB2  0106               	movlb	6	; () banked
  5644  002BB4  6F1F               	movwf	(_dbuf+31)& (0+255),b
  5645                           
  5646                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 312:     while (!(i 
      +                          < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5647  002BB6  D07C               	goto	l4694
  5648  002BB8                     l4684:
  5649                           
  5650                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 313:         --i;
  5651  002BB8  0642               	decf	dtoa@i^(0+1280),f,c
  5652  002BBA  A0D8               	btfss	status,0,c
  5653  002BBC  0643               	decf	(dtoa@i+1)^(0+1280),f,c
  5654                           
  5655                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 314:         dbuf[i]
      +                           = (char)((int)'0' + abs(n % 10));
  5656  002BBE  0E00               	movlw	low _dbuf
  5657  002BC0  2442               	addwf	dtoa@i^(0+1280),w,c
  5658  002BC2  6ED9               	movwf	fsr2l,c
  5659  002BC4  0E06               	movlw	high _dbuf
  5660  002BC6  2043               	addwfc	(dtoa@i+1)^(0+1280),w,c
  5661  002BC8  6EDA               	movwf	fsr2h,c
  5662  002BCA  C53A  F503         	movff	dtoa@n,___aomod@dividend
  5663  002BCE  C53B  F504         	movff	dtoa@n+1,___aomod@dividend+1
  5664  002BD2  C53C  F505         	movff	dtoa@n+2,___aomod@dividend+2
  5665  002BD6  C53D  F506         	movff	dtoa@n+3,___aomod@dividend+3
  5666  002BDA  C53E  F507         	movff	dtoa@n+4,___aomod@dividend+4
  5667  002BDE  C53F  F508         	movff	dtoa@n+5,___aomod@dividend+5
  5668  002BE2  C540  F509         	movff	dtoa@n+6,___aomod@dividend+6
  5669  002BE6  C541  F50A         	movff	dtoa@n+7,___aomod@dividend+7
  5670  002BEA  0E0A               	movlw	10
  5671  002BEC  6E0B               	movwf	___aomod@divisor^(0+1280),c
  5672  002BEE  0E00               	movlw	0
  5673  002BF0  6E0C               	movwf	(___aomod@divisor+1)^(0+1280),c
  5674  002BF2  0E00               	movlw	0
  5675  002BF4  6E0D               	movwf	(___aomod@divisor+2)^(0+1280),c
  5676  002BF6  0E00               	movlw	0
  5677  002BF8  6E0E               	movwf	(___aomod@divisor+3)^(0+1280),c
  5678  002BFA  0E00               	movlw	0
  5679  002BFC  6E0F               	movwf	(___aomod@divisor+4)^(0+1280),c
  5680  002BFE  0E00               	movlw	0
  5681  002C00  6E10               	movwf	(___aomod@divisor+5)^(0+1280),c
  5682  002C02  0E00               	movlw	0
  5683  002C04  6E11               	movwf	(___aomod@divisor+6)^(0+1280),c
  5684  002C06  0E00               	movlw	0
  5685  002C08  6E12               	movwf	(___aomod@divisor+7)^(0+1280),c
  5686  002C0A  EC3F  F019         	call	___aomod	;wreg free
  5687  002C0E  C503  F52A         	movff	?___aomod,??_dtoa
  5688  002C12  C504  F52B         	movff	?___aomod+1,??_dtoa+1
  5689  002C16  C505  F52C         	movff	?___aomod+2,??_dtoa+2
  5690  002C1A  C506  F52D         	movff	?___aomod+3,??_dtoa+3
  5691  002C1E  C507  F52E         	movff	?___aomod+4,??_dtoa+4
  5692  002C22  C508  F52F         	movff	?___aomod+5,??_dtoa+5
  5693  002C26  C509  F530         	movff	?___aomod+6,??_dtoa+6
  5694  002C2A  C50A  F531         	movff	?___aomod+7,??_dtoa+7
  5695  002C2E  C52A  F515         	movff	??_dtoa,abs@a
  5696  002C32  C52C  F516         	movff	??_dtoa+2,abs@a+1
  5697  002C36  EC28  F01F         	call	_abs	;wreg free
  5698  002C3A  5015               	movf	?_abs^(0+1280),w,c
  5699  002C3C  0F30               	addlw	48
  5700  002C3E  6EDF               	movwf	indf2,c
  5701                           
  5702                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 315:         --p;
  5703  002C40  0634               	decf	dtoa@p^(0+1280),f,c
  5704  002C42  A0D8               	btfss	status,0,c
  5705  002C44  0635               	decf	(dtoa@p+1)^(0+1280),f,c
  5706                           
  5707                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 316:         --w;
  5708  002C46  0636               	decf	dtoa@w^(0+1280),f,c
  5709  002C48  A0D8               	btfss	status,0,c
  5710  002C4A  0637               	decf	(dtoa@w+1)^(0+1280),f,c
  5711                           
  5712                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 317:         n = n /
      +                           10;
  5713  002C4C  C53A  F503         	movff	dtoa@n,___aodiv@dividend
  5714  002C50  C53B  F504         	movff	dtoa@n+1,___aodiv@dividend+1
  5715  002C54  C53C  F505         	movff	dtoa@n+2,___aodiv@dividend+2
  5716  002C58  C53D  F506         	movff	dtoa@n+3,___aodiv@dividend+3
  5717  002C5C  C53E  F507         	movff	dtoa@n+4,___aodiv@dividend+4
  5718  002C60  C53F  F508         	movff	dtoa@n+5,___aodiv@dividend+5
  5719  002C64  C540  F509         	movff	dtoa@n+6,___aodiv@dividend+6
  5720  002C68  C541  F50A         	movff	dtoa@n+7,___aodiv@dividend+7
  5721  002C6C  0E0A               	movlw	10
  5722  002C6E  6E0B               	movwf	___aodiv@divisor^(0+1280),c
  5723  002C70  0E00               	movlw	0
  5724  002C72  6E0C               	movwf	(___aodiv@divisor+1)^(0+1280),c
  5725  002C74  0E00               	movlw	0
  5726  002C76  6E0D               	movwf	(___aodiv@divisor+2)^(0+1280),c
  5727  002C78  0E00               	movlw	0
  5728  002C7A  6E0E               	movwf	(___aodiv@divisor+3)^(0+1280),c
  5729  002C7C  0E00               	movlw	0
  5730  002C7E  6E0F               	movwf	(___aodiv@divisor+4)^(0+1280),c
  5731  002C80  0E00               	movlw	0
  5732  002C82  6E10               	movwf	(___aodiv@divisor+5)^(0+1280),c
  5733  002C84  0E00               	movlw	0
  5734  002C86  6E11               	movwf	(___aodiv@divisor+6)^(0+1280),c
  5735  002C88  0E00               	movlw	0
  5736  002C8A  6E12               	movwf	(___aodiv@divisor+7)^(0+1280),c
  5737  002C8C  EC9B  F018         	call	___aodiv	;wreg free
  5738  002C90  C503  F53A         	movff	?___aodiv,dtoa@n
  5739  002C94  C504  F53B         	movff	?___aodiv+1,dtoa@n+1
  5740  002C98  C505  F53C         	movff	?___aodiv+2,dtoa@n+2
  5741  002C9C  C506  F53D         	movff	?___aodiv+3,dtoa@n+3
  5742  002CA0  C507  F53E         	movff	?___aodiv+4,dtoa@n+4
  5743  002CA4  C508  F53F         	movff	?___aodiv+5,dtoa@n+5
  5744  002CA8  C509  F540         	movff	?___aodiv+6,dtoa@n+6
  5745  002CAC  C50A  F541         	movff	?___aodiv+7,dtoa@n+7
  5746  002CB0                     l4694:
  5747                           
  5748                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 312:     while (!(i 
      +                          < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5749  002CB0  BE43               	btfsc	(dtoa@i+1)^(0+1280),7,c
  5750  002CB2  D01F               	goto	u4760
  5751  002CB4  5043               	movf	(dtoa@i+1)^(0+1280),w,c
  5752  002CB6  E103               	bnz	u4720
  5753  002CB8  0442               	decf	dtoa@i^(0+1280),w,c
  5754  002CBA  A0D8               	btfss	status,0,c
  5755  002CBC  D01A               	goto	u4760
  5756  002CBE                     u4720:
  5757  002CBE  503A               	movf	dtoa@n^(0+1280),w,c
  5758  002CC0  103B               	iorwf	(dtoa@n+1)^(0+1280),w,c
  5759  002CC2  103C               	iorwf	(dtoa@n+2)^(0+1280),w,c
  5760  002CC4  103D               	iorwf	(dtoa@n+3)^(0+1280),w,c
  5761  002CC6  103E               	iorwf	(dtoa@n+4)^(0+1280),w,c
  5762  002CC8  103F               	iorwf	(dtoa@n+5)^(0+1280),w,c
  5763  002CCA  1040               	iorwf	(dtoa@n+6)^(0+1280),w,c
  5764  002CCC  1041               	iorwf	(dtoa@n+7)^(0+1280),w,c
  5765  002CCE  A4D8               	btfss	status,2,c
  5766  002CD0  D773               	goto	l4684
  5767  002CD2  BE35               	btfsc	(dtoa@p+1)^(0+1280),7,c
  5768  002CD4  D005               	goto	u4740
  5769  002CD6  5035               	movf	(dtoa@p+1)^(0+1280),w,c
  5770  002CD8  E102               	bnz	u4741
  5771  002CDA  0434               	decf	dtoa@p^(0+1280),w,c
  5772  002CDC  B0D8               	btfsc	status,0,c
  5773  002CDE                     u4741:
  5774  002CDE  D76C               	goto	l4684
  5775  002CE0                     u4740:
  5776  002CE0  BE37               	btfsc	(dtoa@w+1)^(0+1280),7,c
  5777  002CE2  D007               	goto	u4760
  5778  002CE4  5037               	movf	(dtoa@w+1)^(0+1280),w,c
  5779  002CE6  E103               	bnz	u4750
  5780  002CE8  0436               	decf	dtoa@w^(0+1280),w,c
  5781  002CEA  A0D8               	btfss	status,0,c
  5782  002CEC  D002               	goto	u4760
  5783  002CEE                     u4750:
  5784  002CEE  B25C               	btfsc	_flags^(0+1280),1,c
  5785  002CF0  D763               	goto	l4684
  5786  002CF2                     u4760:
  5787                           
  5788                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 321:     if (s || (f
      +                          lags & (1 << 2))) {
  5789  002CF2  5038               	movf	dtoa@s^(0+1280),w,c
  5790  002CF4  1039               	iorwf	(dtoa@s+1)^(0+1280),w,c
  5791  002CF6  A4D8               	btfss	status,2,c
  5792  002CF8  D002               	goto	u4780
  5793  002CFA  A45C               	btfss	_flags^(0+1280),2,c
  5794  002CFC  D018               	goto	l4718
  5795  002CFE                     u4780:
  5796                           
  5797                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 322:         --i;
  5798  002CFE  0642               	decf	dtoa@i^(0+1280),f,c
  5799  002D00  A0D8               	btfss	status,0,c
  5800  002D02  0643               	decf	(dtoa@i+1)^(0+1280),f,c
  5801                           
  5802                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 323:         dbuf[i]
      +                           = s ? '-' : '+';
  5803  002D04  5038               	movf	dtoa@s^(0+1280),w,c
  5804  002D06  1039               	iorwf	(dtoa@s+1)^(0+1280),w,c
  5805  002D08  A4D8               	btfss	status,2,c
  5806  002D0A  D004               	goto	l4714
  5807  002D0C  0E00               	movlw	0
  5808  002D0E  6E33               	movwf	(_dtoa$2466+1)^(0+1280),c
  5809  002D10  0E2B               	movlw	43
  5810  002D12  D003               	goto	L6
  5811  002D14                     l4714:
  5812  002D14  0E00               	movlw	0
  5813  002D16  6E33               	movwf	(_dtoa$2466+1)^(0+1280),c
  5814  002D18  0E2D               	movlw	45
  5815  002D1A                     L6:
  5816  002D1A  6E32               	movwf	_dtoa$2466^(0+1280),c
  5817  002D1C  0E00               	movlw	low _dbuf
  5818  002D1E  2442               	addwf	dtoa@i^(0+1280),w,c
  5819  002D20  6ED9               	movwf	fsr2l,c
  5820  002D22  0E06               	movlw	high _dbuf
  5821  002D24  2043               	addwfc	(dtoa@i+1)^(0+1280),w,c
  5822  002D26  6EDA               	movwf	fsr2h,c
  5823  002D28  0061  F4C8  F4DF   	movff	_dtoa$2466,indf2
  5824  002D2E                     l4718:
  5825                           
  5826                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 327:     return pad(
      +                          fp, &dbuf[i], w);
  5827  002D2E  C520  F515         	movff	dtoa@fp,pad@fp
  5828  002D32  C521  F516         	movff	dtoa@fp+1,pad@fp+1
  5829  002D36  0E00               	movlw	low _dbuf
  5830  002D38  2442               	addwf	dtoa@i^(0+1280),w,c
  5831  002D3A  6E17               	movwf	pad@buf^(0+1280),c
  5832  002D3C  0E06               	movlw	high _dbuf
  5833  002D3E  2043               	addwfc	(dtoa@i+1)^(0+1280),w,c
  5834  002D40  6E18               	movwf	(pad@buf+1)^(0+1280),c
  5835  002D42  C536  F519         	movff	dtoa@w,pad@p
  5836  002D46  C537  F51A         	movff	dtoa@w+1,pad@p+1
  5837  002D4A  EC23  F01C         	call	_pad	;wreg free
  5838  002D4E  C515  F520         	movff	?_pad,?_dtoa
  5839  002D52  C516  F521         	movff	?_pad+1,?_dtoa+1
  5840  002D56  0012               	return		;funcret
  5841  002D58                     __end_of_dtoa:
  5842                           	callstack 0
  5843                           
  5844 ;; *************** function _pad *****************
  5845 ;; Defined at:
  5846 ;;		line 72 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c"
  5847 ;; Parameters:    Size  Location     Type
  5848 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  5849 ;;		 -> NULL(0), 
  5850 ;;  buf             2   22[COMRAM] PTR unsigned char 
  5851 ;;		 -> dbuf(32), 
  5852 ;;  p               2   24[COMRAM] int 
  5853 ;; Auto vars:     Size  Location     Type
  5854 ;;  w               2   29[COMRAM] int 
  5855 ;;  i               2   27[COMRAM] int 
  5856 ;; Return value:  Size  Location     Type
  5857 ;;                  2   20[COMRAM] int 
  5858 ;; Registers used:
  5859 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5860 ;; Tracked objects:
  5861 ;;		On entry : 0/6
  5862 ;;		On exit  : 0/0
  5863 ;;		Unchanged: 0/0
  5864 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  5865 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5866 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5867 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5868 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5869 ;;Total ram usage:       11 bytes
  5870 ;; Hardware stack levels used: 1
  5871 ;; Hardware stack levels required when called: 7
  5872 ;; This function calls:
  5873 ;;		_fputc
  5874 ;;		_fputs
  5875 ;;		_strlen
  5876 ;; This function is called by:
  5877 ;;		_dtoa
  5878 ;;		_utoa
  5879 ;;		_xtoa
  5880 ;; This function uses a non-reentrant model
  5881 ;;
  5882                           
  5883                           	psect	text17
  5884  003846                     __ptext17:
  5885                           	callstack 0
  5886  003846                     _pad:
  5887                           	callstack 115
  5888                           
  5889                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 72: static int pad(F
      +                          ILE *fp, char *buf, int p);/Applications/microchip/xc8/v2.32/pic/sources/c99/common/dopr
      +                          nt.c: 73: {;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 74:     i
      +                          nt i, w;;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 77:     if (
      +                          flags & (1 << 0)) {
  5890                           
  5891                           ;incstack = 0
  5892  003846  A05C               	btfss	_flags^(0+1280),0,c
  5893  003848  D00A               	goto	l4592
  5894                           
  5895                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 78:         fputs((c
      +                          onst char *)buf, fp);
  5896  00384A  C517  F50E         	movff	pad@buf,fputs@s
  5897  00384E  C518  F50F         	movff	pad@buf+1,fputs@s+1
  5898  003852  C515  F510         	movff	pad@fp,fputs@fp
  5899  003856  C516  F511         	movff	pad@fp+1,fputs@fp+1
  5900  00385A  ECF2  F01E         	call	_fputs	;wreg free
  5901  00385E                     l4592:
  5902                           
  5903                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) 
      +                          ? 0 : p;
  5904  00385E  BE1A               	btfsc	(pad@p+1)^(0+1280),7,c
  5905  003860  D005               	goto	l4596
  5906  003862  C519  F51E         	movff	pad@p,pad@w
  5907  003866  C51A  F51F         	movff	pad@p+1,pad@w+1
  5908  00386A  D004               	goto	l1859
  5909  00386C                     l4596:
  5910  00386C  0E00               	movlw	0
  5911  00386E  6E1F               	movwf	(pad@w+1)^(0+1280),c
  5912  003870  0E00               	movlw	0
  5913  003872  6E1E               	movwf	pad@w^(0+1280),c
  5914  003874                     l1859:
  5915                           
  5916                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  5917  003874  0E00               	movlw	0
  5918  003876  6E1D               	movwf	(pad@i+1)^(0+1280),c
  5919  003878  0E00               	movlw	0
  5920  00387A  6E1C               	movwf	pad@i^(0+1280),c
  5921                           
  5922                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
  5923  00387C  D00C               	goto	l4602
  5924  00387E                     l4598:
  5925                           
  5926                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 85:         fputc(' 
      +                          ', fp);
  5927  00387E  0E00               	movlw	0
  5928  003880  6E06               	movwf	(fputc@c+1)^(0+1280),c
  5929  003882  0E20               	movlw	32
  5930  003884  6E05               	movwf	fputc@c^(0+1280),c
  5931  003886  C515  F507         	movff	pad@fp,fputc@fp
  5932  00388A  C516  F508         	movff	pad@fp+1,fputc@fp+1
  5933  00388E  EC1D  F01D         	call	_fputc	;wreg free
  5934                           
  5935                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 86:         ++i;
  5936  003892  4A1C               	infsnz	pad@i^(0+1280),f,c
  5937  003894  2A1D               	incf	(pad@i+1)^(0+1280),f,c
  5938  003896                     l4602:
  5939                           
  5940                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
  5941  003896  501E               	movf	pad@w^(0+1280),w,c
  5942  003898  5C1C               	subwf	pad@i^(0+1280),w,c
  5943  00389A  501D               	movf	(pad@i+1)^(0+1280),w,c
  5944  00389C  0A80               	xorlw	128
  5945  00389E  6E1B               	movwf	??_pad^(0+1280),c
  5946  0038A0  501F               	movf	(pad@w+1)^(0+1280),w,c
  5947  0038A2  0A80               	xorlw	128
  5948  0038A4  581B               	subwfb	??_pad^(0+1280),w,c
  5949  0038A6  A0D8               	btfss	status,0,c
  5950  0038A8  D7EA               	goto	l4598
  5951                           
  5952                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 90:     if (!(flags 
      +                          & (1 << 0))) {
  5953  0038AA  B05C               	btfsc	_flags^(0+1280),0,c
  5954  0038AC  D00A               	goto	l4606
  5955                           
  5956                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 91:         fputs((c
      +                          onst char *)buf, fp);
  5957  0038AE  C517  F50E         	movff	pad@buf,fputs@s
  5958  0038B2  C518  F50F         	movff	pad@buf+1,fputs@s+1
  5959  0038B6  C515  F510         	movff	pad@fp,fputs@fp
  5960  0038BA  C516  F511         	movff	pad@fp+1,fputs@fp+1
  5961  0038BE  ECF2  F01E         	call	_fputs	;wreg free
  5962  0038C2                     l4606:
  5963                           
  5964                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 94:     return (int)
      +                          (strlen(buf) + (size_t)w);
  5965  0038C2  C517  F503         	movff	pad@buf,strlen@s
  5966  0038C6  C518  F504         	movff	pad@buf+1,strlen@s+1
  5967  0038CA  EC71  F01F         	call	_strlen	;wreg free
  5968  0038CE  501E               	movf	pad@w^(0+1280),w,c
  5969  0038D0  2403               	addwf	?_strlen^(0+1280),w,c
  5970  0038D2  6E15               	movwf	?_pad^(0+1280),c
  5971  0038D4  501F               	movf	(pad@w+1)^(0+1280),w,c
  5972  0038D6  2004               	addwfc	(?_strlen+1)^(0+1280),w,c
  5973  0038D8  6E16               	movwf	(?_pad+1)^(0+1280),c
  5974  0038DA  0012               	return		;funcret
  5975  0038DC                     __end_of_pad:
  5976                           	callstack 0
  5977                           
  5978 ;; *************** function _strlen *****************
  5979 ;; Defined at:
  5980 ;;		line 5 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/strlen.c"
  5981 ;; Parameters:    Size  Location     Type
  5982 ;;  s               2    2[COMRAM] PTR const unsigned char 
  5983 ;;		 -> dbuf(32), 
  5984 ;; Auto vars:     Size  Location     Type
  5985 ;;  a               2    4[COMRAM] PTR const unsigned char 
  5986 ;;		 -> dbuf(32), 
  5987 ;; Return value:  Size  Location     Type
  5988 ;;                  2    2[COMRAM] unsigned int 
  5989 ;; Registers used:
  5990 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5991 ;; Tracked objects:
  5992 ;;		On entry : 0/6
  5993 ;;		On exit  : 0/0
  5994 ;;		Unchanged: 0/0
  5995 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  5996 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5997 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5999 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6000 ;;Total ram usage:        4 bytes
  6001 ;; Hardware stack levels used: 1
  6002 ;; Hardware stack levels required when called: 3
  6003 ;; This function calls:
  6004 ;;		Nothing
  6005 ;; This function is called by:
  6006 ;;		_pad
  6007 ;; This function uses a non-reentrant model
  6008 ;;
  6009                           
  6010                           	psect	text18
  6011  003EE2                     __ptext18:
  6012                           	callstack 0
  6013  003EE2                     _strlen:
  6014                           	callstack 118
  6015                           
  6016                           ;incstack = 0
  6017  003EE2  C503  F505         	movff	strlen@s,strlen@a
  6018  003EE6  C504  F506         	movff	strlen@s+1,strlen@a+1
  6019  003EEA  D002               	goto	l4460
  6020  003EEC                     l4458:
  6021  003EEC  4A03               	infsnz	strlen@s^(0+1280),f,c
  6022  003EEE  2A04               	incf	(strlen@s+1)^(0+1280),f,c
  6023  003EF0                     l4460:
  6024  003EF0  0061  F40C  F4D9   	movff	strlen@s,fsr2l
  6025  003EF6  0061  F410  F4DA   	movff	strlen@s+1,fsr2h
  6026  003EFC  50DF               	movf	indf2,w,c
  6027  003EFE  A4D8               	btfss	status,2,c
  6028  003F00  D7F5               	goto	l4458
  6029  003F02  5005               	movf	strlen@a^(0+1280),w,c
  6030  003F04  5C03               	subwf	strlen@s^(0+1280),w,c
  6031  003F06  6E03               	movwf	?_strlen^(0+1280),c
  6032  003F08  5006               	movf	(strlen@a+1)^(0+1280),w,c
  6033  003F0A  5804               	subwfb	(strlen@s+1)^(0+1280),w,c
  6034  003F0C  6E04               	movwf	(?_strlen+1)^(0+1280),c
  6035  003F0E  0012               	return		;funcret
  6036  003F10                     __end_of_strlen:
  6037                           	callstack 0
  6038                           
  6039 ;; *************** function _fputs *****************
  6040 ;; Defined at:
  6041 ;;		line 8 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/nf_fputs.c"
  6042 ;; Parameters:    Size  Location     Type
  6043 ;;  s               2   13[COMRAM] PTR const unsigned char 
  6044 ;;		 -> dbuf(32), 
  6045 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  6046 ;;		 -> NULL(0), 
  6047 ;; Auto vars:     Size  Location     Type
  6048 ;;  i               2   18[COMRAM] int 
  6049 ;;  c               1   17[COMRAM] unsigned char 
  6050 ;; Return value:  Size  Location     Type
  6051 ;;                  2   13[COMRAM] int 
  6052 ;; Registers used:
  6053 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6054 ;; Tracked objects:
  6055 ;;		On entry : 0/6
  6056 ;;		On exit  : 0/0
  6057 ;;		Unchanged: 0/0
  6058 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  6059 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6060 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6062 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6063 ;;Total ram usage:        7 bytes
  6064 ;; Hardware stack levels used: 1
  6065 ;; Hardware stack levels required when called: 6
  6066 ;; This function calls:
  6067 ;;		_fputc
  6068 ;; This function is called by:
  6069 ;;		_pad
  6070 ;; This function uses a non-reentrant model
  6071 ;;
  6072                           
  6073                           	psect	text19
  6074  003DE4                     __ptext19:
  6075                           	callstack 0
  6076  003DE4                     _fputs:
  6077                           	callstack 115
  6078                           
  6079                           ;incstack = 0
  6080  003DE4  0E00               	movlw	0
  6081  003DE6  6E14               	movwf	(fputs@i+1)^(0+1280),c
  6082  003DE8  0E00               	movlw	0
  6083  003DEA  6E13               	movwf	fputs@i^(0+1280),c
  6084  003DEC  D00B               	goto	l4454
  6085  003DEE                     l4450:
  6086  003DEE  C512  F505         	movff	fputs@c,fputc@c
  6087  003DF2  6A06               	clrf	(fputc@c+1)^(0+1280),c
  6088  003DF4  C510  F507         	movff	fputs@fp,fputc@fp
  6089  003DF8  C511  F508         	movff	fputs@fp+1,fputc@fp+1
  6090  003DFC  EC1D  F01D         	call	_fputc	;wreg free
  6091  003E00  4A13               	infsnz	fputs@i^(0+1280),f,c
  6092  003E02  2A14               	incf	(fputs@i+1)^(0+1280),f,c
  6093  003E04                     l4454:
  6094  003E04  5013               	movf	fputs@i^(0+1280),w,c
  6095  003E06  240E               	addwf	fputs@s^(0+1280),w,c
  6096  003E08  6ED9               	movwf	fsr2l,c
  6097  003E0A  5014               	movf	(fputs@i+1)^(0+1280),w,c
  6098  003E0C  200F               	addwfc	(fputs@s+1)^(0+1280),w,c
  6099  003E0E  6EDA               	movwf	fsr2h,c
  6100  003E10  50DF               	movf	indf2,w,c
  6101  003E12  6E12               	movwf	fputs@c^(0+1280),c
  6102  003E14  5012               	movf	fputs@c^(0+1280),w,c
  6103  003E16  B4D8               	btfsc	status,2,c
  6104  003E18  0012               	return	
  6105  003E1A  D7E9               	goto	l4450
  6106  003E1C                     __end_of_fputs:
  6107                           	callstack 0
  6108                           
  6109 ;; *************** function _abs *****************
  6110 ;; Defined at:
  6111 ;;		line 1 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/abs.c"
  6112 ;; Parameters:    Size  Location     Type
  6113 ;;  a               2   20[COMRAM] int 
  6114 ;; Auto vars:     Size  Location     Type
  6115 ;;		None
  6116 ;; Return value:  Size  Location     Type
  6117 ;;                  2   20[COMRAM] int 
  6118 ;; Registers used:
  6119 ;;		wreg, status,2, status,0
  6120 ;; Tracked objects:
  6121 ;;		On entry : 0/6
  6122 ;;		On exit  : 0/0
  6123 ;;		Unchanged: 0/0
  6124 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  6125 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6127 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6128 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6129 ;;Total ram usage:        4 bytes
  6130 ;; Hardware stack levels used: 1
  6131 ;; Hardware stack levels required when called: 3
  6132 ;; This function calls:
  6133 ;;		Nothing
  6134 ;; This function is called by:
  6135 ;;		_dtoa
  6136 ;; This function uses a non-reentrant model
  6137 ;;
  6138                           
  6139                           	psect	text20
  6140  003E50                     __ptext20:
  6141                           	callstack 0
  6142  003E50                     _abs:
  6143                           	callstack 119
  6144                           
  6145                           ;incstack = 0
  6146  003E50  BE16               	btfsc	(abs@a+1)^(0+1280),7,c
  6147  003E52  D005               	goto	u4520
  6148  003E54  5016               	movf	(abs@a+1)^(0+1280),w,c
  6149  003E56  E110               	bnz	l1981
  6150  003E58  0415               	decf	abs@a^(0+1280),w,c
  6151  003E5A  B0D8               	btfsc	status,0,c
  6152  003E5C  D00D               	goto	l1981
  6153  003E5E                     u4520:
  6154  003E5E  C515  F517         	movff	abs@a,??_abs
  6155  003E62  C516  F518         	movff	abs@a+1,??_abs+1
  6156  003E66  1E17               	comf	??_abs^(0+1280),f,c
  6157  003E68  1E18               	comf	(??_abs+1)^(0+1280),f,c
  6158  003E6A  4A17               	infsnz	??_abs^(0+1280),f,c
  6159  003E6C  2A18               	incf	(??_abs+1)^(0+1280),f,c
  6160  003E6E  C517  F515         	movff	??_abs,?_abs
  6161  003E72  C518  F516         	movff	??_abs+1,?_abs+1
  6162  003E76  0012               	return	
  6163  003E78                     l1981:
  6164  003E78  C515  F515         	movff	abs@a,?_abs
  6165  003E7C  C516  F516         	movff	abs@a+1,?_abs+1
  6166  003E80  0012               	return		;funcret
  6167  003E82                     __end_of_abs:
  6168                           	callstack 0
  6169                           
  6170 ;; *************** function ___aomod *****************
  6171 ;; Defined at:
  6172 ;;		line 9 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/aomod.c"
  6173 ;; Parameters:    Size  Location     Type
  6174 ;;  dividend        8    2[COMRAM] long long 
  6175 ;;  divisor         8   10[COMRAM] long long 
  6176 ;; Auto vars:     Size  Location     Type
  6177 ;;  sign            1   19[COMRAM] unsigned char 
  6178 ;;  counter         1   18[COMRAM] unsigned char 
  6179 ;; Return value:  Size  Location     Type
  6180 ;;                  8    2[COMRAM] long long 
  6181 ;; Registers used:
  6182 ;;		wreg, status,2, status,0
  6183 ;; Tracked objects:
  6184 ;;		On entry : 0/6
  6185 ;;		On exit  : 0/0
  6186 ;;		Unchanged: 0/0
  6187 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  6188 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6189 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6191 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6192 ;;Total ram usage:       18 bytes
  6193 ;; Hardware stack levels used: 1
  6194 ;; Hardware stack levels required when called: 3
  6195 ;; This function calls:
  6196 ;;		Nothing
  6197 ;; This function is called by:
  6198 ;;		_dtoa
  6199 ;; This function uses a non-reentrant model
  6200 ;;
  6201                           
  6202                           	psect	text21
  6203  00327E                     __ptext21:
  6204                           	callstack 0
  6205  00327E                     ___aomod:
  6206                           	callstack 119
  6207                           
  6208                           ;incstack = 0
  6209  00327E  0E00               	movlw	0
  6210  003280  6E14               	movwf	___aomod@sign^(0+1280),c
  6211  003282  AE0A               	btfss	(___aomod@dividend+7)^(0+1280),7,c
  6212  003284  D012               	goto	l4522
  6213  003286  1E0A               	comf	(___aomod@dividend+7)^(0+1280),f,c
  6214  003288  1E09               	comf	(___aomod@dividend+6)^(0+1280),f,c
  6215  00328A  1E08               	comf	(___aomod@dividend+5)^(0+1280),f,c
  6216  00328C  1E07               	comf	(___aomod@dividend+4)^(0+1280),f,c
  6217  00328E  1E06               	comf	(___aomod@dividend+3)^(0+1280),f,c
  6218  003290  1E05               	comf	(___aomod@dividend+2)^(0+1280),f,c
  6219  003292  1E04               	comf	(___aomod@dividend+1)^(0+1280),f,c
  6220  003294  6C03               	negf	___aomod@dividend^(0+1280),c
  6221  003296  0E00               	movlw	0
  6222  003298  2204               	addwfc	(___aomod@dividend+1)^(0+1280),f,c
  6223  00329A  2205               	addwfc	(___aomod@dividend+2)^(0+1280),f,c
  6224  00329C  2206               	addwfc	(___aomod@dividend+3)^(0+1280),f,c
  6225  00329E  2207               	addwfc	(___aomod@dividend+4)^(0+1280),f,c
  6226  0032A0  2208               	addwfc	(___aomod@dividend+5)^(0+1280),f,c
  6227  0032A2  2209               	addwfc	(___aomod@dividend+6)^(0+1280),f,c
  6228  0032A4  220A               	addwfc	(___aomod@dividend+7)^(0+1280),f,c
  6229  0032A6  0E01               	movlw	1
  6230  0032A8  6E14               	movwf	___aomod@sign^(0+1280),c
  6231  0032AA                     l4522:
  6232  0032AA  AE12               	btfss	(___aomod@divisor+7)^(0+1280),7,c
  6233  0032AC  D010               	goto	l4526
  6234  0032AE  1E12               	comf	(___aomod@divisor+7)^(0+1280),f,c
  6235  0032B0  1E11               	comf	(___aomod@divisor+6)^(0+1280),f,c
  6236  0032B2  1E10               	comf	(___aomod@divisor+5)^(0+1280),f,c
  6237  0032B4  1E0F               	comf	(___aomod@divisor+4)^(0+1280),f,c
  6238  0032B6  1E0E               	comf	(___aomod@divisor+3)^(0+1280),f,c
  6239  0032B8  1E0D               	comf	(___aomod@divisor+2)^(0+1280),f,c
  6240  0032BA  1E0C               	comf	(___aomod@divisor+1)^(0+1280),f,c
  6241  0032BC  6C0B               	negf	___aomod@divisor^(0+1280),c
  6242  0032BE  0E00               	movlw	0
  6243  0032C0  220C               	addwfc	(___aomod@divisor+1)^(0+1280),f,c
  6244  0032C2  220D               	addwfc	(___aomod@divisor+2)^(0+1280),f,c
  6245  0032C4  220E               	addwfc	(___aomod@divisor+3)^(0+1280),f,c
  6246  0032C6  220F               	addwfc	(___aomod@divisor+4)^(0+1280),f,c
  6247  0032C8  2210               	addwfc	(___aomod@divisor+5)^(0+1280),f,c
  6248  0032CA  2211               	addwfc	(___aomod@divisor+6)^(0+1280),f,c
  6249  0032CC  2212               	addwfc	(___aomod@divisor+7)^(0+1280),f,c
  6250  0032CE                     l4526:
  6251  0032CE  500B               	movf	___aomod@divisor^(0+1280),w,c
  6252  0032D0  100C               	iorwf	(___aomod@divisor+1)^(0+1280),w,c
  6253  0032D2  100D               	iorwf	(___aomod@divisor+2)^(0+1280),w,c
  6254  0032D4  100E               	iorwf	(___aomod@divisor+3)^(0+1280),w,c
  6255  0032D6  100F               	iorwf	(___aomod@divisor+4)^(0+1280),w,c
  6256  0032D8  1010               	iorwf	(___aomod@divisor+5)^(0+1280),w,c
  6257  0032DA  1011               	iorwf	(___aomod@divisor+6)^(0+1280),w,c
  6258  0032DC  1012               	iorwf	(___aomod@divisor+7)^(0+1280),w,c
  6259  0032DE  B4D8               	btfsc	status,2,c
  6260  0032E0  D03C               	goto	l4542
  6261  0032E2  0E01               	movlw	1
  6262  0032E4  6E13               	movwf	___aomod@counter^(0+1280),c
  6263  0032E6  D00A               	goto	l4532
  6264  0032E8                     l4530:
  6265  0032E8  90D8               	bcf	status,0,c
  6266  0032EA  360B               	rlcf	___aomod@divisor^(0+1280),f,c
  6267  0032EC  360C               	rlcf	(___aomod@divisor+1)^(0+1280),f,c
  6268  0032EE  360D               	rlcf	(___aomod@divisor+2)^(0+1280),f,c
  6269  0032F0  360E               	rlcf	(___aomod@divisor+3)^(0+1280),f,c
  6270  0032F2  360F               	rlcf	(___aomod@divisor+4)^(0+1280),f,c
  6271  0032F4  3610               	rlcf	(___aomod@divisor+5)^(0+1280),f,c
  6272  0032F6  3611               	rlcf	(___aomod@divisor+6)^(0+1280),f,c
  6273  0032F8  3612               	rlcf	(___aomod@divisor+7)^(0+1280),f,c
  6274  0032FA  2A13               	incf	___aomod@counter^(0+1280),f,c
  6275  0032FC                     l4532:
  6276  0032FC  AE12               	btfss	(___aomod@divisor+7)^(0+1280),7,c
  6277  0032FE  D7F4               	goto	l4530
  6278  003300                     u4380:
  6279  003300  500B               	movf	___aomod@divisor^(0+1280),w,c
  6280  003302  5C03               	subwf	___aomod@dividend^(0+1280),w,c
  6281  003304  500C               	movf	(___aomod@divisor+1)^(0+1280),w,c
  6282  003306  5804               	subwfb	(___aomod@dividend+1)^(0+1280),w,c
  6283  003308  500D               	movf	(___aomod@divisor+2)^(0+1280),w,c
  6284  00330A  5805               	subwfb	(___aomod@dividend+2)^(0+1280),w,c
  6285  00330C  500E               	movf	(___aomod@divisor+3)^(0+1280),w,c
  6286  00330E  5806               	subwfb	(___aomod@dividend+3)^(0+1280),w,c
  6287  003310  500F               	movf	(___aomod@divisor+4)^(0+1280),w,c
  6288  003312  5807               	subwfb	(___aomod@dividend+4)^(0+1280),w,c
  6289  003314  5010               	movf	(___aomod@divisor+5)^(0+1280),w,c
  6290  003316  5808               	subwfb	(___aomod@dividend+5)^(0+1280),w,c
  6291  003318  5011               	movf	(___aomod@divisor+6)^(0+1280),w,c
  6292  00331A  5809               	subwfb	(___aomod@dividend+6)^(0+1280),w,c
  6293  00331C  5012               	movf	(___aomod@divisor+7)^(0+1280),w,c
  6294  00331E  580A               	subwfb	(___aomod@dividend+7)^(0+1280),w,c
  6295  003320  A0D8               	btfss	status,0,c
  6296  003322  D010               	goto	l4538
  6297  003324  500B               	movf	___aomod@divisor^(0+1280),w,c
  6298  003326  5E03               	subwf	___aomod@dividend^(0+1280),f,c
  6299  003328  500C               	movf	(___aomod@divisor+1)^(0+1280),w,c
  6300  00332A  5A04               	subwfb	(___aomod@dividend+1)^(0+1280),f,c
  6301  00332C  500D               	movf	(___aomod@divisor+2)^(0+1280),w,c
  6302  00332E  5A05               	subwfb	(___aomod@dividend+2)^(0+1280),f,c
  6303  003330  500E               	movf	(___aomod@divisor+3)^(0+1280),w,c
  6304  003332  5A06               	subwfb	(___aomod@dividend+3)^(0+1280),f,c
  6305  003334  500F               	movf	(___aomod@divisor+4)^(0+1280),w,c
  6306  003336  5A07               	subwfb	(___aomod@dividend+4)^(0+1280),f,c
  6307  003338  5010               	movf	(___aomod@divisor+5)^(0+1280),w,c
  6308  00333A  5A08               	subwfb	(___aomod@dividend+5)^(0+1280),f,c
  6309  00333C  5011               	movf	(___aomod@divisor+6)^(0+1280),w,c
  6310  00333E  5A09               	subwfb	(___aomod@dividend+6)^(0+1280),f,c
  6311  003340  5012               	movf	(___aomod@divisor+7)^(0+1280),w,c
  6312  003342  5A0A               	subwfb	(___aomod@dividend+7)^(0+1280),f,c
  6313  003344                     l4538:
  6314  003344  90D8               	bcf	status,0,c
  6315  003346  3212               	rrcf	(___aomod@divisor+7)^(0+1280),f,c
  6316  003348  3211               	rrcf	(___aomod@divisor+6)^(0+1280),f,c
  6317  00334A  3210               	rrcf	(___aomod@divisor+5)^(0+1280),f,c
  6318  00334C  320F               	rrcf	(___aomod@divisor+4)^(0+1280),f,c
  6319  00334E  320E               	rrcf	(___aomod@divisor+3)^(0+1280),f,c
  6320  003350  320D               	rrcf	(___aomod@divisor+2)^(0+1280),f,c
  6321  003352  320C               	rrcf	(___aomod@divisor+1)^(0+1280),f,c
  6322  003354  320B               	rrcf	___aomod@divisor^(0+1280),f,c
  6323  003356  2E13               	decfsz	___aomod@counter^(0+1280),f,c
  6324  003358  D7D3               	goto	u4380
  6325  00335A                     l4542:
  6326  00335A  5014               	movf	___aomod@sign^(0+1280),w,c
  6327  00335C  B4D8               	btfsc	status,2,c
  6328  00335E  D010               	goto	l4546
  6329  003360  1E0A               	comf	(___aomod@dividend+7)^(0+1280),f,c
  6330  003362  1E09               	comf	(___aomod@dividend+6)^(0+1280),f,c
  6331  003364  1E08               	comf	(___aomod@dividend+5)^(0+1280),f,c
  6332  003366  1E07               	comf	(___aomod@dividend+4)^(0+1280),f,c
  6333  003368  1E06               	comf	(___aomod@dividend+3)^(0+1280),f,c
  6334  00336A  1E05               	comf	(___aomod@dividend+2)^(0+1280),f,c
  6335  00336C  1E04               	comf	(___aomod@dividend+1)^(0+1280),f,c
  6336  00336E  6C03               	negf	___aomod@dividend^(0+1280),c
  6337  003370  0E00               	movlw	0
  6338  003372  2204               	addwfc	(___aomod@dividend+1)^(0+1280),f,c
  6339  003374  2205               	addwfc	(___aomod@dividend+2)^(0+1280),f,c
  6340  003376  2206               	addwfc	(___aomod@dividend+3)^(0+1280),f,c
  6341  003378  2207               	addwfc	(___aomod@dividend+4)^(0+1280),f,c
  6342  00337A  2208               	addwfc	(___aomod@dividend+5)^(0+1280),f,c
  6343  00337C  2209               	addwfc	(___aomod@dividend+6)^(0+1280),f,c
  6344  00337E  220A               	addwfc	(___aomod@dividend+7)^(0+1280),f,c
  6345  003380                     l4546:
  6346  003380  C503  F503         	movff	___aomod@dividend,?___aomod
  6347  003384  C504  F504         	movff	___aomod@dividend+1,?___aomod+1
  6348  003388  C505  F505         	movff	___aomod@dividend+2,?___aomod+2
  6349  00338C  C506  F506         	movff	___aomod@dividend+3,?___aomod+3
  6350  003390  C507  F507         	movff	___aomod@dividend+4,?___aomod+4
  6351  003394  C508  F508         	movff	___aomod@dividend+5,?___aomod+5
  6352  003398  C509  F509         	movff	___aomod@dividend+6,?___aomod+6
  6353  00339C  C50A  F50A         	movff	___aomod@dividend+7,?___aomod+7
  6354  0033A0  0012               	return		;funcret
  6355  0033A2                     __end_of___aomod:
  6356                           	callstack 0
  6357                           
  6358 ;; *************** function ___aodiv *****************
  6359 ;; Defined at:
  6360 ;;		line 9 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/aodiv.c"
  6361 ;; Parameters:    Size  Location     Type
  6362 ;;  dividend        8    2[COMRAM] long long 
  6363 ;;  divisor         8   10[COMRAM] long long 
  6364 ;; Auto vars:     Size  Location     Type
  6365 ;;  quotient        8   20[COMRAM] long long 
  6366 ;;  sign            1   19[COMRAM] unsigned char 
  6367 ;;  counter         1   18[COMRAM] unsigned char 
  6368 ;; Return value:  Size  Location     Type
  6369 ;;                  8    2[COMRAM] long long 
  6370 ;; Registers used:
  6371 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6372 ;; Tracked objects:
  6373 ;;		On entry : 0/6
  6374 ;;		On exit  : 0/0
  6375 ;;		Unchanged: 0/0
  6376 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  6377 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6378 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6380 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6381 ;;Total ram usage:       26 bytes
  6382 ;; Hardware stack levels used: 1
  6383 ;; Hardware stack levels required when called: 3
  6384 ;; This function calls:
  6385 ;;		Nothing
  6386 ;; This function is called by:
  6387 ;;		_dtoa
  6388 ;; This function uses a non-reentrant model
  6389 ;;
  6390                           
  6391                           	psect	text22
  6392  003136                     __ptext22:
  6393                           	callstack 0
  6394  003136                     ___aodiv:
  6395                           	callstack 119
  6396                           
  6397                           ;incstack = 0
  6398  003136  0E00               	movlw	0
  6399  003138  6E14               	movwf	___aodiv@sign^(0+1280),c
  6400  00313A  AE12               	btfss	(___aodiv@divisor+7)^(0+1280),7,c
  6401  00313C  D012               	goto	l4478
  6402  00313E  1E12               	comf	(___aodiv@divisor+7)^(0+1280),f,c
  6403  003140  1E11               	comf	(___aodiv@divisor+6)^(0+1280),f,c
  6404  003142  1E10               	comf	(___aodiv@divisor+5)^(0+1280),f,c
  6405  003144  1E0F               	comf	(___aodiv@divisor+4)^(0+1280),f,c
  6406  003146  1E0E               	comf	(___aodiv@divisor+3)^(0+1280),f,c
  6407  003148  1E0D               	comf	(___aodiv@divisor+2)^(0+1280),f,c
  6408  00314A  1E0C               	comf	(___aodiv@divisor+1)^(0+1280),f,c
  6409  00314C  6C0B               	negf	___aodiv@divisor^(0+1280),c
  6410  00314E  0E00               	movlw	0
  6411  003150  220C               	addwfc	(___aodiv@divisor+1)^(0+1280),f,c
  6412  003152  220D               	addwfc	(___aodiv@divisor+2)^(0+1280),f,c
  6413  003154  220E               	addwfc	(___aodiv@divisor+3)^(0+1280),f,c
  6414  003156  220F               	addwfc	(___aodiv@divisor+4)^(0+1280),f,c
  6415  003158  2210               	addwfc	(___aodiv@divisor+5)^(0+1280),f,c
  6416  00315A  2211               	addwfc	(___aodiv@divisor+6)^(0+1280),f,c
  6417  00315C  2212               	addwfc	(___aodiv@divisor+7)^(0+1280),f,c
  6418  00315E  0E01               	movlw	1
  6419  003160  6E14               	movwf	___aodiv@sign^(0+1280),c
  6420  003162                     l4478:
  6421  003162  AE0A               	btfss	(___aodiv@dividend+7)^(0+1280),7,c
  6422  003164  D012               	goto	l4484
  6423  003166  1E0A               	comf	(___aodiv@dividend+7)^(0+1280),f,c
  6424  003168  1E09               	comf	(___aodiv@dividend+6)^(0+1280),f,c
  6425  00316A  1E08               	comf	(___aodiv@dividend+5)^(0+1280),f,c
  6426  00316C  1E07               	comf	(___aodiv@dividend+4)^(0+1280),f,c
  6427  00316E  1E06               	comf	(___aodiv@dividend+3)^(0+1280),f,c
  6428  003170  1E05               	comf	(___aodiv@dividend+2)^(0+1280),f,c
  6429  003172  1E04               	comf	(___aodiv@dividend+1)^(0+1280),f,c
  6430  003174  6C03               	negf	___aodiv@dividend^(0+1280),c
  6431  003176  0E00               	movlw	0
  6432  003178  2204               	addwfc	(___aodiv@dividend+1)^(0+1280),f,c
  6433  00317A  2205               	addwfc	(___aodiv@dividend+2)^(0+1280),f,c
  6434  00317C  2206               	addwfc	(___aodiv@dividend+3)^(0+1280),f,c
  6435  00317E  2207               	addwfc	(___aodiv@dividend+4)^(0+1280),f,c
  6436  003180  2208               	addwfc	(___aodiv@dividend+5)^(0+1280),f,c
  6437  003182  2209               	addwfc	(___aodiv@dividend+6)^(0+1280),f,c
  6438  003184  220A               	addwfc	(___aodiv@dividend+7)^(0+1280),f,c
  6439  003186  0E01               	movlw	1
  6440  003188  1A14               	xorwf	___aodiv@sign^(0+1280),f,c
  6441  00318A                     l4484:
  6442  00318A  EE21  F115         	lfsr	2,___aodiv@quotient
  6443  00318E  0E07               	movlw	7
  6444  003190                     u4301:
  6445  003190  6ADE               	clrf	postinc2,c
  6446  003192  06E8               	decf	wreg,f,c
  6447  003194  E2FD               	bc	u4301
  6448  003196  500B               	movf	___aodiv@divisor^(0+1280),w,c
  6449  003198  100C               	iorwf	(___aodiv@divisor+1)^(0+1280),w,c
  6450  00319A  100D               	iorwf	(___aodiv@divisor+2)^(0+1280),w,c
  6451  00319C  100E               	iorwf	(___aodiv@divisor+3)^(0+1280),w,c
  6452  00319E  100F               	iorwf	(___aodiv@divisor+4)^(0+1280),w,c
  6453  0031A0  1010               	iorwf	(___aodiv@divisor+5)^(0+1280),w,c
  6454  0031A2  1011               	iorwf	(___aodiv@divisor+6)^(0+1280),w,c
  6455  0031A4  1012               	iorwf	(___aodiv@divisor+7)^(0+1280),w,c
  6456  0031A6  B4D8               	btfsc	status,2,c
  6457  0031A8  D046               	goto	l4506
  6458  0031AA  0E01               	movlw	1
  6459  0031AC  6E13               	movwf	___aodiv@counter^(0+1280),c
  6460  0031AE  D00A               	goto	l4492
  6461  0031B0                     l4490:
  6462  0031B0  90D8               	bcf	status,0,c
  6463  0031B2  360B               	rlcf	___aodiv@divisor^(0+1280),f,c
  6464  0031B4  360C               	rlcf	(___aodiv@divisor+1)^(0+1280),f,c
  6465  0031B6  360D               	rlcf	(___aodiv@divisor+2)^(0+1280),f,c
  6466  0031B8  360E               	rlcf	(___aodiv@divisor+3)^(0+1280),f,c
  6467  0031BA  360F               	rlcf	(___aodiv@divisor+4)^(0+1280),f,c
  6468  0031BC  3610               	rlcf	(___aodiv@divisor+5)^(0+1280),f,c
  6469  0031BE  3611               	rlcf	(___aodiv@divisor+6)^(0+1280),f,c
  6470  0031C0  3612               	rlcf	(___aodiv@divisor+7)^(0+1280),f,c
  6471  0031C2  2A13               	incf	___aodiv@counter^(0+1280),f,c
  6472  0031C4                     l4492:
  6473  0031C4  AE12               	btfss	(___aodiv@divisor+7)^(0+1280),7,c
  6474  0031C6  D7F4               	goto	l4490
  6475  0031C8                     u4320:
  6476  0031C8  90D8               	bcf	status,0,c
  6477  0031CA  3615               	rlcf	___aodiv@quotient^(0+1280),f,c
  6478  0031CC  3616               	rlcf	(___aodiv@quotient+1)^(0+1280),f,c
  6479  0031CE  3617               	rlcf	(___aodiv@quotient+2)^(0+1280),f,c
  6480  0031D0  3618               	rlcf	(___aodiv@quotient+3)^(0+1280),f,c
  6481  0031D2  3619               	rlcf	(___aodiv@quotient+4)^(0+1280),f,c
  6482  0031D4  361A               	rlcf	(___aodiv@quotient+5)^(0+1280),f,c
  6483  0031D6  361B               	rlcf	(___aodiv@quotient+6)^(0+1280),f,c
  6484  0031D8  361C               	rlcf	(___aodiv@quotient+7)^(0+1280),f,c
  6485  0031DA  500B               	movf	___aodiv@divisor^(0+1280),w,c
  6486  0031DC  5C03               	subwf	___aodiv@dividend^(0+1280),w,c
  6487  0031DE  500C               	movf	(___aodiv@divisor+1)^(0+1280),w,c
  6488  0031E0  5804               	subwfb	(___aodiv@dividend+1)^(0+1280),w,c
  6489  0031E2  500D               	movf	(___aodiv@divisor+2)^(0+1280),w,c
  6490  0031E4  5805               	subwfb	(___aodiv@dividend+2)^(0+1280),w,c
  6491  0031E6  500E               	movf	(___aodiv@divisor+3)^(0+1280),w,c
  6492  0031E8  5806               	subwfb	(___aodiv@dividend+3)^(0+1280),w,c
  6493  0031EA  500F               	movf	(___aodiv@divisor+4)^(0+1280),w,c
  6494  0031EC  5807               	subwfb	(___aodiv@dividend+4)^(0+1280),w,c
  6495  0031EE  5010               	movf	(___aodiv@divisor+5)^(0+1280),w,c
  6496  0031F0  5808               	subwfb	(___aodiv@dividend+5)^(0+1280),w,c
  6497  0031F2  5011               	movf	(___aodiv@divisor+6)^(0+1280),w,c
  6498  0031F4  5809               	subwfb	(___aodiv@dividend+6)^(0+1280),w,c
  6499  0031F6  5012               	movf	(___aodiv@divisor+7)^(0+1280),w,c
  6500  0031F8  580A               	subwfb	(___aodiv@dividend+7)^(0+1280),w,c
  6501  0031FA  A0D8               	btfss	status,0,c
  6502  0031FC  D011               	goto	l4502
  6503  0031FE  500B               	movf	___aodiv@divisor^(0+1280),w,c
  6504  003200  5E03               	subwf	___aodiv@dividend^(0+1280),f,c
  6505  003202  500C               	movf	(___aodiv@divisor+1)^(0+1280),w,c
  6506  003204  5A04               	subwfb	(___aodiv@dividend+1)^(0+1280),f,c
  6507  003206  500D               	movf	(___aodiv@divisor+2)^(0+1280),w,c
  6508  003208  5A05               	subwfb	(___aodiv@dividend+2)^(0+1280),f,c
  6509  00320A  500E               	movf	(___aodiv@divisor+3)^(0+1280),w,c
  6510  00320C  5A06               	subwfb	(___aodiv@dividend+3)^(0+1280),f,c
  6511  00320E  500F               	movf	(___aodiv@divisor+4)^(0+1280),w,c
  6512  003210  5A07               	subwfb	(___aodiv@dividend+4)^(0+1280),f,c
  6513  003212  5010               	movf	(___aodiv@divisor+5)^(0+1280),w,c
  6514  003214  5A08               	subwfb	(___aodiv@dividend+5)^(0+1280),f,c
  6515  003216  5011               	movf	(___aodiv@divisor+6)^(0+1280),w,c
  6516  003218  5A09               	subwfb	(___aodiv@dividend+6)^(0+1280),f,c
  6517  00321A  5012               	movf	(___aodiv@divisor+7)^(0+1280),w,c
  6518  00321C  5A0A               	subwfb	(___aodiv@dividend+7)^(0+1280),f,c
  6519  00321E  8015               	bsf	___aodiv@quotient^(0+1280),0,c
  6520  003220                     l4502:
  6521  003220  90D8               	bcf	status,0,c
  6522  003222  3212               	rrcf	(___aodiv@divisor+7)^(0+1280),f,c
  6523  003224  3211               	rrcf	(___aodiv@divisor+6)^(0+1280),f,c
  6524  003226  3210               	rrcf	(___aodiv@divisor+5)^(0+1280),f,c
  6525  003228  320F               	rrcf	(___aodiv@divisor+4)^(0+1280),f,c
  6526  00322A  320E               	rrcf	(___aodiv@divisor+3)^(0+1280),f,c
  6527  00322C  320D               	rrcf	(___aodiv@divisor+2)^(0+1280),f,c
  6528  00322E  320C               	rrcf	(___aodiv@divisor+1)^(0+1280),f,c
  6529  003230  320B               	rrcf	___aodiv@divisor^(0+1280),f,c
  6530  003232  2E13               	decfsz	___aodiv@counter^(0+1280),f,c
  6531  003234  D7C9               	goto	u4320
  6532  003236                     l4506:
  6533  003236  5014               	movf	___aodiv@sign^(0+1280),w,c
  6534  003238  B4D8               	btfsc	status,2,c
  6535  00323A  D010               	goto	l4510
  6536  00323C  1E1C               	comf	(___aodiv@quotient+7)^(0+1280),f,c
  6537  00323E  1E1B               	comf	(___aodiv@quotient+6)^(0+1280),f,c
  6538  003240  1E1A               	comf	(___aodiv@quotient+5)^(0+1280),f,c
  6539  003242  1E19               	comf	(___aodiv@quotient+4)^(0+1280),f,c
  6540  003244  1E18               	comf	(___aodiv@quotient+3)^(0+1280),f,c
  6541  003246  1E17               	comf	(___aodiv@quotient+2)^(0+1280),f,c
  6542  003248  1E16               	comf	(___aodiv@quotient+1)^(0+1280),f,c
  6543  00324A  6C15               	negf	___aodiv@quotient^(0+1280),c
  6544  00324C  0E00               	movlw	0
  6545  00324E  2216               	addwfc	(___aodiv@quotient+1)^(0+1280),f,c
  6546  003250  2217               	addwfc	(___aodiv@quotient+2)^(0+1280),f,c
  6547  003252  2218               	addwfc	(___aodiv@quotient+3)^(0+1280),f,c
  6548  003254  2219               	addwfc	(___aodiv@quotient+4)^(0+1280),f,c
  6549  003256  221A               	addwfc	(___aodiv@quotient+5)^(0+1280),f,c
  6550  003258  221B               	addwfc	(___aodiv@quotient+6)^(0+1280),f,c
  6551  00325A  221C               	addwfc	(___aodiv@quotient+7)^(0+1280),f,c
  6552  00325C                     l4510:
  6553  00325C  C515  F503         	movff	___aodiv@quotient,?___aodiv
  6554  003260  C516  F504         	movff	___aodiv@quotient+1,?___aodiv+1
  6555  003264  C517  F505         	movff	___aodiv@quotient+2,?___aodiv+2
  6556  003268  C518  F506         	movff	___aodiv@quotient+3,?___aodiv+3
  6557  00326C  C519  F507         	movff	___aodiv@quotient+4,?___aodiv+4
  6558  003270  C51A  F508         	movff	___aodiv@quotient+5,?___aodiv+5
  6559  003274  C51B  F509         	movff	___aodiv@quotient+6,?___aodiv+6
  6560  003278  C51C  F50A         	movff	___aodiv@quotient+7,?___aodiv+7
  6561  00327C  0012               	return		;funcret
  6562  00327E                     __end_of___aodiv:
  6563                           	callstack 0
  6564                           
  6565 ;; *************** function _ctoa *****************
  6566 ;; Defined at:
  6567 ;;		line 259 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c"
  6568 ;; Parameters:    Size  Location     Type
  6569 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
  6570 ;;		 -> NULL(0), 
  6571 ;;  c               1   15[COMRAM] unsigned char 
  6572 ;; Auto vars:     Size  Location     Type
  6573 ;;  w               2   19[COMRAM] int 
  6574 ;;  l               2   17[COMRAM] int 
  6575 ;; Return value:  Size  Location     Type
  6576 ;;                  2   13[COMRAM] int 
  6577 ;; Registers used:
  6578 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6579 ;; Tracked objects:
  6580 ;;		On entry : 3F/5
  6581 ;;		On exit  : 0/0
  6582 ;;		Unchanged: 0/0
  6583 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  6584 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6585 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6586 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6587 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6588 ;;Total ram usage:        8 bytes
  6589 ;; Hardware stack levels used: 1
  6590 ;; Hardware stack levels required when called: 6
  6591 ;; This function calls:
  6592 ;;		_fputc
  6593 ;; This function is called by:
  6594 ;;		_vfpfcnvrt
  6595 ;; This function uses a non-reentrant model
  6596 ;;
  6597                           
  6598                           	psect	text23
  6599  0037AC                     __ptext23:
  6600                           	callstack 0
  6601  0037AC                     _ctoa:
  6602                           	callstack 117
  6603                           
  6604                           ; BSR set to: 5
  6605                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 259: static int ctoa
      +                          (FILE *fp, char c);/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 26
      +                          0: {;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 261:     int l, 
      +                          w;;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 264:     w = width
      +                           ? width - 1 : width;
  6606                           
  6607                           ;incstack = 0
  6608  0037AC  51CB               	movf	_width& (0+255),w,b
  6609  0037AE  11CC               	iorwf	(_width+1)& (0+255),w,b
  6610  0037B0  A4D8               	btfss	status,2,c
  6611  0037B2  D005               	goto	l4636
  6612                           
  6613                           ; BSR set to: 5
  6614  0037B4  C5CB  F514         	movff	_width,ctoa@w
  6615  0037B8  C5CC  F515         	movff	_width+1,ctoa@w+1
  6616  0037BC  D006               	goto	l4638
  6617  0037BE                     l4636:
  6618                           
  6619                           ; BSR set to: 5
  6620  0037BE  0EFF               	movlw	255
  6621  0037C0  25CB               	addwf	_width& (0+255),w,b
  6622  0037C2  6E14               	movwf	ctoa@w^(0+1280),c
  6623  0037C4  0EFF               	movlw	255
  6624  0037C6  21CC               	addwfc	(_width+1)& (0+255),w,b
  6625  0037C8  6E15               	movwf	(ctoa@w+1)^(0+1280),c
  6626  0037CA                     l4638:
  6627                           
  6628                           ; BSR set to: 5
  6629                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 267:     if (flags &
      +                           (1 << 0)) {
  6630  0037CA  A05C               	btfss	_flags^(0+1280),0,c
  6631  0037CC  D009               	goto	l4642
  6632                           
  6633                           ; BSR set to: 5
  6634                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 268:         fputc(c
      +                          , fp);
  6635  0037CE  C510  F505         	movff	ctoa@c,fputc@c
  6636  0037D2  6A06               	clrf	(fputc@c+1)^(0+1280),c
  6637  0037D4  C50E  F507         	movff	ctoa@fp,fputc@fp
  6638  0037D8  C50F  F508         	movff	ctoa@fp+1,fputc@fp+1
  6639  0037DC  EC1D  F01D         	call	_fputc	;wreg free
  6640  0037E0                     l4642:
  6641                           
  6642                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 271:     w = (w < 0)
      +                           ? 0 : w;
  6643  0037E0  AE15               	btfss	(ctoa@w+1)^(0+1280),7,c
  6644  0037E2  D004               	goto	l1875
  6645  0037E4  0E00               	movlw	0
  6646  0037E6  6E15               	movwf	(ctoa@w+1)^(0+1280),c
  6647  0037E8  0E00               	movlw	0
  6648  0037EA  6E14               	movwf	ctoa@w^(0+1280),c
  6649  0037EC                     l1875:
  6650                           
  6651                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 272:     l = 0;
  6652  0037EC  0E00               	movlw	0
  6653  0037EE  6E13               	movwf	(ctoa@l+1)^(0+1280),c
  6654  0037F0  0E00               	movlw	0
  6655  0037F2  6E12               	movwf	ctoa@l^(0+1280),c
  6656                           
  6657                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 273:     while (l < 
      +                          w) {
  6658  0037F4  D00C               	goto	l4652
  6659  0037F6                     l4648:
  6660                           
  6661                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 274:         fputc('
      +                           ', fp);
  6662  0037F6  0E00               	movlw	0
  6663  0037F8  6E06               	movwf	(fputc@c+1)^(0+1280),c
  6664  0037FA  0E20               	movlw	32
  6665  0037FC  6E05               	movwf	fputc@c^(0+1280),c
  6666  0037FE  C50E  F507         	movff	ctoa@fp,fputc@fp
  6667  003802  C50F  F508         	movff	ctoa@fp+1,fputc@fp+1
  6668  003806  EC1D  F01D         	call	_fputc	;wreg free
  6669                           
  6670                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 275:         ++l;
  6671  00380A  4A12               	infsnz	ctoa@l^(0+1280),f,c
  6672  00380C  2A13               	incf	(ctoa@l+1)^(0+1280),f,c
  6673  00380E                     l4652:
  6674                           
  6675                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 273:     while (l < 
      +                          w) {
  6676  00380E  5014               	movf	ctoa@w^(0+1280),w,c
  6677  003810  5C12               	subwf	ctoa@l^(0+1280),w,c
  6678  003812  5013               	movf	(ctoa@l+1)^(0+1280),w,c
  6679  003814  0A80               	xorlw	128
  6680  003816  6E11               	movwf	??_ctoa^(0+1280),c
  6681  003818  5015               	movf	(ctoa@w+1)^(0+1280),w,c
  6682  00381A  0A80               	xorlw	128
  6683  00381C  5811               	subwfb	??_ctoa^(0+1280),w,c
  6684  00381E  A0D8               	btfss	status,0,c
  6685  003820  D7EA               	goto	l4648
  6686                           
  6687                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 278:     if (!(flags
      +                           & (1 << 0))) {
  6688  003822  B05C               	btfsc	_flags^(0+1280),0,c
  6689  003824  D009               	goto	l4656
  6690                           
  6691                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 279:         fputc(c
      +                          , fp);
  6692  003826  C510  F505         	movff	ctoa@c,fputc@c
  6693  00382A  6A06               	clrf	(fputc@c+1)^(0+1280),c
  6694  00382C  C50E  F507         	movff	ctoa@fp,fputc@fp
  6695  003830  C50F  F508         	movff	ctoa@fp+1,fputc@fp+1
  6696  003834  EC1D  F01D         	call	_fputc	;wreg free
  6697  003838                     l4656:
  6698                           
  6699                           ;/Applications/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 282:     return l+1;
  6700  003838  0E01               	movlw	1
  6701  00383A  2412               	addwf	ctoa@l^(0+1280),w,c
  6702  00383C  6E0E               	movwf	?_ctoa^(0+1280),c
  6703  00383E  0E00               	movlw	0
  6704  003840  2013               	addwfc	(ctoa@l+1)^(0+1280),w,c
  6705  003842  6E0F               	movwf	(?_ctoa+1)^(0+1280),c
  6706  003844  0012               	return		;funcret
  6707  003846                     __end_of_ctoa:
  6708                           	callstack 0
  6709                           
  6710 ;; *************** function _fputc *****************
  6711 ;; Defined at:
  6712 ;;		line 8 in file "/Applications/microchip/xc8/v2.32/pic/sources/c99/common/nf_fputc.c"
  6713 ;; Parameters:    Size  Location     Type
  6714 ;;  c               2    4[COMRAM] int 
  6715 ;;  fp              2    6[COMRAM] PTR struct _IO_FILE
  6716 ;;		 -> NULL(0), 
  6717 ;; Auto vars:     Size  Location     Type
  6718 ;;		None
  6719 ;; Return value:  Size  Location     Type
  6720 ;;                  2    4[COMRAM] int 
  6721 ;; Registers used:
  6722 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6723 ;; Tracked objects:
  6724 ;;		On entry : 0/5
  6725 ;;		On exit  : 0/0
  6726 ;;		Unchanged: 0/0
  6727 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  6728 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6730 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6731 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6732 ;;Total ram usage:        9 bytes
  6733 ;; Hardware stack levels used: 1
  6734 ;; Hardware stack levels required when called: 5
  6735 ;; This function calls:
  6736 ;;		_putch
  6737 ;; This function is called by:
  6738 ;;		_pad
  6739 ;;		_ctoa
  6740 ;;		_vfpfcnvrt
  6741 ;;		_fputs
  6742 ;; This function uses a non-reentrant model
  6743 ;;
  6744                           
  6745                           	psect	text24
  6746  003A3A                     __ptext24:
  6747                           	callstack 0
  6748  003A3A                     _fputc:
  6749                           	callstack 115
  6750                           
  6751                           ;incstack = 0
  6752  003A3A  5007               	movf	fputc@fp^(0+1280),w,c
  6753  003A3C  1008               	iorwf	(fputc@fp+1)^(0+1280),w,c
  6754  003A3E  B4D8               	btfsc	status,2,c
  6755  003A40  D004               	goto	u4210
  6756  003A42  5007               	movf	fputc@fp^(0+1280),w,c
  6757  003A44  1008               	iorwf	(fputc@fp+1)^(0+1280),w,c
  6758  003A46  A4D8               	btfss	status,2,c
  6759  003A48  D004               	goto	l4440
  6760  003A4A                     u4210:
  6761  003A4A  5005               	movf	fputc@c^(0+1280),w,c
  6762  003A4C  EC7D  F020         	call	_putch
  6763  003A50  0012               	return	
  6764  003A52                     l4440:
  6765  003A52  EE20 F004          	lfsr	2,4
  6766  003A56  5007               	movf	fputc@fp^(0+1280),w,c
  6767  003A58  26D9               	addwf	fsr2l,f,c
  6768  003A5A  5008               	movf	(fputc@fp+1)^(0+1280),w,c
  6769  003A5C  22DA               	addwfc	fsr2h,f,c
  6770  003A5E  50DE               	movf	postinc2,w,c
  6771  003A60  10DE               	iorwf	postinc2,w,c
  6772  003A62  B4D8               	btfsc	status,2,c
  6773  003A64  D016               	goto	u4230
  6774  003A66  EE20 F004          	lfsr	2,4
  6775  003A6A  5007               	movf	fputc@fp^(0+1280),w,c
  6776  003A6C  26D9               	addwf	fsr2l,f,c
  6777  003A6E  5008               	movf	(fputc@fp+1)^(0+1280),w,c
  6778  003A70  22DA               	addwfc	fsr2h,f,c
  6779  003A72  EE10 F002          	lfsr	1,2
  6780  003A76  5007               	movf	fputc@fp^(0+1280),w,c
  6781  003A78  26E1               	addwf	fsr1l,f,c
  6782  003A7A  5008               	movf	(fputc@fp+1)^(0+1280),w,c
  6783  003A7C  22E2               	addwfc	fsr1h,f,c
  6784  003A7E  50DE               	movf	postinc2,w,c
  6785  003A80  5CE6               	subwf	postinc1,w,c
  6786  003A82  50E6               	movf	postinc1,w,c
  6787  003A84  0A80               	xorlw	128
  6788  003A86  6E0D               	movwf	(??_fputc+4)^(0+1280),c
  6789  003A88  50DE               	movf	postinc2,w,c
  6790  003A8A  0A80               	xorlw	128
  6791  003A8C  580D               	subwfb	(??_fputc+4)^(0+1280),w,c
  6792  003A8E  B0D8               	btfsc	status,0,c
  6793  003A90  0012               	return	
  6794  003A92                     u4230:
  6795  003A92  EE20 F002          	lfsr	2,2
  6796  003A96  5007               	movf	fputc@fp^(0+1280),w,c
  6797  003A98  26D9               	addwf	fsr2l,f,c
  6798  003A9A  5008               	movf	(fputc@fp+1)^(0+1280),w,c
  6799  003A9C  22DA               	addwfc	fsr2h,f,c
  6800  003A9E  2ADE               	incf	postinc2,f,c
  6801  003AA0  0E00               	movlw	0
  6802  003AA2  22DD               	addwfc	postdec2,f,c
  6803  003AA4  0012               	return		;funcret
  6804  003AA6                     __end_of_fputc:
  6805                           	callstack 0
  6806                           
  6807 ;; *************** function _putch *****************
  6808 ;; Defined at:
  6809 ;;		line 184 in file "mcc_generated_files/uart1.c"
  6810 ;; Parameters:    Size  Location     Type
  6811 ;;  txData          1    wreg     unsigned char 
  6812 ;; Auto vars:     Size  Location     Type
  6813 ;;  txData          1    3[COMRAM] unsigned char 
  6814 ;; Return value:  Size  Location     Type
  6815 ;;                  1    wreg      void 
  6816 ;; Registers used:
  6817 ;;		wreg, status,2, cstack
  6818 ;; Tracked objects:
  6819 ;;		On entry : 0/5
  6820 ;;		On exit  : 0/0
  6821 ;;		Unchanged: 0/0
  6822 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  6823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6824 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6826 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6827 ;;Total ram usage:        1 bytes
  6828 ;; Hardware stack levels used: 1
  6829 ;; Hardware stack levels required when called: 4
  6830 ;; This function calls:
  6831 ;;		_UART1_Write
  6832 ;; This function is called by:
  6833 ;;		_fputc
  6834 ;; This function uses a non-reentrant model
  6835 ;;
  6836                           
  6837                           	psect	text25
  6838  0040FA                     __ptext25:
  6839                           	callstack 0
  6840  0040FA                     _putch:
  6841                           	callstack 115
  6842                           
  6843                           ;incstack = 0
  6844                           ;putch@txData stored from wreg
  6845  0040FA  6E04               	movwf	putch@txData^(0+1280),c
  6846                           
  6847                           ;mcc_generated_files/uart1.c: 184: void putch(char txData);mcc_generated_files/uart1.c: 
      +                          185: {;mcc_generated_files/uart1.c: 186:     UART1_Write(txData);
  6848  0040FC  5004               	movf	putch@txData^(0+1280),w,c
  6849  0040FE  EC62  F020         	call	_UART1_Write
  6850  004102  0012               	return		;funcret
  6851  004104                     __end_of_putch:
  6852                           	callstack 0
  6853                           
  6854 ;; *************** function _UART1_Write *****************
  6855 ;; Defined at:
  6856 ;;		line 170 in file "mcc_generated_files/uart1.c"
  6857 ;; Parameters:    Size  Location     Type
  6858 ;;  txData          1    wreg     unsigned char 
  6859 ;; Auto vars:     Size  Location     Type
  6860 ;;  txData          1    2[COMRAM] unsigned char 
  6861 ;; Return value:  Size  Location     Type
  6862 ;;                  1    wreg      void 
  6863 ;; Registers used:
  6864 ;;		wreg
  6865 ;; Tracked objects:
  6866 ;;		On entry : 0/5
  6867 ;;		On exit  : 0/0
  6868 ;;		Unchanged: 0/0
  6869 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  6870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6871 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6873 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6874 ;;Total ram usage:        1 bytes
  6875 ;; Hardware stack levels used: 1
  6876 ;; Hardware stack levels required when called: 3
  6877 ;; This function calls:
  6878 ;;		Nothing
  6879 ;; This function is called by:
  6880 ;;		_putch
  6881 ;; This function uses a non-reentrant model
  6882 ;;
  6883                           
  6884                           	psect	text26
  6885  0040C4                     __ptext26:
  6886                           	callstack 0
  6887  0040C4                     _UART1_Write:
  6888                           	callstack 115
  6889                           
  6890                           ;incstack = 0
  6891                           ;UART1_Write@txData stored from wreg
  6892  0040C4  6E03               	movwf	UART1_Write@txData^(0+1280),c
  6893  0040C6                     
  6894                           ;mcc_generated_files/uart1.c: 172:     while(0 == PIR4bits.U1TXIF)
  6895                           
  6896                           ;mcc_generated_files/uart1.c: 173:     {;mcc_generated_files/uart1.c: 174:     }
  6897  0040C6  A2B7               	btfss	183,1,c	;volatile
  6898  0040C8  D7FE               	goto	l4428
  6899                           
  6900                           ;mcc_generated_files/uart1.c: 176:     U1TXB = txData;
  6901  0040CA  0061  F40C  F2A3   	movff	UART1_Write@txData,675	;volatile
  6902  0040D0  0012               	return		;funcret
  6903  0040D2                     __end_of_UART1_Write:
  6904                           	callstack 0
  6905                           
  6906 ;; *************** function _motor_control *****************
  6907 ;; Defined at:
  6908 ;;		line 38 in file "hardware.c"
  6909 ;; Parameters:    Size  Location     Type
  6910 ;;  speedsteps      1    wreg     unsigned char 
  6911 ;;  speed           1    4[COMRAM] unsigned char 
  6912 ;;  direction       1    5[COMRAM] unsigned char 
  6913 ;; Auto vars:     Size  Location     Type
  6914 ;;  speedsteps      1    6[COMRAM] unsigned char 
  6915 ;; Return value:  Size  Location     Type
  6916 ;;                  1    wreg      void 
  6917 ;; Registers used:
  6918 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6919 ;; Tracked objects:
  6920 ;;		On entry : 3F/5
  6921 ;;		On exit  : 0/0
  6922 ;;		Unchanged: 0/0
  6923 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  6924 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6925 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6927 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6928 ;;Total ram usage:        3 bytes
  6929 ;; Hardware stack levels used: 1
  6930 ;; Hardware stack levels required when called: 4
  6931 ;; This function calls:
  6932 ;;		_PWM1_16BIT_LoadBufferRegisters
  6933 ;;		_PWM1_16BIT_SetSlice1Output2DutyCycleRegister
  6934 ;; This function is called by:
  6935 ;;		_dcc_decode
  6936 ;; This function uses a non-reentrant model
  6937 ;;
  6938                           
  6939                           	psect	text27
  6940  003956                     __ptext27:
  6941                           	callstack 0
  6942  003956                     _motor_control:
  6943                           	callstack 121
  6944                           
  6945                           ;incstack = 0
  6946                           ;motor_control@speedsteps stored from wreg
  6947  003956  6E07               	movwf	motor_control@speedsteps^(0+1280),c
  6948                           
  6949                           ;hardware.c: 40:     if (speedsteps == 128) {
  6950  003958  0E80               	movlw	128
  6951  00395A  1807               	xorwf	motor_control@speedsteps^(0+1280),w,c
  6952  00395C  A4D8               	btfss	status,2,c
  6953  00395E  D00A               	goto	l3994
  6954                           
  6955                           ;hardware.c: 41:         if (speed == 1) {
  6956  003960  0405               	decf	motor_control@speed^(0+1280),w,c
  6957  003962  A4D8               	btfss	status,2,c
  6958  003964  D002               	goto	l3992
  6959                           
  6960                           ;hardware.c: 43:             speed = 0;
  6961  003966  0E00               	movlw	0
  6962  003968  6E05               	movwf	motor_control@speed^(0+1280),c
  6963  00396A                     l3992:
  6964                           
  6965                           ;hardware.c: 48:         motor_speed = (uint8_t)(speed << 1);
  6966  00396A  5005               	movf	motor_control@speed^(0+1280),w,c
  6967  00396C  2405               	addwf	motor_control@speed^(0+1280),w,c
  6968  00396E  0105               	movlb	5	; () banked
  6969  003970  6FDC               	movwf	_motor_speed& (0+255),b
  6970                           
  6971                           ;hardware.c: 49:     } else if (speedsteps == 28) {
  6972  003972  D00E               	goto	l4002
  6973  003974                     l3994:
  6974  003974  0E1C               	movlw	28
  6975  003976  1807               	xorwf	motor_control@speedsteps^(0+1280),w,c
  6976  003978  A4D8               	btfss	status,2,c
  6977  00397A  D006               	goto	l3998
  6978  00397C                     u3310:
  6979                           
  6980                           ;hardware.c: 51:         motor_speed = speed * 9;
  6981  00397C  5005               	movf	motor_control@speed^(0+1280),w,c
  6982  00397E  0D09               	mullw	9
  6983  003980  0061 F3CC  F5DC    	movff	prodl,_motor_speed
  6984                           
  6985                           ;hardware.c: 52:     } else if (speedsteps == 14) {
  6986  003986  D004               	goto	l4002
  6987  003988                     l3998:
  6988  003988  0E0E               	movlw	14
  6989  00398A  1807               	xorwf	motor_control@speedsteps^(0+1280),w,c
  6990  00398C  B4D8               	btfsc	status,2,c
  6991  00398E  D7F6               	goto	u3310
  6992  003990                     l4002:
  6993                           
  6994                           ;hardware.c: 57:     PWM1_16BIT_SetSlice1Output2DutyCycleRegister(motor_speed);
  6995  003990  C5DC  F503         	movff	_motor_speed,PWM1_16BIT_SetSlice1Output2DutyCycleRegister@registerValue
  6996  003994  6A04               	clrf	(PWM1_16BIT_SetSlice1Output2DutyCycleRegister@registerValue+1)^(0+1280),c
  6997  003996  EC69  F020         	call	_PWM1_16BIT_SetSlice1Output2DutyCycleRegister	;wreg free
  6998                           
  6999                           ;hardware.c: 58:     PWM1_16BIT_LoadBufferRegisters();
  7000  00399A  ECAB  F020         	call	_PWM1_16BIT_LoadBufferRegisters	;wreg free
  7001                           
  7002                           ;hardware.c: 62:     if (direction == 'F') {
  7003  00399E  0E46               	movlw	70
  7004  0039A0  1806               	xorwf	motor_control@direction^(0+1280),w,c
  7005  0039A2  A4D8               	btfss	status,2,c
  7006  0039A4  D008               	goto	l4012
  7007                           
  7008                           ;hardware.c: 63:         motor_direction = 0;
  7009  0039A6  0E00               	movlw	0
  7010  0039A8  0105               	movlb	5	; () banked
  7011  0039AA  6FDB               	movwf	_motor_direction& (0+255),b
  7012                           
  7013                           ; BSR set to: 5
  7014                           ;hardware.c: 64:         CWG1CON1 = CWG1CON1 & 0xFE;
  7015  0039AC  0103               	movlb	3	; () banked
  7016  0039AE  51C1               	movf	193,w,b	;volatile
  7017  0039B0  0BFE               	andlw	254
  7018  0039B2  6FC1               	movwf	193,b	;volatile
  7019                           
  7020                           ;hardware.c: 69:     } else if (direction == 'R') {
  7021  0039B4  0012               	return	
  7022  0039B6                     l4012:
  7023  0039B6  0E52               	movlw	82
  7024  0039B8  1806               	xorwf	motor_control@direction^(0+1280),w,c
  7025  0039BA  A4D8               	btfss	status,2,c
  7026  0039BC  0012               	return	
  7027                           
  7028                           ;hardware.c: 70:         motor_direction = 1;
  7029  0039BE  0E01               	movlw	1
  7030  0039C0  0105               	movlb	5	; () banked
  7031  0039C2  6FDB               	movwf	_motor_direction& (0+255),b
  7032                           
  7033                           ; BSR set to: 5
  7034                           ;hardware.c: 71:         CWG1CON1 = CWG1CON1 | 0x01;
  7035  0039C4  0103               	movlb	3	; () banked
  7036  0039C6  51C1               	movf	193,w,b	;volatile
  7037  0039C8  0901               	iorlw	1
  7038  0039CA  6FC1               	movwf	193,b	;volatile
  7039  0039CC  0012               	return		;funcret
  7040  0039CE                     __end_of_motor_control:
  7041                           	callstack 0
  7042                           
  7043 ;; *************** function _PWM1_16BIT_SetSlice1Output2DutyCycleRegister *****************
  7044 ;; Defined at:
  7045 ;;		line 156 in file "mcc_generated_files/pwm1_16bit.c"
  7046 ;; Parameters:    Size  Location     Type
  7047 ;;  registerValu    2    2[COMRAM] unsigned short 
  7048 ;; Auto vars:     Size  Location     Type
  7049 ;;		None
  7050 ;; Return value:  Size  Location     Type
  7051 ;;                  1    wreg      void 
  7052 ;; Registers used:
  7053 ;;		None
  7054 ;; Tracked objects:
  7055 ;;		On entry : 0/5
  7056 ;;		On exit  : 0/0
  7057 ;;		Unchanged: 0/0
  7058 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  7059 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7062 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7063 ;;Total ram usage:        2 bytes
  7064 ;; Hardware stack levels used: 1
  7065 ;; Hardware stack levels required when called: 3
  7066 ;; This function calls:
  7067 ;;		Nothing
  7068 ;; This function is called by:
  7069 ;;		_motor_control
  7070 ;; This function uses a non-reentrant model
  7071 ;;
  7072                           
  7073                           	psect	text28
  7074  0040D2                     __ptext28:
  7075                           	callstack 0
  7076  0040D2                     _PWM1_16BIT_SetSlice1Output2DutyCycleRegister:
  7077                           	callstack 121
  7078                           
  7079                           ;mcc_generated_files/pwm1_16bit.c: 156: void PWM1_16BIT_SetSlice1Output2DutyCycleRegiste
      +                          r(uint16_t registerValue);mcc_generated_files/pwm1_16bit.c: 157: {;mcc_generated_files/p
      +                          wm1_16bit.c: 158:     PWM1S1P2L = (uint8_t)(registerValue);
  7080                           
  7081                           ;incstack = 0
  7082  0040D2  0061  F40C  F46D   	movff	PWM1_16BIT_SetSlice1Output2DutyCycleRegister@registerValue,1133	;volatile
  7083                           
  7084                           ;mcc_generated_files/pwm1_16bit.c: 159:     PWM1S1P2H = (uint8_t)(registerValue >> 8);
  7085  0040D8  0061  F410  F46E   	movff	PWM1_16BIT_SetSlice1Output2DutyCycleRegister@registerValue+1,1134	;volatile
  7086  0040DE  0012               	return		;funcret
  7087  0040E0                     __end_of_PWM1_16BIT_SetSlice1Output2DutyCycleRegister:
  7088                           	callstack 0
  7089                           
  7090 ;; *************** function _PWM1_16BIT_LoadBufferRegisters *****************
  7091 ;; Defined at:
  7092 ;;		line 162 in file "mcc_generated_files/pwm1_16bit.c"
  7093 ;; Parameters:    Size  Location     Type
  7094 ;;		None
  7095 ;; Auto vars:     Size  Location     Type
  7096 ;;		None
  7097 ;; Return value:  Size  Location     Type
  7098 ;;                  1    wreg      void 
  7099 ;; Registers used:
  7100 ;;		None
  7101 ;; Tracked objects:
  7102 ;;		On entry : 0/5
  7103 ;;		On exit  : 0/0
  7104 ;;		Unchanged: 0/0
  7105 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  7106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7109 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7110 ;;Total ram usage:        0 bytes
  7111 ;; Hardware stack levels used: 1
  7112 ;; Hardware stack levels required when called: 3
  7113 ;; This function calls:
  7114 ;;		Nothing
  7115 ;; This function is called by:
  7116 ;;		_motor_control
  7117 ;; This function uses a non-reentrant model
  7118 ;;
  7119                           
  7120                           	psect	text29
  7121  004156                     __ptext29:
  7122                           	callstack 0
  7123  004156                     _PWM1_16BIT_LoadBufferRegisters:
  7124                           	callstack 121
  7125                           
  7126                           ;mcc_generated_files/pwm1_16bit.c: 165:     PWM1CONbits.LD = 1;
  7127                           
  7128                           ;incstack = 0
  7129  004156  8469               	bsf	105,2,c	;volatile
  7130  004158  0012               	return		;funcret
  7131  00415A                     __end_of_PWM1_16BIT_LoadBufferRegisters:
  7132                           	callstack 0
  7133                           
  7134 ;; *************** function _function_control *****************
  7135 ;; Defined at:
  7136 ;;		line 85 in file "hardware.c"
  7137 ;; Parameters:    Size  Location     Type
  7138 ;;		None
  7139 ;; Auto vars:     Size  Location     Type
  7140 ;;		None
  7141 ;; Return value:  Size  Location     Type
  7142 ;;                  1    wreg      void 
  7143 ;; Registers used:
  7144 ;;		wreg, status,2, status,0
  7145 ;; Tracked objects:
  7146 ;;		On entry : 3F/5
  7147 ;;		On exit  : 3F/5
  7148 ;;		Unchanged: 0/0
  7149 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  7150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7153 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7154 ;;Total ram usage:        0 bytes
  7155 ;; Hardware stack levels used: 1
  7156 ;; Hardware stack levels required when called: 3
  7157 ;; This function calls:
  7158 ;;		Nothing
  7159 ;; This function is called by:
  7160 ;;		_dcc_decode
  7161 ;; This function uses a non-reentrant model
  7162 ;;
  7163                           
  7164                           	psect	text30
  7165  003BE6                     __ptext30:
  7166                           	callstack 0
  7167  003BE6                     _function_control:
  7168                           	callstack 122
  7169                           
  7170                           ; BSR set to: 5
  7171                           ;hardware.c: 87:     if (my_dcc_functions[0]) {
  7172                           
  7173                           ;incstack = 0
  7174  003BE6  51AC               	movf	_my_dcc_functions& (0+255),w,b
  7175  003BE8  B4D8               	btfsc	status,2,c
  7176  003BEA  D009               	goto	l1103
  7177                           
  7178                           ; BSR set to: 5
  7179                           ;hardware.c: 88:         if (my_dcc_direction == 'F') {
  7180  003BEC  0E46               	movlw	70
  7181  003BEE  19F4               	xorwf	_my_dcc_direction& (0+255),w,b
  7182  003BF0  A4D8               	btfss	status,2,c
  7183  003BF2  D002               	goto	l1098
  7184                           
  7185                           ; BSR set to: 5
  7186                           
  7187                           ;hardware.c: 89:             do { LATBbits.LATB4 = 1; } while(0);
  7188  003BF4  88BF               	bsf	191,4,c	;volatile
  7189                           
  7190                           ;hardware.c: 90:             do { LATCbits.LATC7 = 0; } while(0);
  7191  003BF6  D004               	goto	l1105
  7192  003BF8                     l1098:
  7193                           
  7194                           ; BSR set to: 5
  7195  003BF8  98BF               	bcf	191,4,c	;volatile
  7196                           
  7197                           ; BSR set to: 5
  7198                           
  7199                           ;hardware.c: 93:             do { LATCbits.LATC7 = 1; } while(0);
  7200  003BFA  8EC0               	bsf	192,7,c	;volatile
  7201  003BFC  D002               	goto	l4022
  7202  003BFE                     l1103:
  7203                           
  7204                           ; BSR set to: 5
  7205  003BFE  98BF               	bcf	191,4,c	;volatile
  7206  003C00                     l1105:
  7207                           
  7208                           ; BSR set to: 5
  7209  003C00  9EC0               	bcf	192,7,c	;volatile
  7210  003C02                     l4022:
  7211                           
  7212                           ; BSR set to: 5
  7213                           ;hardware.c: 99:     if (my_dcc_functions[1]) { do { LATAbits.LATA2 = 1; } while(0); } e
      +                          lse { do { LATAbits.LATA2 = 0; } while(0); }
  7214  003C02  51AD               	movf	(_my_dcc_functions+1)& (0+255),w,b
  7215  003C04  B4D8               	btfsc	status,2,c
  7216  003C06  D002               	goto	l1111
  7217                           
  7218                           ; BSR set to: 5
  7219  003C08  84BE               	bsf	190,2,c	;volatile
  7220  003C0A  D001               	goto	l4024
  7221  003C0C                     l1111:
  7222                           
  7223                           ; BSR set to: 5
  7224  003C0C  94BE               	bcf	190,2,c	;volatile
  7225  003C0E                     l4024:
  7226                           
  7227                           ; BSR set to: 5
  7228                           ;hardware.c: 100:     if (my_dcc_functions[2]) { do { LATCbits.LATC3 = 1; } while(0); } 
      +                          else { do { LATCbits.LATC3 = 0; } while(0); }
  7229  003C0E  51AE               	movf	(_my_dcc_functions+2)& (0+255),w,b
  7230  003C10  B4D8               	btfsc	status,2,c
  7231  003C12  D002               	goto	l1117
  7232                           
  7233                           ; BSR set to: 5
  7234  003C14  86C0               	bsf	192,3,c	;volatile
  7235  003C16  D001               	goto	l4026
  7236  003C18                     l1117:
  7237                           
  7238                           ; BSR set to: 5
  7239  003C18  96C0               	bcf	192,3,c	;volatile
  7240  003C1A                     l4026:
  7241                           
  7242                           ; BSR set to: 5
  7243                           ;hardware.c: 101:     if (my_dcc_functions[3]) { do { LATCbits.LATC2 = 1; } while(0); } 
      +                          else { do { LATCbits.LATC2 = 0; } while(0); }
  7244  003C1A  51AF               	movf	(_my_dcc_functions+3)& (0+255),w,b
  7245  003C1C  B4D8               	btfsc	status,2,c
  7246  003C1E  D002               	goto	l1123
  7247                           
  7248                           ; BSR set to: 5
  7249  003C20  84C0               	bsf	192,2,c	;volatile
  7250  003C22  D001               	goto	l4028
  7251  003C24                     l1123:
  7252                           
  7253                           ; BSR set to: 5
  7254  003C24  94C0               	bcf	192,2,c	;volatile
  7255  003C26                     l4028:
  7256                           
  7257                           ; BSR set to: 5
  7258                           ;hardware.c: 102:     if (my_dcc_functions[4]) { do { LATCbits.LATC6 = 1; } while(0); } 
      +                          else { do { LATCbits.LATC6 = 0; } while(0); }
  7259  003C26  51B0               	movf	(_my_dcc_functions+4)& (0+255),w,b
  7260  003C28  B4D8               	btfsc	status,2,c
  7261  003C2A  D002               	goto	l1129
  7262                           
  7263                           ; BSR set to: 5
  7264  003C2C  8CC0               	bsf	192,6,c	;volatile
  7265  003C2E  D001               	goto	l4030
  7266  003C30                     l1129:
  7267                           
  7268                           ; BSR set to: 5
  7269  003C30  9CC0               	bcf	192,6,c	;volatile
  7270  003C32                     l4030:
  7271                           
  7272                           ; BSR set to: 5
  7273                           ;hardware.c: 103:     if (my_dcc_functions[5]) { do { LATAbits.LATA0 = 1; } while(0); } 
      +                          else { do { LATAbits.LATA0 = 0; } while(0); }
  7274  003C32  51B1               	movf	(_my_dcc_functions+5)& (0+255),w,b
  7275  003C34  B4D8               	btfsc	status,2,c
  7276  003C36  D002               	goto	l1135
  7277                           
  7278                           ; BSR set to: 5
  7279  003C38  80BE               	bsf	190,0,c	;volatile
  7280  003C3A  D001               	goto	l4032
  7281  003C3C                     l1135:
  7282                           
  7283                           ; BSR set to: 5
  7284  003C3C  90BE               	bcf	190,0,c	;volatile
  7285  003C3E                     l4032:
  7286                           
  7287                           ; BSR set to: 5
  7288                           ;hardware.c: 104:     if (my_dcc_functions[6]) { do { LATAbits.LATA1 = 1; } while(0); } 
      +                          else { do { LATAbits.LATA1 = 0; } while(0); }
  7289  003C3E  51B2               	movf	(_my_dcc_functions+6)& (0+255),w,b
  7290  003C40  B4D8               	btfsc	status,2,c
  7291  003C42  D002               	goto	l1141
  7292                           
  7293                           ; BSR set to: 5
  7294  003C44  82BE               	bsf	190,1,c	;volatile
  7295  003C46  0012               	return	
  7296  003C48                     l1141:
  7297                           
  7298                           ; BSR set to: 5
  7299  003C48  92BE               	bcf	190,1,c	;volatile
  7300                           
  7301                           ; BSR set to: 5
  7302  003C4A  0012               	return		;funcret
  7303  003C4C                     __end_of_function_control:
  7304                           	callstack 0
  7305                           
  7306 ;; *************** function _dcc_initialize *****************
  7307 ;; Defined at:
  7308 ;;		line 215 in file "dcc.c"
  7309 ;; Parameters:    Size  Location     Type
  7310 ;;		None
  7311 ;; Auto vars:     Size  Location     Type
  7312 ;;		None
  7313 ;; Return value:  Size  Location     Type
  7314 ;;                  1    wreg      void 
  7315 ;; Registers used:
  7316 ;;		wreg, status,2, status,0, cstack
  7317 ;; Tracked objects:
  7318 ;;		On entry : 0/5
  7319 ;;		On exit  : 3F/5
  7320 ;;		Unchanged: 0/0
  7321 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  7322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7324 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7325 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7326 ;;Total ram usage:        3 bytes
  7327 ;; Hardware stack levels used: 1
  7328 ;; Hardware stack levels required when called: 5
  7329 ;; This function calls:
  7330 ;;		_cv_read
  7331 ;; This function is called by:
  7332 ;;		_main
  7333 ;;		_dcc_decode
  7334 ;; This function uses a non-reentrant model
  7335 ;;
  7336                           
  7337                           	psect	text31
  7338  003CFC                     __ptext31:
  7339                           	callstack 0
  7340  003CFC                     _dcc_initialize:
  7341                           	callstack 121
  7342                           
  7343                           ;dcc.c: 217:     cv_cv29 = cv_read(29);
  7344                           
  7345                           ; BSR set to: 5
  7346                           ;incstack = 0
  7347  003CFC  0E00               	movlw	0
  7348  003CFE  6E06               	movwf	(cv_read@cv+1)^(0+1280),c
  7349  003D00  0E1D               	movlw	29
  7350  003D02  6E05               	movwf	cv_read@cv^(0+1280),c
  7351  003D04  EC37  F020         	call	_cv_read	;wreg free
  7352  003D08  0105               	movlb	5	; () banked
  7353  003D0A  6FDD               	movwf	_cv_cv29& (0+255),b
  7354                           
  7355                           ; BSR set to: 5
  7356                           ;dcc.c: 220:     if (cv_cv29 & 0x20) {
  7357  003D0C  ABDD               	btfss	_cv_cv29& (0+255),5,b
  7358  003D0E  D014               	goto	l3922
  7359                           
  7360                           ; BSR set to: 5
  7361                           ;dcc.c: 221:         my_dcc_address = ((uint16_t)cv_read(18) << 8) | (uint16_t)cv_read(1
      +                          7);
  7362  003D10  0E00               	movlw	0
  7363  003D12  6E06               	movwf	(cv_read@cv+1)^(0+1280),c
  7364  003D14  0E11               	movlw	17
  7365  003D16  6E05               	movwf	cv_read@cv^(0+1280),c
  7366  003D18  EC37  F020         	call	_cv_read	;wreg free
  7367  003D1C  6E07               	movwf	??_dcc_initialize^(0+1280),c
  7368  003D1E  0E00               	movlw	0
  7369  003D20  6E06               	movwf	(cv_read@cv+1)^(0+1280),c
  7370  003D22  0E12               	movlw	18
  7371  003D24  6E05               	movwf	cv_read@cv^(0+1280),c
  7372  003D26  EC37  F020         	call	_cv_read	;wreg free
  7373  003D2A  6E08               	movwf	(??_dcc_initialize+1)^(0+1280),c
  7374  003D2C  5007               	movf	??_dcc_initialize^(0+1280),w,c
  7375  003D2E  0105               	movlb	5	; () banked
  7376  003D30  6FD9               	movwf	_my_dcc_address& (0+255),b
  7377  003D32  C508  F5DA         	movff	??_dcc_initialize+1,_my_dcc_address+1
  7378                           
  7379                           ;dcc.c: 222:     } else {
  7380  003D36  0012               	return	
  7381  003D38                     l3922:
  7382                           
  7383                           ; BSR set to: 5
  7384                           ;dcc.c: 223:         my_dcc_address = cv_read(1);
  7385  003D38  0E00               	movlw	0
  7386  003D3A  6E06               	movwf	(cv_read@cv+1)^(0+1280),c
  7387  003D3C  0E01               	movlw	1
  7388  003D3E  6E05               	movwf	cv_read@cv^(0+1280),c
  7389  003D40  EC37  F020         	call	_cv_read	;wreg free
  7390  003D44  6E07               	movwf	??_dcc_initialize^(0+1280),c
  7391  003D46  5007               	movf	??_dcc_initialize^(0+1280),w,c
  7392  003D48  0105               	movlb	5	; () banked
  7393  003D4A  6FD9               	movwf	_my_dcc_address& (0+255),b
  7394  003D4C  6BDA               	clrf	(_my_dcc_address+1)& (0+255),b
  7395                           
  7396                           ; BSR set to: 5
  7397  003D4E  0012               	return		;funcret
  7398  003D50                     __end_of_dcc_initialize:
  7399                           	callstack 0
  7400                           
  7401 ;; *************** function _cv_check *****************
  7402 ;; Defined at:
  7403 ;;		line 172 in file "cv.c"
  7404 ;; Parameters:    Size  Location     Type
  7405 ;;		None
  7406 ;; Auto vars:     Size  Location     Type
  7407 ;;		None
  7408 ;; Return value:  Size  Location     Type
  7409 ;;                  1    wreg      void 
  7410 ;; Registers used:
  7411 ;;		wreg, status,2, status,0, cstack
  7412 ;; Tracked objects:
  7413 ;;		On entry : 3F/5
  7414 ;;		On exit  : 0/0
  7415 ;;		Unchanged: 0/0
  7416 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  7417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7420 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7421 ;;Total ram usage:        0 bytes
  7422 ;; Hardware stack levels used: 1
  7423 ;; Hardware stack levels required when called: 6
  7424 ;; This function calls:
  7425 ;;		_cv_factory_defaults
  7426 ;;		_cv_read
  7427 ;; This function is called by:
  7428 ;;		_main
  7429 ;; This function uses a non-reentrant model
  7430 ;;
  7431                           
  7432                           	psect	text32
  7433  003F3C                     __ptext32:
  7434                           	callstack 0
  7435  003F3C                     _cv_check:
  7436                           	callstack 120
  7437                           
  7438                           ; BSR set to: 5
  7439                           ;cv.c: 181:     if ((cv_read(7) == 167) &&
  7440                           
  7441                           ; BSR set to: 5
  7442                           ;incstack = 0
  7443  003F3C  0E00               	movlw	0
  7444  003F3E  6E06               	movwf	(cv_read@cv+1)^(0+1280),c
  7445  003F40  0E07               	movlw	7
  7446  003F42  6E05               	movwf	cv_read@cv^(0+1280),c
  7447  003F44  EC37  F020         	call	_cv_read	;wreg free
  7448  003F48  0AA7               	xorlw	167
  7449  003F4A  A4D8               	btfss	status,2,c
  7450  003F4C  D009               	goto	l4074
  7451  003F4E  0E00               	movlw	0
  7452  003F50  6E06               	movwf	(cv_read@cv+1)^(0+1280),c
  7453  003F52  0E08               	movlw	8
  7454  003F54  6E05               	movwf	cv_read@cv^(0+1280),c
  7455  003F56  EC37  F020         	call	_cv_read	;wreg free
  7456  003F5A  0A0D               	xorlw	13
  7457  003F5C  B4D8               	btfsc	status,2,c
  7458  003F5E  0012               	return	
  7459  003F60                     l4074:
  7460                           
  7461                           ;cv.c: 185:         cv_factory_defaults();
  7462  003F60  ECF0  F012         	call	_cv_factory_defaults	;wreg free
  7463  003F64  0012               	return		;funcret
  7464  003F66                     __end_of_cv_check:
  7465                           	callstack 0
  7466                           
  7467 ;; *************** function _cv_read *****************
  7468 ;; Defined at:
  7469 ;;		line 52 in file "cv.c"
  7470 ;; Parameters:    Size  Location     Type
  7471 ;;  cv              2    4[COMRAM] unsigned short 
  7472 ;; Auto vars:     Size  Location     Type
  7473 ;;		None
  7474 ;; Return value:  Size  Location     Type
  7475 ;;                  1    wreg      unsigned char 
  7476 ;; Registers used:
  7477 ;;		wreg, status,2, status,0, cstack
  7478 ;; Tracked objects:
  7479 ;;		On entry : 0/5
  7480 ;;		On exit  : 0/0
  7481 ;;		Unchanged: 0/0
  7482 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  7483 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7486 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7487 ;;Total ram usage:        2 bytes
  7488 ;; Hardware stack levels used: 1
  7489 ;; Hardware stack levels required when called: 4
  7490 ;; This function calls:
  7491 ;;		_DATAEE_ReadByte
  7492 ;; This function is called by:
  7493 ;;		_cv_check
  7494 ;;		_dcc_initialize
  7495 ;;		_dcc_decode
  7496 ;; This function uses a non-reentrant model
  7497 ;;
  7498                           
  7499                           	psect	text33
  7500  00406E                     __ptext33:
  7501                           	callstack 0
  7502  00406E                     _cv_read:
  7503                           	callstack 121
  7504                           
  7505                           ;cv.c: 54:     if (cv > 255) {
  7506                           
  7507                           ;incstack = 0
  7508  00406E  0406               	decf	(cv_read@cv+1)^(0+1280),w,c
  7509  004070  A0D8               	btfss	status,0,c
  7510  004072  D002               	goto	l3832
  7511                           
  7512                           ;cv.c: 55:         return 0;
  7513  004074  0E00               	movlw	0
  7514  004076  0012               	return	
  7515  004078                     l3832:
  7516                           
  7517                           ;cv.c: 60:     return (uint8_t)DATAEE_ReadByte(cv);
  7518  004078  C505  F503         	movff	cv_read@cv,DATAEE_ReadByte@bAdd
  7519  00407C  C506  F504         	movff	cv_read@cv+1,DATAEE_ReadByte@bAdd+1
  7520  004080  EC0D  F020         	call	_DATAEE_ReadByte	;wreg free
  7521  004084  0012               	return		;funcret
  7522  004086                     __end_of_cv_read:
  7523                           	callstack 0
  7524                           
  7525 ;; *************** function _DATAEE_ReadByte *****************
  7526 ;; Defined at:
  7527 ;;		line 264 in file "mcc_generated_files/memory.c"
  7528 ;; Parameters:    Size  Location     Type
  7529 ;;  bAdd            2    2[COMRAM] unsigned short 
  7530 ;; Auto vars:     Size  Location     Type
  7531 ;;		None
  7532 ;; Return value:  Size  Location     Type
  7533 ;;                  1    wreg      unsigned char 
  7534 ;; Registers used:
  7535 ;;		wreg, status,2
  7536 ;; Tracked objects:
  7537 ;;		On entry : 0/5
  7538 ;;		On exit  : 3F/0
  7539 ;;		Unchanged: 0/0
  7540 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  7541 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7544 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7545 ;;Total ram usage:        2 bytes
  7546 ;; Hardware stack levels used: 1
  7547 ;; Hardware stack levels required when called: 3
  7548 ;; This function calls:
  7549 ;;		Nothing
  7550 ;; This function is called by:
  7551 ;;		_cv_read
  7552 ;; This function uses a non-reentrant model
  7553 ;;
  7554                           
  7555                           	psect	text34
  7556  00401A                     __ptext34:
  7557                           	callstack 0
  7558  00401A                     _DATAEE_ReadByte:
  7559                           	callstack 121
  7560                           
  7561                           ;mcc_generated_files/memory.c: 264: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 265: {;mcc_generated_files/memory.c: 267:     NVMADRU = 0x38;
  7562                           
  7563                           ;incstack = 0
  7564  00401A  0E38               	movlw	56
  7565  00401C  0100               	movlb	0	; () banked
  7566  00401E  6F45               	movwf	69,b	;volatile
  7567                           
  7568                           ; BSR set to: 0
  7569                           ;mcc_generated_files/memory.c: 268:     NVMADRH = (uint8_t) ((bAdd & 0xFF00) >> 8);
  7570  004020  0061  F410  F044   	movff	DATAEE_ReadByte@bAdd+1,68	;volatile
  7571                           
  7572                           ; BSR set to: 0
  7573                           ;mcc_generated_files/memory.c: 269:     NVMADRL = (uint8_t) (bAdd & 0x00FF);
  7574  004026  0061  F40C  F043   	movff	DATAEE_ReadByte@bAdd,67	;volatile
  7575                           
  7576                           ;mcc_generated_files/memory.c: 272:     NVMCON1bits.NVMCMD = 0b000;
  7577  00402C  0EF8               	movlw	-8
  7578  00402E  1741               	andwf	65,f,b	;volsfr
  7579                           
  7580                           ; BSR set to: 0
  7581                           ;mcc_generated_files/memory.c: 273:     NVMCON0bits.GO = 1;
  7582  004030  8140               	bsf	64,0,b	;volatile
  7583                           
  7584                           ;mcc_generated_files/memory.c: 275:     return NVMDATL;
  7585  004032  5146               	movf	70,w,b	;volatile
  7586                           
  7587                           ; BSR set to: 0
  7588  004034  0012               	return		;funcret
  7589  004036                     __end_of_DATAEE_ReadByte:
  7590                           	callstack 0
  7591                           
  7592 ;; *************** function _cv_factory_defaults *****************
  7593 ;; Defined at:
  7594 ;;		line 69 in file "cv.c"
  7595 ;; Parameters:    Size  Location     Type
  7596 ;;		None
  7597 ;; Auto vars:     Size  Location     Type
  7598 ;;		None
  7599 ;; Return value:  Size  Location     Type
  7600 ;;                  1    wreg      void 
  7601 ;; Registers used:
  7602 ;;		wreg, status,2, status,0, cstack
  7603 ;; Tracked objects:
  7604 ;;		On entry : 0/5
  7605 ;;		On exit  : 0/0
  7606 ;;		Unchanged: 0/0
  7607 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  7608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7611 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7612 ;;Total ram usage:        0 bytes
  7613 ;; Hardware stack levels used: 1
  7614 ;; Hardware stack levels required when called: 5
  7615 ;; This function calls:
  7616 ;;		_cv_write
  7617 ;; This function is called by:
  7618 ;;		_cv_check
  7619 ;;		_dcc_decode
  7620 ;; This function uses a non-reentrant model
  7621 ;;
  7622                           
  7623                           	psect	text35
  7624  0025E0                     __ptext35:
  7625                           	callstack 0
  7626  0025E0                     _cv_factory_defaults:
  7627                           	callstack 120
  7628                           
  7629                           ;cv.c: 77:     cv_write(1, 3);
  7630                           
  7631                           ; BSR set to: 0
  7632                           ;incstack = 0
  7633  0025E0  0E00               	movlw	0
  7634  0025E2  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  7635  0025E4  0E01               	movlw	1
  7636  0025E6  6E07               	movwf	cv_write@cv^(0+1280),c
  7637  0025E8  0E03               	movlw	3
  7638  0025EA  6E09               	movwf	cv_write@value^(0+1280),c
  7639  0025EC  EC43  F020         	call	_cv_write	;wreg free
  7640                           
  7641                           ;cv.c: 78:     cv_write(2, 0);
  7642  0025F0  0E00               	movlw	0
  7643  0025F2  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  7644  0025F4  0E02               	movlw	2
  7645  0025F6  6E07               	movwf	cv_write@cv^(0+1280),c
  7646  0025F8  0E00               	movlw	0
  7647  0025FA  6E09               	movwf	cv_write@value^(0+1280),c
  7648  0025FC  EC43  F020         	call	_cv_write	;wreg free
  7649                           
  7650                           ;cv.c: 79:     cv_write(3, 0);
  7651  002600  0E00               	movlw	0
  7652  002602  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  7653  002604  0E03               	movlw	3
  7654  002606  6E07               	movwf	cv_write@cv^(0+1280),c
  7655  002608  0E00               	movlw	0
  7656  00260A  6E09               	movwf	cv_write@value^(0+1280),c
  7657  00260C  EC43  F020         	call	_cv_write	;wreg free
  7658                           
  7659                           ;cv.c: 80:     cv_write(4, 0);
  7660  002610  0E00               	movlw	0
  7661  002612  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  7662  002614  0E04               	movlw	4
  7663  002616  6E07               	movwf	cv_write@cv^(0+1280),c
  7664  002618  0E00               	movlw	0
  7665  00261A  6E09               	movwf	cv_write@value^(0+1280),c
  7666  00261C  EC43  F020         	call	_cv_write	;wreg free
  7667                           
  7668                           ;cv.c: 81:     cv_write(5, 0);
  7669  002620  0E00               	movlw	0
  7670  002622  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  7671  002624  0E05               	movlw	5
  7672  002626  6E07               	movwf	cv_write@cv^(0+1280),c
  7673  002628  0E00               	movlw	0
  7674  00262A  6E09               	movwf	cv_write@value^(0+1280),c
  7675  00262C  EC43  F020         	call	_cv_write	;wreg free
  7676                           
  7677                           ;cv.c: 82:     cv_write(6, 0);
  7678  002630  0E00               	movlw	0
  7679  002632  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  7680  002634  0E06               	movlw	6
  7681  002636  6E07               	movwf	cv_write@cv^(0+1280),c
  7682  002638  0E00               	movlw	0
  7683  00263A  6E09               	movwf	cv_write@value^(0+1280),c
  7684  00263C  EC43  F020         	call	_cv_write	;wreg free
  7685                           
  7686                           ;cv.c: 83:     cv_write(7, 167);
  7687  002640  0E00               	movlw	0
  7688  002642  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  7689  002644  0E07               	movlw	7
  7690  002646  6E07               	movwf	cv_write@cv^(0+1280),c
  7691  002648  0EA7               	movlw	167
  7692  00264A  6E09               	movwf	cv_write@value^(0+1280),c
  7693  00264C  EC43  F020         	call	_cv_write	;wreg free
  7694                           
  7695                           ;cv.c: 84:     cv_write(8, 13);
  7696  002650  0E00               	movlw	0
  7697  002652  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  7698  002654  0E08               	movlw	8
  7699  002656  6E07               	movwf	cv_write@cv^(0+1280),c
  7700  002658  0E0D               	movlw	13
  7701  00265A  6E09               	movwf	cv_write@value^(0+1280),c
  7702  00265C  EC43  F020         	call	_cv_write	;wreg free
  7703                           
  7704                           ;cv.c: 85:     cv_write(9, 0);
  7705  002660  0E00               	movlw	0
  7706  002662  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  7707  002664  0E09               	movlw	9
  7708  002666  6E07               	movwf	cv_write@cv^(0+1280),c
  7709  002668  0E00               	movlw	0
  7710  00266A  6E09               	movwf	cv_write@value^(0+1280),c
  7711  00266C  EC43  F020         	call	_cv_write	;wreg free
  7712                           
  7713                           ;cv.c: 86:     cv_write(10, 0);
  7714  002670  0E00               	movlw	0
  7715  002672  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  7716  002674  0E0A               	movlw	10
  7717  002676  6E07               	movwf	cv_write@cv^(0+1280),c
  7718  002678  0E00               	movlw	0
  7719  00267A  6E09               	movwf	cv_write@value^(0+1280),c
  7720  00267C  EC43  F020         	call	_cv_write	;wreg free
  7721                           
  7722                           ;cv.c: 87:     cv_write(11, 0);
  7723  002680  0E00               	movlw	0
  7724  002682  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  7725  002684  0E0B               	movlw	11
  7726  002686  6E07               	movwf	cv_write@cv^(0+1280),c
  7727  002688  0E00               	movlw	0
  7728  00268A  6E09               	movwf	cv_write@value^(0+1280),c
  7729  00268C  EC43  F020         	call	_cv_write	;wreg free
  7730                           
  7731                           ;cv.c: 88:     cv_write(12, 0);
  7732  002690  0E00               	movlw	0
  7733  002692  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  7734  002694  0E0C               	movlw	12
  7735  002696  6E07               	movwf	cv_write@cv^(0+1280),c
  7736  002698  0E00               	movlw	0
  7737  00269A  6E09               	movwf	cv_write@value^(0+1280),c
  7738  00269C  EC43  F020         	call	_cv_write	;wreg free
  7739                           
  7740                           ;cv.c: 89:     cv_write(13, 0);
  7741  0026A0  0E00               	movlw	0
  7742  0026A2  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  7743  0026A4  0E0D               	movlw	13
  7744  0026A6  6E07               	movwf	cv_write@cv^(0+1280),c
  7745  0026A8  0E00               	movlw	0
  7746  0026AA  6E09               	movwf	cv_write@value^(0+1280),c
  7747  0026AC  EC43  F020         	call	_cv_write	;wreg free
  7748                           
  7749                           ;cv.c: 90:     cv_write(14, 0);
  7750  0026B0  0E00               	movlw	0
  7751  0026B2  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  7752  0026B4  0E0E               	movlw	14
  7753  0026B6  6E07               	movwf	cv_write@cv^(0+1280),c
  7754  0026B8  0E00               	movlw	0
  7755  0026BA  6E09               	movwf	cv_write@value^(0+1280),c
  7756  0026BC  EC43  F020         	call	_cv_write	;wreg free
  7757                           
  7758                           ;cv.c: 91:     cv_write(15, 0);
  7759  0026C0  0E00               	movlw	0
  7760  0026C2  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  7761  0026C4  0E0F               	movlw	15
  7762  0026C6  6E07               	movwf	cv_write@cv^(0+1280),c
  7763  0026C8  0E00               	movlw	0
  7764  0026CA  6E09               	movwf	cv_write@value^(0+1280),c
  7765  0026CC  EC43  F020         	call	_cv_write	;wreg free
  7766                           
  7767                           ;cv.c: 92:     cv_write(16, 0);
  7768  0026D0  0E00               	movlw	0
  7769  0026D2  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  7770  0026D4  0E10               	movlw	16
  7771  0026D6  6E07               	movwf	cv_write@cv^(0+1280),c
  7772  0026D8  0E00               	movlw	0
  7773  0026DA  6E09               	movwf	cv_write@value^(0+1280),c
  7774  0026DC  EC43  F020         	call	_cv_write	;wreg free
  7775                           
  7776                           ;cv.c: 93:     cv_write(17, 0x00);
  7777  0026E0  0E00               	movlw	0
  7778  0026E2  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  7779  0026E4  0E11               	movlw	17
  7780  0026E6  6E07               	movwf	cv_write@cv^(0+1280),c
  7781  0026E8  0E00               	movlw	0
  7782  0026EA  6E09               	movwf	cv_write@value^(0+1280),c
  7783  0026EC  EC43  F020         	call	_cv_write	;wreg free
  7784                           
  7785                           ;cv.c: 94:     cv_write(18, 0x00);
  7786  0026F0  0E00               	movlw	0
  7787  0026F2  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  7788  0026F4  0E12               	movlw	18
  7789  0026F6  6E07               	movwf	cv_write@cv^(0+1280),c
  7790  0026F8  0E00               	movlw	0
  7791  0026FA  6E09               	movwf	cv_write@value^(0+1280),c
  7792  0026FC  EC43  F020         	call	_cv_write	;wreg free
  7793                           
  7794                           ;cv.c: 95:     cv_write(19, 0);
  7795  002700  0E00               	movlw	0
  7796  002702  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  7797  002704  0E13               	movlw	19
  7798  002706  6E07               	movwf	cv_write@cv^(0+1280),c
  7799  002708  0E00               	movlw	0
  7800  00270A  6E09               	movwf	cv_write@value^(0+1280),c
  7801  00270C  EC43  F020         	call	_cv_write	;wreg free
  7802                           
  7803                           ;cv.c: 96:     cv_write(21, 0xFF);
  7804  002710  0E00               	movlw	0
  7805  002712  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  7806  002714  0E15               	movlw	21
  7807  002716  6E07               	movwf	cv_write@cv^(0+1280),c
  7808  002718  0EFF               	movlw	255
  7809  00271A  6E09               	movwf	cv_write@value^(0+1280),c
  7810  00271C  EC43  F020         	call	_cv_write	;wreg free
  7811                           
  7812                           ;cv.c: 97:     cv_write(22, 0x3F);
  7813  002720  0E00               	movlw	0
  7814  002722  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  7815  002724  0E16               	movlw	22
  7816  002726  6E07               	movwf	cv_write@cv^(0+1280),c
  7817  002728  0E3F               	movlw	63
  7818  00272A  6E09               	movwf	cv_write@value^(0+1280),c
  7819  00272C  EC43  F020         	call	_cv_write	;wreg free
  7820                           
  7821                           ;cv.c: 98:     cv_write(23, 0);
  7822  002730  0E00               	movlw	0
  7823  002732  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  7824  002734  0E17               	movlw	23
  7825  002736  6E07               	movwf	cv_write@cv^(0+1280),c
  7826  002738  0E00               	movlw	0
  7827  00273A  6E09               	movwf	cv_write@value^(0+1280),c
  7828  00273C  EC43  F020         	call	_cv_write	;wreg free
  7829                           
  7830                           ;cv.c: 99:     cv_write(24, 0);
  7831  002740  0E00               	movlw	0
  7832  002742  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  7833  002744  0E18               	movlw	24
  7834  002746  6E07               	movwf	cv_write@cv^(0+1280),c
  7835  002748  0E00               	movlw	0
  7836  00274A  6E09               	movwf	cv_write@value^(0+1280),c
  7837  00274C  EC43  F020         	call	_cv_write	;wreg free
  7838                           
  7839                           ;cv.c: 100:     cv_write(25, 0);
  7840  002750  0E00               	movlw	0
  7841  002752  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  7842  002754  0E19               	movlw	25
  7843  002756  6E07               	movwf	cv_write@cv^(0+1280),c
  7844  002758  0E00               	movlw	0
  7845  00275A  6E09               	movwf	cv_write@value^(0+1280),c
  7846  00275C  EC43  F020         	call	_cv_write	;wreg free
  7847                           
  7848                           ;cv.c: 101:     cv_write(27, 0);
  7849  002760  0E00               	movlw	0
  7850  002762  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  7851  002764  0E1B               	movlw	27
  7852  002766  6E07               	movwf	cv_write@cv^(0+1280),c
  7853  002768  0E00               	movlw	0
  7854  00276A  6E09               	movwf	cv_write@value^(0+1280),c
  7855  00276C  EC43  F020         	call	_cv_write	;wreg free
  7856                           
  7857                           ;cv.c: 102:     cv_write(28, 0);
  7858  002770  0E00               	movlw	0
  7859  002772  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  7860  002774  0E1C               	movlw	28
  7861  002776  6E07               	movwf	cv_write@cv^(0+1280),c
  7862  002778  0E00               	movlw	0
  7863  00277A  6E09               	movwf	cv_write@value^(0+1280),c
  7864  00277C  EC43  F020         	call	_cv_write	;wreg free
  7865                           
  7866                           ;cv.c: 103:     cv_write(29, 0x02);
  7867  002780  0E00               	movlw	0
  7868  002782  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  7869  002784  0E1D               	movlw	29
  7870  002786  6E07               	movwf	cv_write@cv^(0+1280),c
  7871  002788  0E02               	movlw	2
  7872  00278A  6E09               	movwf	cv_write@value^(0+1280),c
  7873  00278C  EC43  F020         	call	_cv_write	;wreg free
  7874                           
  7875                           ;cv.c: 104:     cv_write(30, 0);
  7876  002790  0E00               	movlw	0
  7877  002792  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  7878  002794  0E1E               	movlw	30
  7879  002796  6E07               	movwf	cv_write@cv^(0+1280),c
  7880  002798  0E00               	movlw	0
  7881  00279A  6E09               	movwf	cv_write@value^(0+1280),c
  7882  00279C  EC43  F020         	call	_cv_write	;wreg free
  7883                           
  7884                           ;cv.c: 105:     cv_write(31, 0);
  7885  0027A0  0E00               	movlw	0
  7886  0027A2  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  7887  0027A4  0E1F               	movlw	31
  7888  0027A6  6E07               	movwf	cv_write@cv^(0+1280),c
  7889  0027A8  0E00               	movlw	0
  7890  0027AA  6E09               	movwf	cv_write@value^(0+1280),c
  7891  0027AC  EC43  F020         	call	_cv_write	;wreg free
  7892                           
  7893                           ;cv.c: 106:     cv_write(32, 0);
  7894  0027B0  0E00               	movlw	0
  7895  0027B2  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  7896  0027B4  0E20               	movlw	32
  7897  0027B6  6E07               	movwf	cv_write@cv^(0+1280),c
  7898  0027B8  0E00               	movlw	0
  7899  0027BA  6E09               	movwf	cv_write@value^(0+1280),c
  7900  0027BC  EC43  F020         	call	_cv_write	;wreg free
  7901                           
  7902                           ;cv.c: 107:     cv_write(33, 0x01);
  7903  0027C0  0E00               	movlw	0
  7904  0027C2  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  7905  0027C4  0E21               	movlw	33
  7906  0027C6  6E07               	movwf	cv_write@cv^(0+1280),c
  7907  0027C8  0E01               	movlw	1
  7908  0027CA  6E09               	movwf	cv_write@value^(0+1280),c
  7909  0027CC  EC43  F020         	call	_cv_write	;wreg free
  7910                           
  7911                           ;cv.c: 108:     cv_write(34, 0x02);
  7912  0027D0  0E00               	movlw	0
  7913  0027D2  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  7914  0027D4  0E22               	movlw	34
  7915  0027D6  6E07               	movwf	cv_write@cv^(0+1280),c
  7916  0027D8  0E02               	movlw	2
  7917  0027DA  6E09               	movwf	cv_write@value^(0+1280),c
  7918  0027DC  EC43  F020         	call	_cv_write	;wreg free
  7919                           
  7920                           ;cv.c: 109:     cv_write(35, 0x04);
  7921  0027E0  0E00               	movlw	0
  7922  0027E2  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  7923  0027E4  0E23               	movlw	35
  7924  0027E6  6E07               	movwf	cv_write@cv^(0+1280),c
  7925  0027E8  0E04               	movlw	4
  7926  0027EA  6E09               	movwf	cv_write@value^(0+1280),c
  7927  0027EC  EC43  F020         	call	_cv_write	;wreg free
  7928                           
  7929                           ;cv.c: 110:     cv_write(36, 0x08);
  7930  0027F0  0E00               	movlw	0
  7931  0027F2  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  7932  0027F4  0E24               	movlw	36
  7933  0027F6  6E07               	movwf	cv_write@cv^(0+1280),c
  7934  0027F8  0E08               	movlw	8
  7935  0027FA  6E09               	movwf	cv_write@value^(0+1280),c
  7936  0027FC  EC43  F020         	call	_cv_write	;wreg free
  7937                           
  7938                           ;cv.c: 111:     cv_write(37, 0x10);
  7939  002800  0E00               	movlw	0
  7940  002802  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  7941  002804  0E25               	movlw	37
  7942  002806  6E07               	movwf	cv_write@cv^(0+1280),c
  7943  002808  0E10               	movlw	16
  7944  00280A  6E09               	movwf	cv_write@value^(0+1280),c
  7945  00280C  EC43  F020         	call	_cv_write	;wreg free
  7946                           
  7947                           ;cv.c: 112:     cv_write(38, 0x04);
  7948  002810  0E00               	movlw	0
  7949  002812  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  7950  002814  0E26               	movlw	38
  7951  002816  6E07               	movwf	cv_write@cv^(0+1280),c
  7952  002818  0E04               	movlw	4
  7953  00281A  6E09               	movwf	cv_write@value^(0+1280),c
  7954  00281C  EC43  F020         	call	_cv_write	;wreg free
  7955                           
  7956                           ;cv.c: 113:     cv_write(39, 0x08);
  7957  002820  0E00               	movlw	0
  7958  002822  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  7959  002824  0E27               	movlw	39
  7960  002826  6E07               	movwf	cv_write@cv^(0+1280),c
  7961  002828  0E08               	movlw	8
  7962  00282A  6E09               	movwf	cv_write@value^(0+1280),c
  7963  00282C  EC43  F020         	call	_cv_write	;wreg free
  7964                           
  7965                           ;cv.c: 114:     cv_write(40, 0x10);
  7966  002830  0E00               	movlw	0
  7967  002832  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  7968  002834  0E28               	movlw	40
  7969  002836  6E07               	movwf	cv_write@cv^(0+1280),c
  7970  002838  0E10               	movlw	16
  7971  00283A  6E09               	movwf	cv_write@value^(0+1280),c
  7972  00283C  EC43  F020         	call	_cv_write	;wreg free
  7973                           
  7974                           ;cv.c: 115:     cv_write(41, 0x20);
  7975  002840  0E00               	movlw	0
  7976  002842  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  7977  002844  0E29               	movlw	41
  7978  002846  6E07               	movwf	cv_write@cv^(0+1280),c
  7979  002848  0E20               	movlw	32
  7980  00284A  6E09               	movwf	cv_write@value^(0+1280),c
  7981  00284C  EC43  F020         	call	_cv_write	;wreg free
  7982                           
  7983                           ;cv.c: 116:     cv_write(42, 0x40);
  7984  002850  0E00               	movlw	0
  7985  002852  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  7986  002854  0E2A               	movlw	42
  7987  002856  6E07               	movwf	cv_write@cv^(0+1280),c
  7988  002858  0E40               	movlw	64
  7989  00285A  6E09               	movwf	cv_write@value^(0+1280),c
  7990  00285C  EC43  F020         	call	_cv_write	;wreg free
  7991                           
  7992                           ;cv.c: 117:     cv_write(43, 0x10);
  7993  002860  0E00               	movlw	0
  7994  002862  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  7995  002864  0E2B               	movlw	43
  7996  002866  6E07               	movwf	cv_write@cv^(0+1280),c
  7997  002868  0E10               	movlw	16
  7998  00286A  6E09               	movwf	cv_write@value^(0+1280),c
  7999  00286C  EC43  F020         	call	_cv_write	;wreg free
  8000                           
  8001                           ;cv.c: 118:     cv_write(44, 0x20);
  8002  002870  0E00               	movlw	0
  8003  002872  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  8004  002874  0E2C               	movlw	44
  8005  002876  6E07               	movwf	cv_write@cv^(0+1280),c
  8006  002878  0E20               	movlw	32
  8007  00287A  6E09               	movwf	cv_write@value^(0+1280),c
  8008  00287C  EC43  F020         	call	_cv_write	;wreg free
  8009                           
  8010                           ;cv.c: 119:     cv_write(45, 0x40);
  8011  002880  0E00               	movlw	0
  8012  002882  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  8013  002884  0E2D               	movlw	45
  8014  002886  6E07               	movwf	cv_write@cv^(0+1280),c
  8015  002888  0E40               	movlw	64
  8016  00288A  6E09               	movwf	cv_write@value^(0+1280),c
  8017  00288C  EC43  F020         	call	_cv_write	;wreg free
  8018                           
  8019                           ;cv.c: 120:     cv_write(46, 0x80);
  8020  002890  0E00               	movlw	0
  8021  002892  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  8022  002894  0E2E               	movlw	46
  8023  002896  6E07               	movwf	cv_write@cv^(0+1280),c
  8024  002898  0E80               	movlw	128
  8025  00289A  6E09               	movwf	cv_write@value^(0+1280),c
  8026  00289C  EC43  F020         	call	_cv_write	;wreg free
  8027                           
  8028                           ;cv.c: 121:     cv_write(65, 0);
  8029  0028A0  0E00               	movlw	0
  8030  0028A2  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  8031  0028A4  0E41               	movlw	65
  8032  0028A6  6E07               	movwf	cv_write@cv^(0+1280),c
  8033  0028A8  0E00               	movlw	0
  8034  0028AA  6E09               	movwf	cv_write@value^(0+1280),c
  8035  0028AC  EC43  F020         	call	_cv_write	;wreg free
  8036                           
  8037                           ;cv.c: 122:     cv_write(66, 0);
  8038  0028B0  0E00               	movlw	0
  8039  0028B2  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  8040  0028B4  0E42               	movlw	66
  8041  0028B6  6E07               	movwf	cv_write@cv^(0+1280),c
  8042  0028B8  0E00               	movlw	0
  8043  0028BA  6E09               	movwf	cv_write@value^(0+1280),c
  8044  0028BC  EC43  F020         	call	_cv_write	;wreg free
  8045                           
  8046                           ;cv.c: 123:     cv_write(66, 0);
  8047  0028C0  0E00               	movlw	0
  8048  0028C2  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  8049  0028C4  0E42               	movlw	66
  8050  0028C6  6E07               	movwf	cv_write@cv^(0+1280),c
  8051  0028C8  0E00               	movlw	0
  8052  0028CA  6E09               	movwf	cv_write@value^(0+1280),c
  8053  0028CC  EC43  F020         	call	_cv_write	;wreg free
  8054                           
  8055                           ;cv.c: 124:     cv_write(67, 0);
  8056  0028D0  0E00               	movlw	0
  8057  0028D2  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  8058  0028D4  0E43               	movlw	67
  8059  0028D6  6E07               	movwf	cv_write@cv^(0+1280),c
  8060  0028D8  0E00               	movlw	0
  8061  0028DA  6E09               	movwf	cv_write@value^(0+1280),c
  8062  0028DC  EC43  F020         	call	_cv_write	;wreg free
  8063                           
  8064                           ;cv.c: 125:     cv_write(68, 0);
  8065  0028E0  0E00               	movlw	0
  8066  0028E2  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  8067  0028E4  0E44               	movlw	68
  8068  0028E6  6E07               	movwf	cv_write@cv^(0+1280),c
  8069  0028E8  0E00               	movlw	0
  8070  0028EA  6E09               	movwf	cv_write@value^(0+1280),c
  8071  0028EC  EC43  F020         	call	_cv_write	;wreg free
  8072                           
  8073                           ;cv.c: 126:     cv_write(69, 0);
  8074  0028F0  0E00               	movlw	0
  8075  0028F2  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  8076  0028F4  0E45               	movlw	69
  8077  0028F6  6E07               	movwf	cv_write@cv^(0+1280),c
  8078  0028F8  0E00               	movlw	0
  8079  0028FA  6E09               	movwf	cv_write@value^(0+1280),c
  8080  0028FC  EC43  F020         	call	_cv_write	;wreg free
  8081                           
  8082                           ;cv.c: 127:     cv_write(70, 0);
  8083  002900  0E00               	movlw	0
  8084  002902  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  8085  002904  0E46               	movlw	70
  8086  002906  6E07               	movwf	cv_write@cv^(0+1280),c
  8087  002908  0E00               	movlw	0
  8088  00290A  6E09               	movwf	cv_write@value^(0+1280),c
  8089  00290C  EC43  F020         	call	_cv_write	;wreg free
  8090                           
  8091                           ;cv.c: 128:     cv_write(71, 0);
  8092  002910  0E00               	movlw	0
  8093  002912  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  8094  002914  0E47               	movlw	71
  8095  002916  6E07               	movwf	cv_write@cv^(0+1280),c
  8096  002918  0E00               	movlw	0
  8097  00291A  6E09               	movwf	cv_write@value^(0+1280),c
  8098  00291C  EC43  F020         	call	_cv_write	;wreg free
  8099                           
  8100                           ;cv.c: 129:     cv_write(72, 0);
  8101  002920  0E00               	movlw	0
  8102  002922  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  8103  002924  0E48               	movlw	72
  8104  002926  6E07               	movwf	cv_write@cv^(0+1280),c
  8105  002928  0E00               	movlw	0
  8106  00292A  6E09               	movwf	cv_write@value^(0+1280),c
  8107  00292C  EC43  F020         	call	_cv_write	;wreg free
  8108                           
  8109                           ;cv.c: 130:     cv_write(73, 0);
  8110  002930  0E00               	movlw	0
  8111  002932  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  8112  002934  0E49               	movlw	73
  8113  002936  6E07               	movwf	cv_write@cv^(0+1280),c
  8114  002938  0E00               	movlw	0
  8115  00293A  6E09               	movwf	cv_write@value^(0+1280),c
  8116  00293C  EC43  F020         	call	_cv_write	;wreg free
  8117                           
  8118                           ;cv.c: 131:     cv_write(74, 0);
  8119  002940  0E00               	movlw	0
  8120  002942  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  8121  002944  0E4A               	movlw	74
  8122  002946  6E07               	movwf	cv_write@cv^(0+1280),c
  8123  002948  0E00               	movlw	0
  8124  00294A  6E09               	movwf	cv_write@value^(0+1280),c
  8125  00294C  EC43  F020         	call	_cv_write	;wreg free
  8126                           
  8127                           ;cv.c: 132:     cv_write(75, 0);
  8128  002950  0E00               	movlw	0
  8129  002952  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  8130  002954  0E4B               	movlw	75
  8131  002956  6E07               	movwf	cv_write@cv^(0+1280),c
  8132  002958  0E00               	movlw	0
  8133  00295A  6E09               	movwf	cv_write@value^(0+1280),c
  8134  00295C  EC43  F020         	call	_cv_write	;wreg free
  8135                           
  8136                           ;cv.c: 133:     cv_write(76, 0);
  8137  002960  0E00               	movlw	0
  8138  002962  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  8139  002964  0E4C               	movlw	76
  8140  002966  6E07               	movwf	cv_write@cv^(0+1280),c
  8141  002968  0E00               	movlw	0
  8142  00296A  6E09               	movwf	cv_write@value^(0+1280),c
  8143  00296C  EC43  F020         	call	_cv_write	;wreg free
  8144                           
  8145                           ;cv.c: 134:     cv_write(77, 0);
  8146  002970  0E00               	movlw	0
  8147  002972  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  8148  002974  0E4D               	movlw	77
  8149  002976  6E07               	movwf	cv_write@cv^(0+1280),c
  8150  002978  0E00               	movlw	0
  8151  00297A  6E09               	movwf	cv_write@value^(0+1280),c
  8152  00297C  EC43  F020         	call	_cv_write	;wreg free
  8153                           
  8154                           ;cv.c: 135:     cv_write(78, 0);
  8155  002980  0E00               	movlw	0
  8156  002982  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  8157  002984  0E4E               	movlw	78
  8158  002986  6E07               	movwf	cv_write@cv^(0+1280),c
  8159  002988  0E00               	movlw	0
  8160  00298A  6E09               	movwf	cv_write@value^(0+1280),c
  8161  00298C  EC43  F020         	call	_cv_write	;wreg free
  8162                           
  8163                           ;cv.c: 136:     cv_write(79, 0);
  8164  002990  0E00               	movlw	0
  8165  002992  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  8166  002994  0E4F               	movlw	79
  8167  002996  6E07               	movwf	cv_write@cv^(0+1280),c
  8168  002998  0E00               	movlw	0
  8169  00299A  6E09               	movwf	cv_write@value^(0+1280),c
  8170  00299C  EC43  F020         	call	_cv_write	;wreg free
  8171                           
  8172                           ;cv.c: 137:     cv_write(80, 0);
  8173  0029A0  0E00               	movlw	0
  8174  0029A2  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  8175  0029A4  0E50               	movlw	80
  8176  0029A6  6E07               	movwf	cv_write@cv^(0+1280),c
  8177  0029A8  0E00               	movlw	0
  8178  0029AA  6E09               	movwf	cv_write@value^(0+1280),c
  8179  0029AC  EC43  F020         	call	_cv_write	;wreg free
  8180                           
  8181                           ;cv.c: 138:     cv_write(81, 0);
  8182  0029B0  0E00               	movlw	0
  8183  0029B2  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  8184  0029B4  0E51               	movlw	81
  8185  0029B6  6E07               	movwf	cv_write@cv^(0+1280),c
  8186  0029B8  0E00               	movlw	0
  8187  0029BA  6E09               	movwf	cv_write@value^(0+1280),c
  8188  0029BC  EC43  F020         	call	_cv_write	;wreg free
  8189                           
  8190                           ;cv.c: 139:     cv_write(82, 0);
  8191  0029C0  0E00               	movlw	0
  8192  0029C2  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  8193  0029C4  0E52               	movlw	82
  8194  0029C6  6E07               	movwf	cv_write@cv^(0+1280),c
  8195  0029C8  0E00               	movlw	0
  8196  0029CA  6E09               	movwf	cv_write@value^(0+1280),c
  8197  0029CC  EC43  F020         	call	_cv_write	;wreg free
  8198                           
  8199                           ;cv.c: 140:     cv_write(83, 0);
  8200  0029D0  0E00               	movlw	0
  8201  0029D2  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  8202  0029D4  0E53               	movlw	83
  8203  0029D6  6E07               	movwf	cv_write@cv^(0+1280),c
  8204  0029D8  0E00               	movlw	0
  8205  0029DA  6E09               	movwf	cv_write@value^(0+1280),c
  8206  0029DC  EC43  F020         	call	_cv_write	;wreg free
  8207                           
  8208                           ;cv.c: 141:     cv_write(84, 0);
  8209  0029E0  0E00               	movlw	0
  8210  0029E2  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  8211  0029E4  0E54               	movlw	84
  8212  0029E6  6E07               	movwf	cv_write@cv^(0+1280),c
  8213  0029E8  0E00               	movlw	0
  8214  0029EA  6E09               	movwf	cv_write@value^(0+1280),c
  8215  0029EC  EC43  F020         	call	_cv_write	;wreg free
  8216                           
  8217                           ;cv.c: 142:     cv_write(85, 0);
  8218  0029F0  0E00               	movlw	0
  8219  0029F2  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  8220  0029F4  0E55               	movlw	85
  8221  0029F6  6E07               	movwf	cv_write@cv^(0+1280),c
  8222  0029F8  0E00               	movlw	0
  8223  0029FA  6E09               	movwf	cv_write@value^(0+1280),c
  8224  0029FC  EC43  F020         	call	_cv_write	;wreg free
  8225                           
  8226                           ;cv.c: 143:     cv_write(86, 0);
  8227  002A00  0E00               	movlw	0
  8228  002A02  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  8229  002A04  0E56               	movlw	86
  8230  002A06  6E07               	movwf	cv_write@cv^(0+1280),c
  8231  002A08  0E00               	movlw	0
  8232  002A0A  6E09               	movwf	cv_write@value^(0+1280),c
  8233  002A0C  EC43  F020         	call	_cv_write	;wreg free
  8234                           
  8235                           ;cv.c: 144:     cv_write(87, 0);
  8236  002A10  0E00               	movlw	0
  8237  002A12  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  8238  002A14  0E57               	movlw	87
  8239  002A16  6E07               	movwf	cv_write@cv^(0+1280),c
  8240  002A18  0E00               	movlw	0
  8241  002A1A  6E09               	movwf	cv_write@value^(0+1280),c
  8242  002A1C  EC43  F020         	call	_cv_write	;wreg free
  8243                           
  8244                           ;cv.c: 145:     cv_write(88, 0);
  8245  002A20  0E00               	movlw	0
  8246  002A22  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  8247  002A24  0E58               	movlw	88
  8248  002A26  6E07               	movwf	cv_write@cv^(0+1280),c
  8249  002A28  0E00               	movlw	0
  8250  002A2A  6E09               	movwf	cv_write@value^(0+1280),c
  8251  002A2C  EC43  F020         	call	_cv_write	;wreg free
  8252                           
  8253                           ;cv.c: 146:     cv_write(89, 0);
  8254  002A30  0E00               	movlw	0
  8255  002A32  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  8256  002A34  0E59               	movlw	89
  8257  002A36  6E07               	movwf	cv_write@cv^(0+1280),c
  8258  002A38  0E00               	movlw	0
  8259  002A3A  6E09               	movwf	cv_write@value^(0+1280),c
  8260  002A3C  EC43  F020         	call	_cv_write	;wreg free
  8261                           
  8262                           ;cv.c: 147:     cv_write(90, 0);
  8263  002A40  0E00               	movlw	0
  8264  002A42  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  8265  002A44  0E5A               	movlw	90
  8266  002A46  6E07               	movwf	cv_write@cv^(0+1280),c
  8267  002A48  0E00               	movlw	0
  8268  002A4A  6E09               	movwf	cv_write@value^(0+1280),c
  8269  002A4C  EC43  F020         	call	_cv_write	;wreg free
  8270                           
  8271                           ;cv.c: 148:     cv_write(91, 0);
  8272  002A50  0E00               	movlw	0
  8273  002A52  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  8274  002A54  0E5B               	movlw	91
  8275  002A56  6E07               	movwf	cv_write@cv^(0+1280),c
  8276  002A58  0E00               	movlw	0
  8277  002A5A  6E09               	movwf	cv_write@value^(0+1280),c
  8278  002A5C  EC43  F020         	call	_cv_write	;wreg free
  8279                           
  8280                           ;cv.c: 149:     cv_write(92, 0);
  8281  002A60  0E00               	movlw	0
  8282  002A62  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  8283  002A64  0E5C               	movlw	92
  8284  002A66  6E07               	movwf	cv_write@cv^(0+1280),c
  8285  002A68  0E00               	movlw	0
  8286  002A6A  6E09               	movwf	cv_write@value^(0+1280),c
  8287  002A6C  EC43  F020         	call	_cv_write	;wreg free
  8288                           
  8289                           ;cv.c: 150:     cv_write(93, 0);
  8290  002A70  0E00               	movlw	0
  8291  002A72  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  8292  002A74  0E5D               	movlw	93
  8293  002A76  6E07               	movwf	cv_write@cv^(0+1280),c
  8294  002A78  0E00               	movlw	0
  8295  002A7A  6E09               	movwf	cv_write@value^(0+1280),c
  8296  002A7C  EC43  F020         	call	_cv_write	;wreg free
  8297                           
  8298                           ;cv.c: 151:     cv_write(94, 0);
  8299  002A80  0E00               	movlw	0
  8300  002A82  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  8301  002A84  0E5E               	movlw	94
  8302  002A86  6E07               	movwf	cv_write@cv^(0+1280),c
  8303  002A88  0E00               	movlw	0
  8304  002A8A  6E09               	movwf	cv_write@value^(0+1280),c
  8305  002A8C  EC43  F020         	call	_cv_write	;wreg free
  8306                           
  8307                           ;cv.c: 152:     cv_write(95, 0);
  8308  002A90  0E00               	movlw	0
  8309  002A92  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  8310  002A94  0E5F               	movlw	95
  8311  002A96  6E07               	movwf	cv_write@cv^(0+1280),c
  8312  002A98  0E00               	movlw	0
  8313  002A9A  6E09               	movwf	cv_write@value^(0+1280),c
  8314  002A9C  EC43  F020         	call	_cv_write	;wreg free
  8315                           
  8316                           ;cv.c: 153:     cv_write(105, 0);
  8317  002AA0  0E00               	movlw	0
  8318  002AA2  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  8319  002AA4  0E69               	movlw	105
  8320  002AA6  6E07               	movwf	cv_write@cv^(0+1280),c
  8321  002AA8  0E00               	movlw	0
  8322  002AAA  6E09               	movwf	cv_write@value^(0+1280),c
  8323  002AAC  EC43  F020         	call	_cv_write	;wreg free
  8324                           
  8325                           ;cv.c: 154:     cv_write(106, 0);
  8326  002AB0  0E00               	movlw	0
  8327  002AB2  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  8328  002AB4  0E6A               	movlw	106
  8329  002AB6  6E07               	movwf	cv_write@cv^(0+1280),c
  8330  002AB8  0E00               	movlw	0
  8331  002ABA  6E09               	movwf	cv_write@value^(0+1280),c
  8332  002ABC  EC43  F020         	call	_cv_write	;wreg free
  8333                           
  8334                           ;cv.c: 155:     cv_write(107, 0);
  8335  002AC0  0E00               	movlw	0
  8336  002AC2  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  8337  002AC4  0E6B               	movlw	107
  8338  002AC6  6E07               	movwf	cv_write@cv^(0+1280),c
  8339  002AC8  0E00               	movlw	0
  8340  002ACA  6E09               	movwf	cv_write@value^(0+1280),c
  8341  002ACC  EC43  F020         	call	_cv_write	;wreg free
  8342                           
  8343                           ;cv.c: 156:     cv_write(108, 0);
  8344  002AD0  0E00               	movlw	0
  8345  002AD2  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  8346  002AD4  0E6C               	movlw	108
  8347  002AD6  6E07               	movwf	cv_write@cv^(0+1280),c
  8348  002AD8  0E00               	movlw	0
  8349  002ADA  6E09               	movwf	cv_write@value^(0+1280),c
  8350  002ADC  EC43  F020         	call	_cv_write	;wreg free
  8351                           
  8352                           ;cv.c: 157:     cv_write(109, 0);
  8353  002AE0  0E00               	movlw	0
  8354  002AE2  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  8355  002AE4  0E6D               	movlw	109
  8356  002AE6  6E07               	movwf	cv_write@cv^(0+1280),c
  8357  002AE8  0E00               	movlw	0
  8358  002AEA  6E09               	movwf	cv_write@value^(0+1280),c
  8359  002AEC  EC43  F020         	call	_cv_write	;wreg free
  8360                           
  8361                           ;cv.c: 158:     cv_write(110, 0);
  8362  002AF0  0E00               	movlw	0
  8363  002AF2  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  8364  002AF4  0E6E               	movlw	110
  8365  002AF6  6E07               	movwf	cv_write@cv^(0+1280),c
  8366  002AF8  0E00               	movlw	0
  8367  002AFA  6E09               	movwf	cv_write@value^(0+1280),c
  8368  002AFC  EC43  F020         	call	_cv_write	;wreg free
  8369                           
  8370                           ;cv.c: 159:     cv_write(111, 0);
  8371  002B00  0E00               	movlw	0
  8372  002B02  6E08               	movwf	(cv_write@cv+1)^(0+1280),c
  8373  002B04  0E6F               	movlw	111
  8374  002B06  6E07               	movwf	cv_write@cv^(0+1280),c
  8375  002B08  0E00               	movlw	0
  8376  002B0A  6E09               	movwf	cv_write@value^(0+1280),c
  8377  002B0C  EC43  F020         	call	_cv_write	;wreg free
  8378  002B10  0012               	return		;funcret
  8379  002B12                     __end_of_cv_factory_defaults:
  8380                           	callstack 0
  8381                           
  8382 ;; *************** function _cv_write *****************
  8383 ;; Defined at:
  8384 ;;		line 35 in file "cv.c"
  8385 ;; Parameters:    Size  Location     Type
  8386 ;;  cv              2    6[COMRAM] unsigned short 
  8387 ;;  value           1    8[COMRAM] unsigned char 
  8388 ;; Auto vars:     Size  Location     Type
  8389 ;;		None
  8390 ;; Return value:  Size  Location     Type
  8391 ;;                  1    wreg      void 
  8392 ;; Registers used:
  8393 ;;		wreg, status,2, status,0, cstack
  8394 ;; Tracked objects:
  8395 ;;		On entry : 0/5
  8396 ;;		On exit  : 0/0
  8397 ;;		Unchanged: 0/0
  8398 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  8399 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8402 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8403 ;;Total ram usage:        3 bytes
  8404 ;; Hardware stack levels used: 1
  8405 ;; Hardware stack levels required when called: 4
  8406 ;; This function calls:
  8407 ;;		_DATAEE_WriteByte
  8408 ;; This function is called by:
  8409 ;;		_cv_factory_defaults
  8410 ;;		_dcc_decode
  8411 ;; This function uses a non-reentrant model
  8412 ;;
  8413                           
  8414                           	psect	text36
  8415  004086                     __ptext36:
  8416                           	callstack 0
  8417  004086                     _cv_write:
  8418                           	callstack 121
  8419                           
  8420                           ;cv.c: 37:     if (cv > 255) {
  8421                           
  8422                           ;incstack = 0
  8423  004086  0408               	decf	(cv_write@cv+1)^(0+1280),w,c
  8424  004088  B0D8               	btfsc	status,0,c
  8425  00408A  0012               	return	
  8426                           
  8427                           ;cv.c: 40:     DATAEE_WriteByte(cv, value);
  8428  00408C  C507  F503         	movff	cv_write@cv,DATAEE_WriteByte@bAdd
  8429  004090  C508  F504         	movff	cv_write@cv+1,DATAEE_WriteByte@bAdd+1
  8430  004094  C509  F505         	movff	cv_write@value,DATAEE_WriteByte@bData
  8431  004098  ECCD  F01E         	call	_DATAEE_WriteByte	;wreg free
  8432  00409C  0012               	return		;funcret
  8433  00409E                     __end_of_cv_write:
  8434                           	callstack 0
  8435                           
  8436 ;; *************** function _DATAEE_WriteByte *****************
  8437 ;; Defined at:
  8438 ;;		line 231 in file "mcc_generated_files/memory.c"
  8439 ;; Parameters:    Size  Location     Type
  8440 ;;  bAdd            2    2[COMRAM] unsigned short 
  8441 ;;  bData           1    4[COMRAM] unsigned char 
  8442 ;; Auto vars:     Size  Location     Type
  8443 ;;  GIEBitValue     1    5[COMRAM] unsigned char 
  8444 ;; Return value:  Size  Location     Type
  8445 ;;                  1    wreg      void 
  8446 ;; Registers used:
  8447 ;;		wreg, status,2
  8448 ;; Tracked objects:
  8449 ;;		On entry : 0/5
  8450 ;;		On exit  : 3F/0
  8451 ;;		Unchanged: 0/0
  8452 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  8453 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8454 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8456 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8457 ;;Total ram usage:        4 bytes
  8458 ;; Hardware stack levels used: 1
  8459 ;; Hardware stack levels required when called: 3
  8460 ;; This function calls:
  8461 ;;		Nothing
  8462 ;; This function is called by:
  8463 ;;		_cv_write
  8464 ;; This function uses a non-reentrant model
  8465 ;;
  8466                           
  8467                           	psect	text37
  8468  003D9A                     __ptext37:
  8469                           	callstack 0
  8470  003D9A                     _DATAEE_WriteByte:
  8471                           	callstack 121
  8472                           
  8473                           ;mcc_generated_files/memory.c: 231: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 232: {;mcc_generated_files/memory.c: 233:     uint8_t GIEB
      +                          itValue = INTCON0bits.GIE;
  8474                           
  8475                           ;incstack = 0
  8476  003D9A  0E00               	movlw	0
  8477  003D9C  BED6               	btfsc	214,7,c	;volatile
  8478  003D9E  0E01               	movlw	1
  8479  003DA0  6E06               	movwf	DATAEE_WriteByte@GIEBitValue^(0+1280),c
  8480                           
  8481                           ;mcc_generated_files/memory.c: 236:     NVMADRU = 0x38;
  8482  003DA2  0E38               	movlw	56
  8483  003DA4  0100               	movlb	0	; () banked
  8484  003DA6  6F45               	movwf	69,b	;volatile
  8485                           
  8486                           ; BSR set to: 0
  8487                           ;mcc_generated_files/memory.c: 237:     NVMADRH = (uint8_t) ((bAdd & 0xFF00) >> 8);
  8488  003DA8  0061  F410  F044   	movff	DATAEE_WriteByte@bAdd+1,68	;volatile
  8489                           
  8490                           ; BSR set to: 0
  8491                           ;mcc_generated_files/memory.c: 238:     NVMADRL = (uint8_t) (bAdd & 0x00FF);
  8492  003DAE  0061  F40C  F043   	movff	DATAEE_WriteByte@bAdd,67	;volatile
  8493                           
  8494                           ; BSR set to: 0
  8495                           ;mcc_generated_files/memory.c: 241:     NVMDATL = bData;
  8496  003DB4  0061  F414  F046   	movff	DATAEE_WriteByte@bData,70	;volatile
  8497                           
  8498                           ; BSR set to: 0
  8499                           ;mcc_generated_files/memory.c: 244:     NVMCON1bits.NVMCMD = 0b011;
  8500  003DBA  5141               	movf	65,w,b	;volsfr
  8501  003DBC  0BF8               	andlw	-8
  8502  003DBE  0903               	iorlw	3
  8503  003DC0  6F41               	movwf	65,b	;volsfr
  8504                           
  8505                           ; BSR set to: 0
  8506                           ;mcc_generated_files/memory.c: 247:     INTCON0bits.GIE = 0;
  8507  003DC2  9ED6               	bcf	214,7,c	;volatile
  8508                           
  8509                           ; BSR set to: 0
  8510                           ;mcc_generated_files/memory.c: 250:     NVMLOCK = 0x55;
  8511  003DC4  0E55               	movlw	85
  8512  003DC6  6F42               	movwf	66,b	;volatile
  8513                           
  8514                           ; BSR set to: 0
  8515                           ;mcc_generated_files/memory.c: 251:     NVMLOCK = 0xAA;
  8516  003DC8  0EAA               	movlw	170
  8517  003DCA  6F42               	movwf	66,b	;volatile
  8518                           
  8519                           ; BSR set to: 0
  8520                           ;mcc_generated_files/memory.c: 254:     NVMCON0bits.GO = 1;
  8521  003DCC  8140               	bsf	64,0,b	;volatile
  8522  003DCE                     l592:
  8523                           
  8524                           ; BSR set to: 0
  8525  003DCE  B140               	btfsc	64,0,b	;volatile
  8526  003DD0  D7FE               	goto	l592
  8527                           
  8528                           ; BSR set to: 0
  8529                           ;mcc_generated_files/memory.c: 258:     INTCON0bits.GIE = GIEBitValue;
  8530  003DD2  B006               	btfsc	DATAEE_WriteByte@GIEBitValue^(0+1280),0,c
  8531  003DD4  D002               	bra	u3015
  8532  003DD6  9ED6               	bcf	214,7,c	;volatile
  8533  003DD8  D001               	bra	u3016
  8534  003DDA                     u3015:
  8535  003DDA  8ED6               	bsf	214,7,c	;volatile
  8536  003DDC                     u3016:
  8537                           
  8538                           ;mcc_generated_files/memory.c: 261:     NVMCON1bits.NVMCMD = 0b000;
  8539  003DDC  0EF8               	movlw	-8
  8540  003DDE  0100               	movlb	0	; () banked
  8541  003DE0  1741               	andwf	65,f,b	;volsfr
  8542                           
  8543                           ; BSR set to: 0
  8544  003DE2  0012               	return		;funcret
  8545  003DE4                     __end_of_DATAEE_WriteByte:
  8546                           	callstack 0
  8547                           
  8548 ;; *************** function _TMR2_StartTimer *****************
  8549 ;; Defined at:
  8550 ;;		line 114 in file "mcc_generated_files/tmr2.c"
  8551 ;; Parameters:    Size  Location     Type
  8552 ;;		None
  8553 ;; Auto vars:     Size  Location     Type
  8554 ;;		None
  8555 ;; Return value:  Size  Location     Type
  8556 ;;                  1    wreg      void 
  8557 ;; Registers used:
  8558 ;;		cstack
  8559 ;; Tracked objects:
  8560 ;;		On entry : 3F/5
  8561 ;;		On exit  : 3F/3
  8562 ;;		Unchanged: 0/0
  8563 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  8564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8567 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8568 ;;Total ram usage:        0 bytes
  8569 ;; Hardware stack levels used: 1
  8570 ;; Hardware stack levels required when called: 4
  8571 ;; This function calls:
  8572 ;;		_TMR2_Start
  8573 ;; This function is called by:
  8574 ;;		_main
  8575 ;; This function uses a non-reentrant model
  8576 ;;
  8577                           
  8578                           	psect	text38
  8579  00414A                     __ptext38:
  8580                           	callstack 0
  8581  00414A                     _TMR2_StartTimer:
  8582                           	callstack 122
  8583                           
  8584                           ; BSR set to: 5
  8585                           ;mcc_generated_files/tmr2.c: 116:     TMR2_Start();
  8586                           
  8587                           ; BSR set to: 0
  8588                           ;incstack = 0
  8589  00414A  ECA8  F020         	call	_TMR2_Start	;wreg free
  8590                           
  8591                           ; BSR set to: 3
  8592  00414E  0012               	return		;funcret
  8593  004150                     __end_of_TMR2_StartTimer:
  8594                           	callstack 0
  8595                           
  8596 ;; *************** function _TMR2_Start *****************
  8597 ;; Defined at:
  8598 ;;		line 108 in file "mcc_generated_files/tmr2.c"
  8599 ;; Parameters:    Size  Location     Type
  8600 ;;		None
  8601 ;; Auto vars:     Size  Location     Type
  8602 ;;		None
  8603 ;; Return value:  Size  Location     Type
  8604 ;;                  1    wreg      void 
  8605 ;; Registers used:
  8606 ;;		None
  8607 ;; Tracked objects:
  8608 ;;		On entry : 3F/5
  8609 ;;		On exit  : 3F/3
  8610 ;;		Unchanged: 0/0
  8611 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  8612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8616 ;;Total ram usage:        0 bytes
  8617 ;; Hardware stack levels used: 1
  8618 ;; Hardware stack levels required when called: 3
  8619 ;; This function calls:
  8620 ;;		Nothing
  8621 ;; This function is called by:
  8622 ;;		_TMR2_StartTimer
  8623 ;; This function uses a non-reentrant model
  8624 ;;
  8625                           
  8626                           	psect	text39
  8627  004150                     __ptext39:
  8628                           	callstack 0
  8629  004150                     _TMR2_Start:
  8630                           	callstack 122
  8631                           
  8632                           ; BSR set to: 5
  8633                           ;mcc_generated_files/tmr2.c: 111:     T2CONbits.TMR2ON = 1;
  8634                           
  8635                           ; BSR set to: 3
  8636                           ;incstack = 0
  8637  004150  0103               	movlb	3	; () banked
  8638  004152  8F1E               	bsf	30,7,b	;volatile
  8639                           
  8640                           ; BSR set to: 3
  8641  004154  0012               	return		;funcret
  8642  004156                     __end_of_TMR2_Start:
  8643                           	callstack 0
  8644                           
  8645 ;; *************** function _TMR0_StartTimer *****************
  8646 ;; Defined at:
  8647 ;;		line 80 in file "mcc_generated_files/tmr0.c"
  8648 ;; Parameters:    Size  Location     Type
  8649 ;;		None
  8650 ;; Auto vars:     Size  Location     Type
  8651 ;;		None
  8652 ;; Return value:  Size  Location     Type
  8653 ;;                  1    wreg      void 
  8654 ;; Registers used:
  8655 ;;		None
  8656 ;; Tracked objects:
  8657 ;;		On entry : 3F/3
  8658 ;;		On exit  : 3F/3
  8659 ;;		Unchanged: 0/0
  8660 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  8661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8664 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8665 ;;Total ram usage:        0 bytes
  8666 ;; Hardware stack levels used: 1
  8667 ;; Hardware stack levels required when called: 3
  8668 ;; This function calls:
  8669 ;;		Nothing
  8670 ;; This function is called by:
  8671 ;;		_main
  8672 ;; This function uses a non-reentrant model
  8673 ;;
  8674                           
  8675                           	psect	text40
  8676  00415A                     __ptext40:
  8677                           	callstack 0
  8678  00415A                     _TMR0_StartTimer:
  8679                           	callstack 123
  8680                           
  8681                           ; BSR set to: 3
  8682                           ;mcc_generated_files/tmr0.c: 83:     T0CON0bits.T0EN = 1;
  8683                           
  8684                           ; BSR set to: 3
  8685                           ;incstack = 0
  8686  00415A  8F1A               	bsf	26,7,b	;volatile
  8687                           
  8688                           ; BSR set to: 3
  8689  00415C  0012               	return		;funcret
  8690  00415E                     __end_of_TMR0_StartTimer:
  8691                           	callstack 0
  8692                           
  8693 ;; *************** function _TMR0_HasOverflowOccured *****************
  8694 ;; Defined at:
  8695 ;;		line 114 in file "mcc_generated_files/tmr0.c"
  8696 ;; Parameters:    Size  Location     Type
  8697 ;;		None
  8698 ;; Auto vars:     Size  Location     Type
  8699 ;;		None
  8700 ;; Return value:  Size  Location     Type
  8701 ;;                  1    wreg      _Bool 
  8702 ;; Registers used:
  8703 ;;		wreg
  8704 ;; Tracked objects:
  8705 ;;		On entry : 39/3
  8706 ;;		On exit  : 39/1
  8707 ;;		Unchanged: 38/0
  8708 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  8709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8712 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8713 ;;Total ram usage:        0 bytes
  8714 ;; Hardware stack levels used: 1
  8715 ;; Hardware stack levels required when called: 3
  8716 ;; This function calls:
  8717 ;;		Nothing
  8718 ;; This function is called by:
  8719 ;;		_main
  8720 ;; This function uses a non-reentrant model
  8721 ;;
  8722                           
  8723                           	psect	text41
  8724  0040EE                     __ptext41:
  8725                           	callstack 0
  8726  0040EE                     _TMR0_HasOverflowOccured:
  8727                           	callstack 123
  8728                           
  8729                           ;mcc_generated_files/tmr0.c: 117:     return(PIR3bits.TMR0IF);
  8730                           
  8731                           ; BSR set to: 3
  8732                           ;incstack = 0
  8733  0040EE  AEB6               	btfss	182,7,c	;volatile
  8734  0040F0  D002               	goto	u3450
  8735  0040F2  0E01               	movlw	1
  8736  0040F4  0012               	return	
  8737  0040F6                     u3450:
  8738  0040F6  0E00               	movlw	0
  8739  0040F8  0012               	return		;funcret
  8740  0040FA                     __end_of_TMR0_HasOverflowOccured:
  8741                           	callstack 0
  8742                           
  8743 ;; *************** function _SYSTEM_Initialize *****************
  8744 ;; Defined at:
  8745 ;;		line 50 in file "mcc_generated_files/mcc.c"
  8746 ;; Parameters:    Size  Location     Type
  8747 ;;		None
  8748 ;; Auto vars:     Size  Location     Type
  8749 ;;		None
  8750 ;; Return value:  Size  Location     Type
  8751 ;;                  1    wreg      void 
  8752 ;; Registers used:
  8753 ;;		wreg, status,2, status,0, cstack
  8754 ;; Tracked objects:
  8755 ;;		On entry : 0/0
  8756 ;;		On exit  : 3F/5
  8757 ;;		Unchanged: 0/0
  8758 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  8759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8763 ;;Total ram usage:        0 bytes
  8764 ;; Hardware stack levels used: 1
  8765 ;; Hardware stack levels required when called: 5
  8766 ;; This function calls:
  8767 ;;		_ADCC_Initialize
  8768 ;;		_CWG1_Initialize
  8769 ;;		_INTERRUPT_Initialize
  8770 ;;		_OSCILLATOR_Initialize
  8771 ;;		_PIN_MANAGER_Initialize
  8772 ;;		_PMD_Initialize
  8773 ;;		_PWM1_16BIT_Initialize
  8774 ;;		_TMR0_Initialize
  8775 ;;		_TMR2_Initialize
  8776 ;;		_UART1_Initialize
  8777 ;; This function is called by:
  8778 ;;		_main
  8779 ;; This function uses a non-reentrant model
  8780 ;;
  8781                           
  8782                           	psect	text42
  8783  003F66                     __ptext42:
  8784                           	callstack 0
  8785  003F66                     _SYSTEM_Initialize:
  8786                           	callstack 121
  8787                           
  8788                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  8789                           
  8790                           ;incstack = 0
  8791  003F66  ECAF  F020         	call	_INTERRUPT_Initialize	;wreg free
  8792                           
  8793                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  8794  003F6A  EC1B  F020         	call	_PMD_Initialize	;wreg free
  8795                           
  8796                           ; BSR set to: 0
  8797                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  8798  003F6E  EC6E  F01C         	call	_PIN_MANAGER_Initialize	;wreg free
  8799                           
  8800                           ; BSR set to: 2
  8801                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  8802  003F72  EC29  F020         	call	_OSCILLATOR_Initialize	;wreg free
  8803                           
  8804                           ; BSR set to: 0
  8805                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
  8806  003F76  EC26  F01E         	call	_ADCC_Initialize	;wreg free
  8807                           
  8808                           ; BSR set to: 3
  8809                           ;mcc_generated_files/mcc.c: 57:     TMR2_Initialize();
  8810  003F7A  EC88  F01F         	call	_TMR2_Initialize	;wreg free
  8811                           
  8812                           ; BSR set to: 3
  8813                           ;mcc_generated_files/mcc.c: 58:     TMR0_Initialize();
  8814  003F7E  EC4F  F020         	call	_TMR0_Initialize	;wreg free
  8815                           
  8816                           ; BSR set to: 3
  8817                           ;mcc_generated_files/mcc.c: 59:     CWG1_Initialize();
  8818  003F82  ECC8  F01F         	call	_CWG1_Initialize	;wreg free
  8819                           
  8820                           ; BSR set to: 3
  8821                           ;mcc_generated_files/mcc.c: 60:     UART1_Initialize();
  8822  003F86  ECBE  F01D         	call	_UART1_Initialize	;wreg free
  8823                           
  8824                           ; BSR set to: 5
  8825                           ;mcc_generated_files/mcc.c: 61:     PWM1_16BIT_Initialize();
  8826  003F8A  EC53  F01D         	call	_PWM1_16BIT_Initialize	;wreg free
  8827                           
  8828                           ; BSR set to: 5
  8829  003F8E  0012               	return		;funcret
  8830  003F90                     __end_of_SYSTEM_Initialize:
  8831                           	callstack 0
  8832                           
  8833 ;; *************** function _UART1_Initialize *****************
  8834 ;; Defined at:
  8835 ;;		line 66 in file "mcc_generated_files/uart1.c"
  8836 ;; Parameters:    Size  Location     Type
  8837 ;;		None
  8838 ;; Auto vars:     Size  Location     Type
  8839 ;;		None
  8840 ;; Return value:  Size  Location     Type
  8841 ;;                  1    wreg      void 
  8842 ;; Registers used:
  8843 ;;		wreg, status,2, status,0, cstack
  8844 ;; Tracked objects:
  8845 ;;		On entry : 3F/3
  8846 ;;		On exit  : 3F/5
  8847 ;;		Unchanged: 0/0
  8848 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  8849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8852 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8853 ;;Total ram usage:        0 bytes
  8854 ;; Hardware stack levels used: 1
  8855 ;; Hardware stack levels required when called: 4
  8856 ;; This function calls:
  8857 ;;		_UART1_SetErrorHandler
  8858 ;;		_UART1_SetFramingErrorHandler
  8859 ;;		_UART1_SetOverrunErrorHandler
  8860 ;; This function is called by:
  8861 ;;		_SYSTEM_Initialize
  8862 ;; This function uses a non-reentrant model
  8863 ;;
  8864                           
  8865                           	psect	text43
  8866  003B7C                     __ptext43:
  8867                           	callstack 0
  8868  003B7C                     _UART1_Initialize:
  8869                           	callstack 121
  8870                           
  8871                           ; BSR set to: 3
  8872                           ;mcc_generated_files/uart1.c: 73:     U1P1L = 0x00;
  8873                           
  8874                           ; BSR set to: 5
  8875                           ;incstack = 0
  8876  003B7C  0E00               	movlw	0
  8877  003B7E  0102               	movlb	2	; () banked
  8878  003B80  6FA5               	movwf	165,b	;volatile
  8879                           
  8880                           ;mcc_generated_files/uart1.c: 76:     U1P1H = 0x00;
  8881  003B82  0E00               	movlw	0
  8882  003B84  6FA6               	movwf	166,b	;volatile
  8883                           
  8884                           ;mcc_generated_files/uart1.c: 79:     U1P2L = 0x00;
  8885  003B86  0E00               	movlw	0
  8886  003B88  6FA7               	movwf	167,b	;volatile
  8887                           
  8888                           ;mcc_generated_files/uart1.c: 82:     U1P2H = 0x00;
  8889  003B8A  0E00               	movlw	0
  8890  003B8C  6FA8               	movwf	168,b	;volatile
  8891                           
  8892                           ;mcc_generated_files/uart1.c: 85:     U1P3L = 0x00;
  8893  003B8E  0E00               	movlw	0
  8894  003B90  6FA9               	movwf	169,b	;volatile
  8895                           
  8896                           ;mcc_generated_files/uart1.c: 88:     U1P3H = 0x00;
  8897  003B92  0E00               	movlw	0
  8898  003B94  6FAA               	movwf	170,b	;volatile
  8899                           
  8900                           ;mcc_generated_files/uart1.c: 91:     U1CON0 = 0xB0;
  8901  003B96  0EB0               	movlw	176
  8902  003B98  6FAB               	movwf	171,b	;volatile
  8903                           
  8904                           ;mcc_generated_files/uart1.c: 94:     U1CON1 = 0x80;
  8905  003B9A  0E80               	movlw	128
  8906  003B9C  6FAC               	movwf	172,b	;volatile
  8907                           
  8908                           ;mcc_generated_files/uart1.c: 97:     U1CON2 = 0x00;
  8909  003B9E  0E00               	movlw	0
  8910  003BA0  6FAD               	movwf	173,b	;volatile
  8911                           
  8912                           ;mcc_generated_files/uart1.c: 100:     U1BRGL = 0x8A;
  8913  003BA2  0E8A               	movlw	138
  8914  003BA4  6FAE               	movwf	174,b	;volatile
  8915                           
  8916                           ;mcc_generated_files/uart1.c: 103:     U1BRGH = 0x00;
  8917  003BA6  0E00               	movlw	0
  8918  003BA8  6FAF               	movwf	175,b	;volatile
  8919                           
  8920                           ;mcc_generated_files/uart1.c: 106:     U1FIFO = 0x00;
  8921  003BAA  0E00               	movlw	0
  8922  003BAC  6FB0               	movwf	176,b	;volatile
  8923                           
  8924                           ;mcc_generated_files/uart1.c: 109:     U1UIR = 0x00;
  8925  003BAE  0E00               	movlw	0
  8926  003BB0  6FB1               	movwf	177,b	;volatile
  8927                           
  8928                           ;mcc_generated_files/uart1.c: 112:     U1ERRIR = 0x00;
  8929  003BB2  0E00               	movlw	0
  8930  003BB4  6FB2               	movwf	178,b	;volatile
  8931                           
  8932                           ;mcc_generated_files/uart1.c: 115:     U1ERRIE = 0x00;
  8933  003BB6  0E00               	movlw	0
  8934  003BB8  6FB3               	movwf	179,b	;volatile
  8935                           
  8936                           ; BSR set to: 2
  8937                           ;mcc_generated_files/uart1.c: 118:     UART1_SetFramingErrorHandler(UART1_DefaultFraming
      +                          ErrorHandler);
  8938  003BBA  0E00               	movlw	0
  8939  003BBC  6E03               	movwf	UART1_SetFramingErrorHandler@interruptHandler^(0+1280),c
  8940  003BBE  0E00               	movlw	0
  8941  003BC0  6E04               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+1)^(0+1280),c
  8942  003BC2  EC87  F020         	call	_UART1_SetFramingErrorHandler	;wreg free
  8943                           
  8944                           ; BSR set to: 2
  8945                           ;mcc_generated_files/uart1.c: 119:     UART1_SetOverrunErrorHandler(UART1_DefaultOverrun
      +                          ErrorHandler);
  8946  003BC6  0E00               	movlw	0
  8947  003BC8  6E03               	movwf	UART1_SetOverrunErrorHandler@interruptHandler^(0+1280),c
  8948  003BCA  0E00               	movlw	0
  8949  003BCC  6E04               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+1)^(0+1280),c
  8950  003BCE  EC82  F020         	call	_UART1_SetOverrunErrorHandler	;wreg free
  8951                           
  8952                           ; BSR set to: 2
  8953                           ;mcc_generated_files/uart1.c: 120:     UART1_SetErrorHandler(UART1_DefaultErrorHandler);
  8954  003BD2  0E00               	movlw	0
  8955  003BD4  6E03               	movwf	UART1_SetErrorHandler@interruptHandler^(0+1280),c
  8956  003BD6  0E00               	movlw	0
  8957  003BD8  6E04               	movwf	(UART1_SetErrorHandler@interruptHandler+1)^(0+1280),c
  8958  003BDA  EC8C  F020         	call	_UART1_SetErrorHandler	;wreg free
  8959                           
  8960                           ; BSR set to: 2
  8961                           ;mcc_generated_files/uart1.c: 122:     uart1RxLastError.status = 0;
  8962  003BDE  0E00               	movlw	0
  8963  003BE0  0105               	movlb	5	; () banked
  8964  003BE2  6FE4               	movwf	_uart1RxLastError& (0+255),b	;volatile
  8965                           
  8966                           ; BSR set to: 5
  8967  003BE4  0012               	return		;funcret
  8968  003BE6                     __end_of_UART1_Initialize:
  8969                           	callstack 0
  8970                           
  8971 ;; *************** function _UART1_SetOverrunErrorHandler *****************
  8972 ;; Defined at:
  8973 ;;		line 204 in file "mcc_generated_files/uart1.c"
  8974 ;; Parameters:    Size  Location     Type
  8975 ;;  interruptHan    2    2[COMRAM] PTR FTN()void 
  8976 ;;		 -> UART1_DefaultOverrunErrorHandler(1), 
  8977 ;; Auto vars:     Size  Location     Type
  8978 ;;		None
  8979 ;; Return value:  Size  Location     Type
  8980 ;;                  1    wreg      void 
  8981 ;; Registers used:
  8982 ;;		wreg, status,2, status,0
  8983 ;; Tracked objects:
  8984 ;;		On entry : 3F/2
  8985 ;;		On exit  : 3F/2
  8986 ;;		Unchanged: 3F/0
  8987 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  8988 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8991 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8992 ;;Total ram usage:        2 bytes
  8993 ;; Hardware stack levels used: 1
  8994 ;; Hardware stack levels required when called: 3
  8995 ;; This function calls:
  8996 ;;		Nothing
  8997 ;; This function is called by:
  8998 ;;		_UART1_Initialize
  8999 ;; This function uses a non-reentrant model
  9000 ;;
  9001                           
  9002                           	psect	text44
  9003  004104                     __ptext44:
  9004                           	callstack 0
  9005  004104                     _UART1_SetOverrunErrorHandler:
  9006                           	callstack 121
  9007                           
  9008                           ; BSR set to: 2
  9009                           ;mcc_generated_files/uart1.c: 205:     UART1_OverrunErrorHandler = interruptHandler;
  9010                           
  9011                           ; BSR set to: 5
  9012                           ;incstack = 0
  9013  004104  C503  F5ED         	movff	UART1_SetOverrunErrorHandler@interruptHandler,_UART1_OverrunErrorHandler
  9014  004108  C504  F5EE         	movff	UART1_SetOverrunErrorHandler@interruptHandler+1,_UART1_OverrunErrorHandler+1
  9015                           
  9016                           ; BSR set to: 2
  9017  00410C  0012               	return		;funcret
  9018  00410E                     __end_of_UART1_SetOverrunErrorHandler:
  9019                           	callstack 0
  9020                           
  9021 ;; *************** function _UART1_SetFramingErrorHandler *****************
  9022 ;; Defined at:
  9023 ;;		line 200 in file "mcc_generated_files/uart1.c"
  9024 ;; Parameters:    Size  Location     Type
  9025 ;;  interruptHan    2    2[COMRAM] PTR FTN()void 
  9026 ;;		 -> UART1_DefaultFramingErrorHandler(1), 
  9027 ;; Auto vars:     Size  Location     Type
  9028 ;;		None
  9029 ;; Return value:  Size  Location     Type
  9030 ;;                  1    wreg      void 
  9031 ;; Registers used:
  9032 ;;		wreg, status,2, status,0
  9033 ;; Tracked objects:
  9034 ;;		On entry : 3F/2
  9035 ;;		On exit  : 3F/2
  9036 ;;		Unchanged: 3F/0
  9037 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  9038 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9041 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9042 ;;Total ram usage:        2 bytes
  9043 ;; Hardware stack levels used: 1
  9044 ;; Hardware stack levels required when called: 3
  9045 ;; This function calls:
  9046 ;;		Nothing
  9047 ;; This function is called by:
  9048 ;;		_UART1_Initialize
  9049 ;; This function uses a non-reentrant model
  9050 ;;
  9051                           
  9052                           	psect	text45
  9053  00410E                     __ptext45:
  9054                           	callstack 0
  9055  00410E                     _UART1_SetFramingErrorHandler:
  9056                           	callstack 121
  9057                           
  9058                           ; BSR set to: 2
  9059                           ;mcc_generated_files/uart1.c: 201:     UART1_FramingErrorHandler = interruptHandler;
  9060                           
  9061                           ; BSR set to: 2
  9062                           ;incstack = 0
  9063  00410E  C503  F5EF         	movff	UART1_SetFramingErrorHandler@interruptHandler,_UART1_FramingErrorHandler
  9064  004112  C504  F5F0         	movff	UART1_SetFramingErrorHandler@interruptHandler+1,_UART1_FramingErrorHandler+1
  9065                           
  9066                           ; BSR set to: 2
  9067  004116  0012               	return		;funcret
  9068  004118                     __end_of_UART1_SetFramingErrorHandler:
  9069                           	callstack 0
  9070                           
  9071 ;; *************** function _UART1_SetErrorHandler *****************
  9072 ;; Defined at:
  9073 ;;		line 208 in file "mcc_generated_files/uart1.c"
  9074 ;; Parameters:    Size  Location     Type
  9075 ;;  interruptHan    2    2[COMRAM] PTR FTN()void 
  9076 ;;		 -> UART1_DefaultErrorHandler(1), 
  9077 ;; Auto vars:     Size  Location     Type
  9078 ;;		None
  9079 ;; Return value:  Size  Location     Type
  9080 ;;                  1    wreg      void 
  9081 ;; Registers used:
  9082 ;;		wreg, status,2, status,0
  9083 ;; Tracked objects:
  9084 ;;		On entry : 3F/2
  9085 ;;		On exit  : 3F/2
  9086 ;;		Unchanged: 3F/0
  9087 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  9088 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9091 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9092 ;;Total ram usage:        2 bytes
  9093 ;; Hardware stack levels used: 1
  9094 ;; Hardware stack levels required when called: 3
  9095 ;; This function calls:
  9096 ;;		Nothing
  9097 ;; This function is called by:
  9098 ;;		_UART1_Initialize
  9099 ;; This function uses a non-reentrant model
  9100 ;;
  9101                           
  9102                           	psect	text46
  9103  004118                     __ptext46:
  9104                           	callstack 0
  9105  004118                     _UART1_SetErrorHandler:
  9106                           	callstack 121
  9107                           
  9108                           ; BSR set to: 2
  9109                           ;mcc_generated_files/uart1.c: 209:     UART1_ErrorHandler = interruptHandler;
  9110                           
  9111                           ; BSR set to: 2
  9112                           ;incstack = 0
  9113  004118  C503  F5EB         	movff	UART1_SetErrorHandler@interruptHandler,_UART1_ErrorHandler
  9114  00411C  C504  F5EC         	movff	UART1_SetErrorHandler@interruptHandler+1,_UART1_ErrorHandler+1
  9115                           
  9116                           ; BSR set to: 2
  9117  004120  0012               	return		;funcret
  9118  004122                     __end_of_UART1_SetErrorHandler:
  9119                           	callstack 0
  9120                           
  9121 ;; *************** function _TMR2_Initialize *****************
  9122 ;; Defined at:
  9123 ;;		line 64 in file "mcc_generated_files/tmr2.c"
  9124 ;; Parameters:    Size  Location     Type
  9125 ;;		None
  9126 ;; Auto vars:     Size  Location     Type
  9127 ;;		None
  9128 ;; Return value:  Size  Location     Type
  9129 ;;                  1    wreg      void 
  9130 ;; Registers used:
  9131 ;;		wreg, status,2, status,0, cstack
  9132 ;; Tracked objects:
  9133 ;;		On entry : 3F/3
  9134 ;;		On exit  : 3F/3
  9135 ;;		Unchanged: 0/0
  9136 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  9137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9140 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9141 ;;Total ram usage:        0 bytes
  9142 ;; Hardware stack levels used: 1
  9143 ;; Hardware stack levels required when called: 4
  9144 ;; This function calls:
  9145 ;;		_TMR2_SetInterruptHandler
  9146 ;; This function is called by:
  9147 ;;		_SYSTEM_Initialize
  9148 ;; This function uses a non-reentrant model
  9149 ;;
  9150                           
  9151                           	psect	text47
  9152  003F10                     __ptext47:
  9153                           	callstack 0
  9154  003F10                     _TMR2_Initialize:
  9155                           	callstack 121
  9156                           
  9157                           ; BSR set to: 3
  9158                           ;mcc_generated_files/tmr2.c: 69:     T2CLKCON = 0x03;
  9159                           
  9160                           ; BSR set to: 2
  9161                           ;incstack = 0
  9162  003F10  0E03               	movlw	3
  9163  003F12  6F20               	movwf	32,b	;volatile
  9164                           
  9165                           ;mcc_generated_files/tmr2.c: 72:     T2HLT = 0x0C;
  9166  003F14  0E0C               	movlw	12
  9167  003F16  6F1F               	movwf	31,b	;volatile
  9168                           
  9169                           ;mcc_generated_files/tmr2.c: 75:     T2RST = 0x00;
  9170  003F18  0E00               	movlw	0
  9171  003F1A  6F21               	movwf	33,b	;volatile
  9172                           
  9173                           ;mcc_generated_files/tmr2.c: 78:     T2PR = 0x77;
  9174  003F1C  0E77               	movlw	119
  9175  003F1E  6F1D               	movwf	29,b	;volatile
  9176                           
  9177                           ;mcc_generated_files/tmr2.c: 81:     T2TMR = 0x00;
  9178  003F20  0E00               	movlw	0
  9179  003F22  6F1C               	movwf	28,b	;volatile
  9180                           
  9181                           ; BSR set to: 3
  9182                           ;mcc_generated_files/tmr2.c: 84:     PIR3bits.TMR2IF = 0;
  9183  003F24  96B6               	bcf	182,3,c	;volatile
  9184                           
  9185                           ; BSR set to: 3
  9186                           ;mcc_generated_files/tmr2.c: 87:     PIE3bits.TMR2IE = 1;
  9187  003F26  86AB               	bsf	171,3,c	;volatile
  9188                           
  9189                           ; BSR set to: 3
  9190                           ;mcc_generated_files/tmr2.c: 90:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
  9191  003F28  0E64               	movlw	low _TMR2_DefaultInterruptHandler
  9192  003F2A  6E03               	movwf	TMR2_SetInterruptHandler@InterruptHandler^(0+1280),c
  9193  003F2C  0E41               	movlw	high _TMR2_DefaultInterruptHandler
  9194  003F2E  6E04               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)^(0+1280),c
  9195  003F30  EC91  F020         	call	_TMR2_SetInterruptHandler	;wreg free
  9196                           
  9197                           ;mcc_generated_files/tmr2.c: 93:     T2CON = 0xD0;
  9198  003F34  0ED0               	movlw	208
  9199  003F36  0103               	movlb	3	; () banked
  9200  003F38  6F1E               	movwf	30,b	;volatile
  9201                           
  9202                           ; BSR set to: 3
  9203  003F3A  0012               	return		;funcret
  9204  003F3C                     __end_of_TMR2_Initialize:
  9205                           	callstack 0
  9206                           
  9207 ;; *************** function _TMR2_SetInterruptHandler *****************
  9208 ;; Defined at:
  9209 ;;		line 178 in file "mcc_generated_files/tmr2.c"
  9210 ;; Parameters:    Size  Location     Type
  9211 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
  9212 ;;		 -> DCC_ISR(1), TMR2_DefaultInterruptHandler(1), 
  9213 ;; Auto vars:     Size  Location     Type
  9214 ;;		None
  9215 ;; Return value:  Size  Location     Type
  9216 ;;                  1    wreg      void 
  9217 ;; Registers used:
  9218 ;;		wreg, status,2, status,0
  9219 ;; Tracked objects:
  9220 ;;		On entry : 39/5
  9221 ;;		On exit  : 39/1
  9222 ;;		Unchanged: 38/0
  9223 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  9224 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9227 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9228 ;;Total ram usage:        2 bytes
  9229 ;; Hardware stack levels used: 1
  9230 ;; Hardware stack levels required when called: 3
  9231 ;; This function calls:
  9232 ;;		Nothing
  9233 ;; This function is called by:
  9234 ;;		_TMR2_Initialize
  9235 ;;		_main
  9236 ;; This function uses a non-reentrant model
  9237 ;;
  9238                           
  9239                           	psect	text48
  9240  004122                     __ptext48:
  9241                           	callstack 0
  9242  004122                     _TMR2_SetInterruptHandler:
  9243                           	callstack 123
  9244                           
  9245                           ;mcc_generated_files/tmr2.c: 179:     TMR2_InterruptHandler = InterruptHandler;
  9246                           
  9247                           ; BSR set to: 3
  9248                           ;incstack = 0
  9249  004122  C503  F5F1         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
  9250  004126  C504  F5F2         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
  9251  00412A  0012               	return		;funcret
  9252  00412C                     __end_of_TMR2_SetInterruptHandler:
  9253                           	callstack 0
  9254                           
  9255 ;; *************** function _TMR0_Initialize *****************
  9256 ;; Defined at:
  9257 ;;		line 60 in file "mcc_generated_files/tmr0.c"
  9258 ;; Parameters:    Size  Location     Type
  9259 ;;		None
  9260 ;; Auto vars:     Size  Location     Type
  9261 ;;		None
  9262 ;; Return value:  Size  Location     Type
  9263 ;;                  1    wreg      void 
  9264 ;; Registers used:
  9265 ;;		wreg, status,2
  9266 ;; Tracked objects:
  9267 ;;		On entry : 0/3
  9268 ;;		On exit  : 3F/3
  9269 ;;		Unchanged: 0/0
  9270 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  9271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9274 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9275 ;;Total ram usage:        0 bytes
  9276 ;; Hardware stack levels used: 1
  9277 ;; Hardware stack levels required when called: 3
  9278 ;; This function calls:
  9279 ;;		Nothing
  9280 ;; This function is called by:
  9281 ;;		_SYSTEM_Initialize
  9282 ;;		_main
  9283 ;; This function uses a non-reentrant model
  9284 ;;
  9285                           
  9286                           	psect	text49
  9287  00409E                     __ptext49:
  9288                           	callstack 0
  9289  00409E                     _TMR0_Initialize:
  9290                           	callstack 123
  9291                           
  9292                           ;mcc_generated_files/tmr0.c: 65:     T0CON1 = 0x89;
  9293                           
  9294                           ;incstack = 0
  9295  00409E  0E89               	movlw	137
  9296  0040A0  0103               	movlb	3	; () banked
  9297  0040A2  6F1B               	movwf	27,b	;volatile
  9298                           
  9299                           ;mcc_generated_files/tmr0.c: 68:     TMR0H = 0x3C;
  9300  0040A4  0E3C               	movlw	60
  9301  0040A6  6F19               	movwf	25,b	;volatile
  9302                           
  9303                           ;mcc_generated_files/tmr0.c: 71:     TMR0L = 0x00;
  9304  0040A8  0E00               	movlw	0
  9305  0040AA  6F18               	movwf	24,b	;volatile
  9306                           
  9307                           ; BSR set to: 3
  9308                           ;mcc_generated_files/tmr0.c: 74:     PIR3bits.TMR0IF = 0;
  9309  0040AC  9EB6               	bcf	182,7,c	;volatile
  9310                           
  9311                           ;mcc_generated_files/tmr0.c: 77:     T0CON0 = 0x80;
  9312  0040AE  0E80               	movlw	128
  9313  0040B0  6F1A               	movwf	26,b	;volatile
  9314                           
  9315                           ; BSR set to: 3
  9316  0040B2  0012               	return		;funcret
  9317  0040B4                     __end_of_TMR0_Initialize:
  9318                           	callstack 0
  9319                           
  9320 ;; *************** function _PWM1_16BIT_Initialize *****************
  9321 ;; Defined at:
  9322 ;;		line 63 in file "mcc_generated_files/pwm1_16bit.c"
  9323 ;; Parameters:    Size  Location     Type
  9324 ;;		None
  9325 ;; Auto vars:     Size  Location     Type
  9326 ;;		None
  9327 ;; Return value:  Size  Location     Type
  9328 ;;                  1    wreg      void 
  9329 ;; Registers used:
  9330 ;;		wreg, status,2, status,0, cstack
  9331 ;; Tracked objects:
  9332 ;;		On entry : 3F/5
  9333 ;;		On exit  : 3F/5
  9334 ;;		Unchanged: 3E/0
  9335 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  9336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9340 ;;Total ram usage:        0 bytes
  9341 ;; Hardware stack levels used: 1
  9342 ;; Hardware stack levels required when called: 4
  9343 ;; This function calls:
  9344 ;;		_PWM1_16BIT_Period_SetInterruptHandler
  9345 ;;		_PWM1_16BIT_Slice1Output1_SetInterruptHandler
  9346 ;;		_PWM1_16BIT_Slice1Output2_SetInterruptHandler
  9347 ;; This function is called by:
  9348 ;;		_SYSTEM_Initialize
  9349 ;; This function uses a non-reentrant model
  9350 ;;
  9351                           
  9352                           	psect	text50
  9353  003AA6                     __ptext50:
  9354                           	callstack 0
  9355  003AA6                     _PWM1_16BIT_Initialize:
  9356                           	callstack 121
  9357                           
  9358                           ; BSR set to: 5
  9359                           ;mcc_generated_files/pwm1_16bit.c: 66:     PWM1ERS = 0x00;
  9360                           
  9361                           ; BSR set to: 3
  9362                           ;incstack = 0
  9363  003AA6  0E00               	movlw	0
  9364  003AA8  6E60               	movwf	96,c	;volatile
  9365                           
  9366                           ;mcc_generated_files/pwm1_16bit.c: 69:     PWM1CLK = 0x02;
  9367  003AAA  0E02               	movlw	2
  9368  003AAC  6E61               	movwf	97,c	;volatile
  9369                           
  9370                           ;mcc_generated_files/pwm1_16bit.c: 72:     PWM1LDS = 0x00;
  9371  003AAE  0E00               	movlw	0
  9372  003AB0  6E62               	movwf	98,c	;volatile
  9373                           
  9374                           ; BSR set to: 5
  9375                           ;mcc_generated_files/pwm1_16bit.c: 75:     PWM1PRL = 0xFF;
  9376  003AB2  6863               	setf	99,c	;volatile
  9377                           
  9378                           ;mcc_generated_files/pwm1_16bit.c: 78:     PWM1PRH = 0xF9;
  9379  003AB4  0EF9               	movlw	249
  9380  003AB6  6E64               	movwf	100,c	;volatile
  9381                           
  9382                           ;mcc_generated_files/pwm1_16bit.c: 81:     PWM1CPRE = 0x00;
  9383  003AB8  0E00               	movlw	0
  9384  003ABA  6E65               	movwf	101,c	;volatile
  9385                           
  9386                           ;mcc_generated_files/pwm1_16bit.c: 84:     PWM1PIPOS = 0x00;
  9387  003ABC  0E00               	movlw	0
  9388  003ABE  6E66               	movwf	102,c	;volatile
  9389                           
  9390                           ;mcc_generated_files/pwm1_16bit.c: 87:     PWM1GIR = 0x00;
  9391  003AC0  0E00               	movlw	0
  9392  003AC2  6E67               	movwf	103,c	;volatile
  9393                           
  9394                           ;mcc_generated_files/pwm1_16bit.c: 90:     PWM1GIE = 0x00;
  9395  003AC4  0E00               	movlw	0
  9396  003AC6  6E68               	movwf	104,c	;volatile
  9397                           
  9398                           ;mcc_generated_files/pwm1_16bit.c: 93:     PWM1S1CFG = 0x00;
  9399  003AC8  0E00               	movlw	0
  9400  003ACA  6E6A               	movwf	106,c	;volatile
  9401                           
  9402                           ;mcc_generated_files/pwm1_16bit.c: 96:     PWM1S1P1L = 0x00;
  9403  003ACC  0E00               	movlw	0
  9404  003ACE  6E6B               	movwf	107,c	;volatile
  9405                           
  9406                           ;mcc_generated_files/pwm1_16bit.c: 99:     PWM1S1P1H = 0x7D;
  9407  003AD0  0E7D               	movlw	125
  9408  003AD2  6E6C               	movwf	108,c	;volatile
  9409                           
  9410                           ;mcc_generated_files/pwm1_16bit.c: 102:     PWM1S1P2L = 0x00;
  9411  003AD4  0E00               	movlw	0
  9412  003AD6  6E6D               	movwf	109,c	;volatile
  9413                           
  9414                           ;mcc_generated_files/pwm1_16bit.c: 105:     PWM1S1P2H = 0x7D;
  9415  003AD8  0E7D               	movlw	125
  9416  003ADA  6E6E               	movwf	110,c	;volatile
  9417                           
  9418                           ; BSR set to: 5
  9419                           ;mcc_generated_files/pwm1_16bit.c: 108:     PIR4bits.PWM1PIF = 0;
  9420  003ADC  9CB7               	bcf	183,6,c	;volatile
  9421                           
  9422                           ; BSR set to: 5
  9423                           ;mcc_generated_files/pwm1_16bit.c: 111:     PIR4bits.PWM1IF = 0;
  9424  003ADE  9EB7               	bcf	183,7,c	;volatile
  9425                           
  9426                           ; BSR set to: 5
  9427                           ;mcc_generated_files/pwm1_16bit.c: 114:     PWM1GIRbits.S1P1IF = 0;
  9428  003AE0  9067               	bcf	103,0,c	;volatile
  9429                           
  9430                           ; BSR set to: 5
  9431                           ;mcc_generated_files/pwm1_16bit.c: 117:     PWM1GIRbits.S1P2IF = 0;
  9432  003AE2  9267               	bcf	103,1,c	;volatile
  9433                           
  9434                           ; BSR set to: 5
  9435                           ;mcc_generated_files/pwm1_16bit.c: 120:     PIE4bits.PWM1IE = 0;
  9436  003AE4  9EAC               	bcf	172,7,c	;volatile
  9437                           
  9438                           ; BSR set to: 5
  9439                           ;mcc_generated_files/pwm1_16bit.c: 123:     PIE4bits.PWM1PIE = 0;
  9440  003AE6  9CAC               	bcf	172,6,c	;volatile
  9441                           
  9442                           ; BSR set to: 5
  9443                           ;mcc_generated_files/pwm1_16bit.c: 126:     PWM1_16BIT_Slice1Output1_SetInterruptHandler
      +                          (PWM1_16BIT_Slice1Output1_DefaultInterruptHandler);
  9444  003AE8  0E00               	movlw	0
  9445  003AEA  6E03               	movwf	PWM1_16BIT_Slice1Output1_SetInterruptHandler@InterruptHandler^(0+1280),c
  9446  003AEC  0E00               	movlw	0
  9447  003AEE  6E04               	movwf	(PWM1_16BIT_Slice1Output1_SetInterruptHandler@InterruptHandler+1)^(0+1280),c
  9448  003AF0  EC9B  F020         	call	_PWM1_16BIT_Slice1Output1_SetInterruptHandler	;wreg free
  9449                           
  9450                           ; BSR set to: 5
  9451                           ;mcc_generated_files/pwm1_16bit.c: 127:     PWM1_16BIT_Slice1Output2_SetInterruptHandler
      +                          (PWM1_16BIT_Slice1Output2_DefaultInterruptHandler);
  9452  003AF4  0E00               	movlw	0
  9453  003AF6  6E03               	movwf	PWM1_16BIT_Slice1Output2_SetInterruptHandler@InterruptHandler^(0+1280),c
  9454  003AF8  0E00               	movlw	0
  9455  003AFA  6E04               	movwf	(PWM1_16BIT_Slice1Output2_SetInterruptHandler@InterruptHandler+1)^(0+1280),c
  9456  003AFC  EC96  F020         	call	_PWM1_16BIT_Slice1Output2_SetInterruptHandler	;wreg free
  9457                           
  9458                           ; BSR set to: 5
  9459                           ;mcc_generated_files/pwm1_16bit.c: 128:     PWM1_16BIT_Period_SetInterruptHandler(PWM1_1
      +                          6BIT_Period_DefaultInterruptHandler);
  9460  003B00  0E00               	movlw	0
  9461  003B02  6E03               	movwf	PWM1_16BIT_Period_SetInterruptHandler@InterruptHandler^(0+1280),c
  9462  003B04  0E00               	movlw	0
  9463  003B06  6E04               	movwf	(PWM1_16BIT_Period_SetInterruptHandler@InterruptHandler+1)^(0+1280),c
  9464  003B08  ECA0  F020         	call	_PWM1_16BIT_Period_SetInterruptHandler	;wreg free
  9465                           
  9466                           ; BSR set to: 5
  9467                           ;mcc_generated_files/pwm1_16bit.c: 131:     PWM1CON = 0x80;
  9468  003B0C  0E80               	movlw	128
  9469  003B0E  6E69               	movwf	105,c	;volatile
  9470                           
  9471                           ; BSR set to: 5
  9472  003B10  0012               	return		;funcret
  9473  003B12                     __end_of_PWM1_16BIT_Initialize:
  9474                           	callstack 0
  9475                           
  9476 ;; *************** function _PWM1_16BIT_Slice1Output2_SetInterruptHandler *****************
  9477 ;; Defined at:
  9478 ;;		line 197 in file "mcc_generated_files/pwm1_16bit.c"
  9479 ;; Parameters:    Size  Location     Type
  9480 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
  9481 ;;		 -> PWM1_16BIT_Slice1Output2_DefaultInterruptHandler(1), 
  9482 ;; Auto vars:     Size  Location     Type
  9483 ;;		None
  9484 ;; Return value:  Size  Location     Type
  9485 ;;                  1    wreg      void 
  9486 ;; Registers used:
  9487 ;;		wreg, status,2, status,0
  9488 ;; Tracked objects:
  9489 ;;		On entry : 3F/5
  9490 ;;		On exit  : 3F/5
  9491 ;;		Unchanged: 3E/0
  9492 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  9493 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9496 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9497 ;;Total ram usage:        2 bytes
  9498 ;; Hardware stack levels used: 1
  9499 ;; Hardware stack levels required when called: 3
  9500 ;; This function calls:
  9501 ;;		Nothing
  9502 ;; This function is called by:
  9503 ;;		_PWM1_16BIT_Initialize
  9504 ;; This function uses a non-reentrant model
  9505 ;;
  9506                           
  9507                           	psect	text51
  9508  00412C                     __ptext51:
  9509                           	callstack 0
  9510  00412C                     _PWM1_16BIT_Slice1Output2_SetInterruptHandler:
  9511                           	callstack 121
  9512                           
  9513                           ; BSR set to: 5
  9514                           ;mcc_generated_files/pwm1_16bit.c: 197: void PWM1_16BIT_Slice1Output2_SetInterruptHandle
      +                          r(void (* InterruptHandler)(void));mcc_generated_files/pwm1_16bit.c: 198: {;mcc_generate
      +                          d_files/pwm1_16bit.c: 199:     PWM1_16BIT_Slice1Output2_InterruptHandler = InterruptHand
      +                          ler;
  9515                           
  9516                           ; BSR set to: 5
  9517                           ;incstack = 0
  9518  00412C  C503  F5E7         	movff	PWM1_16BIT_Slice1Output2_SetInterruptHandler@InterruptHandler,_PWM1_16BIT_Slice1O
      +                          utput2_InterruptHandler
  9519  004130  C504  F5E8         	movff	PWM1_16BIT_Slice1Output2_SetInterruptHandler@InterruptHandler+1,_PWM1_16BIT_Slice
      +                          1Output2_InterruptHandler+1
  9520                           
  9521                           ; BSR set to: 5
  9522  004134  0012               	return		;funcret
  9523  004136                     __end_of_PWM1_16BIT_Slice1Output2_SetInterruptHandler:
  9524                           	callstack 0
  9525                           
  9526 ;; *************** function _PWM1_16BIT_Slice1Output1_SetInterruptHandler *****************
  9527 ;; Defined at:
  9528 ;;		line 192 in file "mcc_generated_files/pwm1_16bit.c"
  9529 ;; Parameters:    Size  Location     Type
  9530 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
  9531 ;;		 -> PWM1_16BIT_Slice1Output1_DefaultInterruptHandler(1), 
  9532 ;; Auto vars:     Size  Location     Type
  9533 ;;		None
  9534 ;; Return value:  Size  Location     Type
  9535 ;;                  1    wreg      void 
  9536 ;; Registers used:
  9537 ;;		wreg, status,2, status,0
  9538 ;; Tracked objects:
  9539 ;;		On entry : 3F/5
  9540 ;;		On exit  : 3F/5
  9541 ;;		Unchanged: 3E/0
  9542 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  9543 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9546 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9547 ;;Total ram usage:        2 bytes
  9548 ;; Hardware stack levels used: 1
  9549 ;; Hardware stack levels required when called: 3
  9550 ;; This function calls:
  9551 ;;		Nothing
  9552 ;; This function is called by:
  9553 ;;		_PWM1_16BIT_Initialize
  9554 ;; This function uses a non-reentrant model
  9555 ;;
  9556                           
  9557                           	psect	text52
  9558  004136                     __ptext52:
  9559                           	callstack 0
  9560  004136                     _PWM1_16BIT_Slice1Output1_SetInterruptHandler:
  9561                           	callstack 121
  9562                           
  9563                           ; BSR set to: 5
  9564                           ;mcc_generated_files/pwm1_16bit.c: 192: void PWM1_16BIT_Slice1Output1_SetInterruptHandle
      +                          r(void (* InterruptHandler)(void));mcc_generated_files/pwm1_16bit.c: 193: {;mcc_generate
      +                          d_files/pwm1_16bit.c: 194:     PWM1_16BIT_Slice1Output1_InterruptHandler = InterruptHand
      +                          ler;
  9565                           
  9566                           ; BSR set to: 5
  9567                           ;incstack = 0
  9568  004136  C503  F5E9         	movff	PWM1_16BIT_Slice1Output1_SetInterruptHandler@InterruptHandler,_PWM1_16BIT_Slice1O
      +                          utput1_InterruptHandler
  9569  00413A  C504  F5EA         	movff	PWM1_16BIT_Slice1Output1_SetInterruptHandler@InterruptHandler+1,_PWM1_16BIT_Slice
      +                          1Output1_InterruptHandler+1
  9570                           
  9571                           ; BSR set to: 5
  9572  00413E  0012               	return		;funcret
  9573  004140                     __end_of_PWM1_16BIT_Slice1Output1_SetInterruptHandler:
  9574                           	callstack 0
  9575                           
  9576 ;; *************** function _PWM1_16BIT_Period_SetInterruptHandler *****************
  9577 ;; Defined at:
  9578 ;;		line 202 in file "mcc_generated_files/pwm1_16bit.c"
  9579 ;; Parameters:    Size  Location     Type
  9580 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
  9581 ;;		 -> PWM1_16BIT_Period_DefaultInterruptHandler(1), 
  9582 ;; Auto vars:     Size  Location     Type
  9583 ;;		None
  9584 ;; Return value:  Size  Location     Type
  9585 ;;                  1    wreg      void 
  9586 ;; Registers used:
  9587 ;;		wreg, status,2, status,0
  9588 ;; Tracked objects:
  9589 ;;		On entry : 3F/5
  9590 ;;		On exit  : 3F/5
  9591 ;;		Unchanged: 3E/0
  9592 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  9593 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9596 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9597 ;;Total ram usage:        2 bytes
  9598 ;; Hardware stack levels used: 1
  9599 ;; Hardware stack levels required when called: 3
  9600 ;; This function calls:
  9601 ;;		Nothing
  9602 ;; This function is called by:
  9603 ;;		_PWM1_16BIT_Initialize
  9604 ;; This function uses a non-reentrant model
  9605 ;;
  9606                           
  9607                           	psect	text53
  9608  004140                     __ptext53:
  9609                           	callstack 0
  9610  004140                     _PWM1_16BIT_Period_SetInterruptHandler:
  9611                           	callstack 121
  9612                           
  9613                           ; BSR set to: 5
  9614                           ;mcc_generated_files/pwm1_16bit.c: 202: void PWM1_16BIT_Period_SetInterruptHandler(void 
      +                          (* InterruptHandler)(void));mcc_generated_files/pwm1_16bit.c: 203: {;mcc_generated_files
      +                          /pwm1_16bit.c: 204:     PWM1_16BIT_Period_InterruptHandler = InterruptHandler;
  9615                           
  9616                           ; BSR set to: 5
  9617                           ;incstack = 0
  9618  004140  C503  F5E5         	movff	PWM1_16BIT_Period_SetInterruptHandler@InterruptHandler,_PWM1_16BIT_Period_Interru
      +                          ptHandler
  9619  004144  C504  F5E6         	movff	PWM1_16BIT_Period_SetInterruptHandler@InterruptHandler+1,_PWM1_16BIT_Period_Inter
      +                          ruptHandler+1
  9620                           
  9621                           ; BSR set to: 5
  9622  004148  0012               	return		;funcret
  9623  00414A                     __end_of_PWM1_16BIT_Period_SetInterruptHandler:
  9624                           	callstack 0
  9625                           
  9626 ;; *************** function _PMD_Initialize *****************
  9627 ;; Defined at:
  9628 ;;		line 80 in file "mcc_generated_files/mcc.c"
  9629 ;; Parameters:    Size  Location     Type
  9630 ;;		None
  9631 ;; Auto vars:     Size  Location     Type
  9632 ;;		None
  9633 ;; Return value:  Size  Location     Type
  9634 ;;                  1    wreg      void 
  9635 ;; Registers used:
  9636 ;;		wreg, status,2
  9637 ;; Tracked objects:
  9638 ;;		On entry : 0/0
  9639 ;;		On exit  : 3F/0
  9640 ;;		Unchanged: 0/0
  9641 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  9642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9645 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9646 ;;Total ram usage:        0 bytes
  9647 ;; Hardware stack levels used: 1
  9648 ;; Hardware stack levels required when called: 3
  9649 ;; This function calls:
  9650 ;;		Nothing
  9651 ;; This function is called by:
  9652 ;;		_SYSTEM_Initialize
  9653 ;; This function uses a non-reentrant model
  9654 ;;
  9655                           
  9656                           	psect	text54
  9657  004036                     __ptext54:
  9658                           	callstack 0
  9659  004036                     _PMD_Initialize:
  9660                           	callstack 122
  9661                           
  9662                           ;mcc_generated_files/mcc.c: 83:     PMD0 = 0x00;
  9663                           
  9664                           ; BSR set to: 5
  9665                           ;incstack = 0
  9666  004036  0E00               	movlw	0
  9667  004038  0100               	movlb	0	; () banked
  9668  00403A  6F63               	movwf	99,b	;volatile
  9669                           
  9670                           ;mcc_generated_files/mcc.c: 85:     PMD1 = 0x00;
  9671  00403C  0E00               	movlw	0
  9672  00403E  6F64               	movwf	100,b	;volatile
  9673                           
  9674                           ;mcc_generated_files/mcc.c: 87:     PMD2 = 0x00;
  9675  004040  0E00               	movlw	0
  9676  004042  6F65               	movwf	101,b	;volatile
  9677                           
  9678                           ;mcc_generated_files/mcc.c: 89:     PMD3 = 0x00;
  9679  004044  0E00               	movlw	0
  9680  004046  6F66               	movwf	102,b	;volatile
  9681                           
  9682                           ;mcc_generated_files/mcc.c: 91:     PMD4 = 0x00;
  9683  004048  0E00               	movlw	0
  9684  00404A  6F67               	movwf	103,b	;volatile
  9685                           
  9686                           ;mcc_generated_files/mcc.c: 93:     PMD5 = 0x00;
  9687  00404C  0E00               	movlw	0
  9688  00404E  6F68               	movwf	104,b	;volatile
  9689                           
  9690                           ; BSR set to: 0
  9691  004050  0012               	return		;funcret
  9692  004052                     __end_of_PMD_Initialize:
  9693                           	callstack 0
  9694                           
  9695 ;; *************** function _PIN_MANAGER_Initialize *****************
  9696 ;; Defined at:
  9697 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  9698 ;; Parameters:    Size  Location     Type
  9699 ;;		None
  9700 ;; Auto vars:     Size  Location     Type
  9701 ;;		None
  9702 ;; Return value:  Size  Location     Type
  9703 ;;                  1    wreg      void 
  9704 ;; Registers used:
  9705 ;;		wreg, status,2
  9706 ;; Tracked objects:
  9707 ;;		On entry : 3F/0
  9708 ;;		On exit  : 3F/2
  9709 ;;		Unchanged: 0/0
  9710 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  9711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9715 ;;Total ram usage:        0 bytes
  9716 ;; Hardware stack levels used: 1
  9717 ;; Hardware stack levels required when called: 3
  9718 ;; This function calls:
  9719 ;;		Nothing
  9720 ;; This function is called by:
  9721 ;;		_SYSTEM_Initialize
  9722 ;; This function uses a non-reentrant model
  9723 ;;
  9724                           
  9725                           	psect	text55
  9726  0038DC                     __ptext55:
  9727                           	callstack 0
  9728  0038DC                     _PIN_MANAGER_Initialize:
  9729                           	callstack 122
  9730                           
  9731                           ; BSR set to: 0
  9732                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  9733                           
  9734                           ; BSR set to: 0
  9735                           ;incstack = 0
  9736  0038DC  0E00               	movlw	0
  9737  0038DE  6EBE               	movwf	190,c	;volatile
  9738                           
  9739                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  9740  0038E0  0E00               	movlw	0
  9741  0038E2  6EBF               	movwf	191,c	;volatile
  9742                           
  9743                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  9744  0038E4  0E00               	movlw	0
  9745  0038E6  6EC0               	movwf	192,c	;volatile
  9746                           
  9747                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x38;
  9748  0038E8  0E38               	movlw	56
  9749  0038EA  6EC6               	movwf	198,c	;volatile
  9750                           
  9751                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0x20;
  9752  0038EC  0E20               	movlw	32
  9753  0038EE  6EC7               	movwf	199,c	;volatile
  9754                           
  9755                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x00;
  9756  0038F0  0E00               	movlw	0
  9757  0038F2  6EC8               	movwf	200,c	;volatile
  9758                           
  9759                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x30;
  9760  0038F4  0E30               	movlw	48
  9761  0038F6  0104               	movlb	4	; () banked
  9762  0038F8  6F10               	movwf	16,b	;volatile
  9763                           
  9764                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x00;
  9765  0038FA  0E00               	movlw	0
  9766  0038FC  6F08               	movwf	8,b	;volatile
  9767                           
  9768                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x20;
  9769  0038FE  0E20               	movlw	32
  9770  003900  6F00               	movwf	0,b	;volatile
  9771                           
  9772                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  9773  003902  0E00               	movlw	0
  9774  003904  6F09               	movwf	9,b	;volatile
  9775                           
  9776                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
  9777  003906  0E00               	movlw	0
  9778  003908  6F01               	movwf	1,b	;volatile
  9779                           
  9780                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x00;
  9781  00390A  0E00               	movlw	0
  9782  00390C  6F11               	movwf	17,b	;volatile
  9783                           
  9784                           ;mcc_generated_files/pin_manager.c: 88:     ODCONA = 0x00;
  9785  00390E  0E00               	movlw	0
  9786  003910  6F02               	movwf	2,b	;volatile
  9787                           
  9788                           ;mcc_generated_files/pin_manager.c: 89:     ODCONB = 0x00;
  9789  003912  0E00               	movlw	0
  9790  003914  6F0A               	movwf	10,b	;volatile
  9791                           
  9792                           ;mcc_generated_files/pin_manager.c: 90:     ODCONC = 0x00;
  9793  003916  0E00               	movlw	0
  9794  003918  6F12               	movwf	18,b	;volatile
  9795                           
  9796                           ;mcc_generated_files/pin_manager.c: 95:     SLRCONA = 0x37;
  9797  00391A  0E37               	movlw	55
  9798  00391C  6F03               	movwf	3,b	;volatile
  9799                           
  9800                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONB = 0xF0;
  9801  00391E  0EF0               	movlw	240
  9802  003920  6F0B               	movwf	11,b	;volatile
  9803                           
  9804                           ; BSR set to: 4
  9805                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONC = 0xFF;
  9806  003922  6913               	setf	19,b	;volatile
  9807                           
  9808                           ;mcc_generated_files/pin_manager.c: 102:     INLVLA = 0x3F;
  9809  003924  0E3F               	movlw	63
  9810  003926  6F04               	movwf	4,b	;volatile
  9811                           
  9812                           ;mcc_generated_files/pin_manager.c: 103:     INLVLB = 0xF0;
  9813  003928  0EF0               	movlw	240
  9814  00392A  6F0C               	movwf	12,b	;volatile
  9815                           
  9816                           ; BSR set to: 4
  9817                           ;mcc_generated_files/pin_manager.c: 104:     INLVLC = 0xFF;
  9818  00392C  6914               	setf	20,b	;volatile
  9819                           
  9820                           ;mcc_generated_files/pin_manager.c: 113:     PWMIN1PPS = 0x04;
  9821  00392E  0E04               	movlw	4
  9822  003930  0102               	movlb	2	; () banked
  9823  003932  6F58               	movwf	88,b	;volatile
  9824                           
  9825                           ;mcc_generated_files/pin_manager.c: 114:     RC0PPS = 0x06;
  9826  003934  0E06               	movlw	6
  9827  003936  6F11               	movwf	17,b	;volatile
  9828                           
  9829                           ;mcc_generated_files/pin_manager.c: 115:     PWMIN0PPS = 0x04;
  9830  003938  0E04               	movlw	4
  9831  00393A  6F57               	movwf	87,b	;volatile
  9832                           
  9833                           ;mcc_generated_files/pin_manager.c: 116:     RB7PPS = 0x10;
  9834  00393C  0E10               	movlw	16
  9835  00393E  6F10               	movwf	16,b	;volatile
  9836                           
  9837                           ;mcc_generated_files/pin_manager.c: 117:     RC1PPS = 0x05;
  9838  003940  0E05               	movlw	5
  9839  003942  6F12               	movwf	18,b	;volatile
  9840                           
  9841                           ;mcc_generated_files/pin_manager.c: 118:     RC4PPS = 0x08;
  9842  003944  0E08               	movlw	8
  9843  003946  6F15               	movwf	21,b	;volatile
  9844                           
  9845                           ;mcc_generated_files/pin_manager.c: 119:     T2INPPS = 0x04;
  9846  003948  0E04               	movlw	4
  9847  00394A  6F48               	movwf	72,b	;volatile
  9848                           
  9849                           ;mcc_generated_files/pin_manager.c: 120:     RC5PPS = 0x07;
  9850  00394C  0E07               	movlw	7
  9851  00394E  6F16               	movwf	22,b	;volatile
  9852                           
  9853                           ;mcc_generated_files/pin_manager.c: 121:     U1RXPPS = 0x0D;
  9854  003950  0E0D               	movlw	13
  9855  003952  6F72               	movwf	114,b	;volatile
  9856                           
  9857                           ; BSR set to: 2
  9858  003954  0012               	return		;funcret
  9859  003956                     __end_of_PIN_MANAGER_Initialize:
  9860                           	callstack 0
  9861                           
  9862 ;; *************** function _OSCILLATOR_Initialize *****************
  9863 ;; Defined at:
  9864 ;;		line 64 in file "mcc_generated_files/mcc.c"
  9865 ;; Parameters:    Size  Location     Type
  9866 ;;		None
  9867 ;; Auto vars:     Size  Location     Type
  9868 ;;		None
  9869 ;; Return value:  Size  Location     Type
  9870 ;;                  1    wreg      void 
  9871 ;; Registers used:
  9872 ;;		wreg, status,2
  9873 ;; Tracked objects:
  9874 ;;		On entry : 3F/2
  9875 ;;		On exit  : 3F/0
  9876 ;;		Unchanged: 0/0
  9877 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  9878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9882 ;;Total ram usage:        0 bytes
  9883 ;; Hardware stack levels used: 1
  9884 ;; Hardware stack levels required when called: 3
  9885 ;; This function calls:
  9886 ;;		Nothing
  9887 ;; This function is called by:
  9888 ;;		_SYSTEM_Initialize
  9889 ;; This function uses a non-reentrant model
  9890 ;;
  9891                           
  9892                           	psect	text56
  9893  004052                     __ptext56:
  9894                           	callstack 0
  9895  004052                     _OSCILLATOR_Initialize:
  9896                           	callstack 122
  9897                           
  9898                           ; BSR set to: 2
  9899                           ;mcc_generated_files/mcc.c: 67:     OSCCON1 = 0x60;
  9900                           
  9901                           ; BSR set to: 2
  9902                           ;incstack = 0
  9903  004052  0E60               	movlw	96
  9904  004054  0100               	movlb	0	; () banked
  9905  004056  6FAD               	movwf	173,b	;volatile
  9906                           
  9907                           ;mcc_generated_files/mcc.c: 69:     OSCCON3 = 0x00;
  9908  004058  0E00               	movlw	0
  9909  00405A  6FAF               	movwf	175,b	;volatile
  9910                           
  9911                           ;mcc_generated_files/mcc.c: 71:     OSCEN = 0x00;
  9912  00405C  0E00               	movlw	0
  9913  00405E  6FB3               	movwf	179,b	;volatile
  9914                           
  9915                           ;mcc_generated_files/mcc.c: 73:     OSCFRQ = 0x08;
  9916  004060  0E08               	movlw	8
  9917  004062  6FB1               	movwf	177,b	;volatile
  9918                           
  9919                           ;mcc_generated_files/mcc.c: 75:     OSCTUNE = 0x00;
  9920  004064  0E00               	movlw	0
  9921  004066  6FB0               	movwf	176,b	;volatile
  9922                           
  9923                           ;mcc_generated_files/mcc.c: 77:     ACTCON = 0x00;
  9924  004068  0E00               	movlw	0
  9925  00406A  6FAC               	movwf	172,b	;volatile
  9926                           
  9927                           ; BSR set to: 0
  9928  00406C  0012               	return		;funcret
  9929  00406E                     __end_of_OSCILLATOR_Initialize:
  9930                           	callstack 0
  9931                           
  9932 ;; *************** function _INTERRUPT_Initialize *****************
  9933 ;; Defined at:
  9934 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  9935 ;; Parameters:    Size  Location     Type
  9936 ;;		None
  9937 ;; Auto vars:     Size  Location     Type
  9938 ;;		None
  9939 ;; Return value:  Size  Location     Type
  9940 ;;                  1    wreg      void 
  9941 ;; Registers used:
  9942 ;;		None
  9943 ;; Tracked objects:
  9944 ;;		On entry : 0/0
  9945 ;;		On exit  : 0/0
  9946 ;;		Unchanged: 0/0
  9947 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  9948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9951 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9952 ;;Total ram usage:        0 bytes
  9953 ;; Hardware stack levels used: 1
  9954 ;; Hardware stack levels required when called: 3
  9955 ;; This function calls:
  9956 ;;		Nothing
  9957 ;; This function is called by:
  9958 ;;		_SYSTEM_Initialize
  9959 ;; This function uses a non-reentrant model
  9960 ;;
  9961                           
  9962                           	psect	text57
  9963  00415E                     __ptext57:
  9964                           	callstack 0
  9965  00415E                     _INTERRUPT_Initialize:
  9966                           	callstack 122
  9967                           
  9968                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCON0bits.IPEN = 0;
  9969                           
  9970                           ; BSR set to: 0
  9971                           ;incstack = 0
  9972  00415E  9AD6               	bcf	214,5,c	;volatile
  9973  004160  0012               	return		;funcret
  9974  004162                     __end_of_INTERRUPT_Initialize:
  9975                           	callstack 0
  9976                           
  9977 ;; *************** function _CWG1_Initialize *****************
  9978 ;; Defined at:
  9979 ;;		line 58 in file "mcc_generated_files/cwg1.c"
  9980 ;; Parameters:    Size  Location     Type
  9981 ;;		None
  9982 ;; Auto vars:     Size  Location     Type
  9983 ;;		None
  9984 ;; Return value:  Size  Location     Type
  9985 ;;                  1    wreg      void 
  9986 ;; Registers used:
  9987 ;;		wreg, status,2
  9988 ;; Tracked objects:
  9989 ;;		On entry : 3F/3
  9990 ;;		On exit  : 3F/3
  9991 ;;		Unchanged: 0/0
  9992 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  9993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9997 ;;Total ram usage:        0 bytes
  9998 ;; Hardware stack levels used: 1
  9999 ;; Hardware stack levels required when called: 3
 10000 ;; This function calls:
 10001 ;;		Nothing
 10002 ;; This function is called by:
 10003 ;;		_SYSTEM_Initialize
 10004 ;; This function uses a non-reentrant model
 10005 ;;
 10006                           
 10007                           	psect	text58
 10008  003F90                     __ptext58:
 10009                           	callstack 0
 10010  003F90                     _CWG1_Initialize:
 10011                           	callstack 122
 10012                           
 10013                           ; BSR set to: 3
 10014                           ;mcc_generated_files/cwg1.c: 63:  CWG1CON1 = 0x00;
 10015                           
 10016                           ;incstack = 0
 10017  003F90  0E00               	movlw	0
 10018  003F92  6FC1               	movwf	193,b	;volatile
 10019                           
 10020                           ;mcc_generated_files/cwg1.c: 66:  CWG1DBR = 0x01;
 10021  003F94  0E01               	movlw	1
 10022  003F96  6FBE               	movwf	190,b	;volatile
 10023                           
 10024                           ;mcc_generated_files/cwg1.c: 69:  CWG1DBF = 0x01;
 10025  003F98  0E01               	movlw	1
 10026  003F9A  6FBF               	movwf	191,b	;volatile
 10027                           
 10028                           ;mcc_generated_files/cwg1.c: 72:  CWG1AS0 = 0x14;
 10029  003F9C  0E14               	movlw	20
 10030  003F9E  6FC2               	movwf	194,b	;volatile
 10031                           
 10032                           ;mcc_generated_files/cwg1.c: 75:  CWG1AS1 = 0x00;
 10033  003FA0  0E00               	movlw	0
 10034  003FA2  6FC3               	movwf	195,b	;volatile
 10035                           
 10036                           ;mcc_generated_files/cwg1.c: 78:  CWG1CLKCON = 0x00;
 10037  003FA4  0E00               	movlw	0
 10038  003FA6  6FBC               	movwf	188,b	;volatile
 10039                           
 10040                           ;mcc_generated_files/cwg1.c: 81:  CWG1STR = 0x00;
 10041  003FA8  0E00               	movlw	0
 10042  003FAA  6FC4               	movwf	196,b	;volatile
 10043                           
 10044                           ;mcc_generated_files/cwg1.c: 84:  CWG1ISM = 0x02;
 10045  003FAC  0E02               	movlw	2
 10046  003FAE  6FBD               	movwf	189,b	;volatile
 10047                           
 10048                           ;mcc_generated_files/cwg1.c: 87:  CWG1CON0 = 0x82;
 10049  003FB0  0E82               	movlw	130
 10050  003FB2  6FC0               	movwf	192,b	;volatile
 10051                           
 10052                           ; BSR set to: 3
 10053  003FB4  0012               	return		;funcret
 10054  003FB6                     __end_of_CWG1_Initialize:
 10055                           	callstack 0
 10056                           
 10057 ;; *************** function _ADCC_Initialize *****************
 10058 ;; Defined at:
 10059 ;;		line 62 in file "mcc_generated_files/adcc.c"
 10060 ;; Parameters:    Size  Location     Type
 10061 ;;		None
 10062 ;; Auto vars:     Size  Location     Type
 10063 ;;		None
 10064 ;; Return value:  Size  Location     Type
 10065 ;;                  1    wreg      void 
 10066 ;; Registers used:
 10067 ;;		wreg, status,2
 10068 ;; Tracked objects:
 10069 ;;		On entry : 3F/0
 10070 ;;		On exit  : 3F/3
 10071 ;;		Unchanged: 0/0
 10072 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
 10073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10076 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10077 ;;Total ram usage:        0 bytes
 10078 ;; Hardware stack levels used: 1
 10079 ;; Hardware stack levels required when called: 3
 10080 ;; This function calls:
 10081 ;;		Nothing
 10082 ;; This function is called by:
 10083 ;;		_SYSTEM_Initialize
 10084 ;; This function uses a non-reentrant model
 10085 ;;
 10086                           
 10087                           	psect	text59
 10088  003C4C                     __ptext59:
 10089                           	callstack 0
 10090  003C4C                     _ADCC_Initialize:
 10091                           	callstack 122
 10092                           
 10093                           ; BSR set to: 0
 10094                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
 10095                           
 10096                           ; BSR set to: 3
 10097                           ;incstack = 0
 10098  003C4C  0E00               	movlw	0
 10099  003C4E  0103               	movlb	3	; () banked
 10100  003C50  6FD9               	movwf	217,b	;volatile
 10101                           
 10102                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
 10103  003C52  0E00               	movlw	0
 10104  003C54  6FDA               	movwf	218,b	;volatile
 10105                           
 10106                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
 10107  003C56  0E00               	movlw	0
 10108  003C58  6FDB               	movwf	219,b	;volatile
 10109                           
 10110                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
 10111  003C5A  0E00               	movlw	0
 10112  003C5C  6FDC               	movwf	220,b	;volatile
 10113                           
 10114                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
 10115  003C5E  0E00               	movlw	0
 10116  003C60  6FDF               	movwf	223,b	;volatile
 10117                           
 10118                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
 10119  003C62  0E00               	movlw	0
 10120  003C64  6FE0               	movwf	224,b	;volatile
 10121                           
 10122                           ;mcc_generated_files/adcc.c: 78:     ADACCU = 0x00;
 10123  003C66  0E00               	movlw	0
 10124  003C68  6FE5               	movwf	229,b	;volatile
 10125                           
 10126                           ;mcc_generated_files/adcc.c: 80:     ADRPT = 0x00;
 10127  003C6A  0E00               	movlw	0
 10128  003C6C  6FE7               	movwf	231,b	;volatile
 10129                           
 10130                           ;mcc_generated_files/adcc.c: 82:     ADPCH = 0x00;
 10131  003C6E  0E00               	movlw	0
 10132  003C70  6FEC               	movwf	236,b	;volatile
 10133                           
 10134                           ;mcc_generated_files/adcc.c: 84:     ADACQL = 0x00;
 10135  003C72  0E00               	movlw	0
 10136  003C74  6FEE               	movwf	238,b	;volatile
 10137                           
 10138                           ;mcc_generated_files/adcc.c: 86:     ADACQH = 0x00;
 10139  003C76  0E00               	movlw	0
 10140  003C78  6FEF               	movwf	239,b	;volatile
 10141                           
 10142                           ;mcc_generated_files/adcc.c: 88:     ADCAP = 0x00;
 10143  003C7A  0E00               	movlw	0
 10144  003C7C  6FF0               	movwf	240,b	;volatile
 10145                           
 10146                           ;mcc_generated_files/adcc.c: 90:     ADPREL = 0x00;
 10147  003C7E  0E00               	movlw	0
 10148  003C80  6FF1               	movwf	241,b	;volatile
 10149                           
 10150                           ;mcc_generated_files/adcc.c: 92:     ADPREH = 0x00;
 10151  003C82  0E00               	movlw	0
 10152  003C84  6FF2               	movwf	242,b	;volatile
 10153                           
 10154                           ;mcc_generated_files/adcc.c: 94:     ADCON1 = 0x00;
 10155  003C86  0E00               	movlw	0
 10156  003C88  6FF4               	movwf	244,b	;volatile
 10157                           
 10158                           ;mcc_generated_files/adcc.c: 96:     ADCON2 = 0x10;
 10159  003C8A  0E10               	movlw	16
 10160  003C8C  6FF5               	movwf	245,b	;volatile
 10161                           
 10162                           ;mcc_generated_files/adcc.c: 98:     ADCON3 = 0x00;
 10163  003C8E  0E00               	movlw	0
 10164  003C90  6FF6               	movwf	246,b	;volatile
 10165                           
 10166                           ;mcc_generated_files/adcc.c: 100:     ADSTAT = 0x00;
 10167  003C92  0E00               	movlw	0
 10168  003C94  6FF7               	movwf	247,b	;volatile
 10169                           
 10170                           ;mcc_generated_files/adcc.c: 102:     ADREF = 0x00;
 10171  003C96  0E00               	movlw	0
 10172  003C98  6FF8               	movwf	248,b	;volatile
 10173                           
 10174                           ;mcc_generated_files/adcc.c: 104:     ADACT = 0x00;
 10175  003C9A  0E00               	movlw	0
 10176  003C9C  6FF9               	movwf	249,b	;volatile
 10177                           
 10178                           ;mcc_generated_files/adcc.c: 106:     ADCLK = 0x00;
 10179  003C9E  0E00               	movlw	0
 10180  003CA0  6FFA               	movwf	250,b	;volatile
 10181                           
 10182                           ;mcc_generated_files/adcc.c: 108:     ADCON0 = 0x84;
 10183  003CA2  0E84               	movlw	132
 10184  003CA4  6FF3               	movwf	243,b	;volatile
 10185                           
 10186                           ; BSR set to: 3
 10187  003CA6  0012               	return		;funcret
 10188  003CA8                     __end_of_ADCC_Initialize:
 10189                           	callstack 0
 10190                           
 10191 ;; *************** function _INTERRUPT_InterruptManager *****************
 10192 ;; Defined at:
 10193 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 10194 ;; Parameters:    Size  Location     Type
 10195 ;;		None
 10196 ;; Auto vars:     Size  Location     Type
 10197 ;;		None
 10198 ;; Return value:  Size  Location     Type
 10199 ;;                  1    wreg      void 
 10200 ;; Registers used:
 10201 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 10202 ;; Tracked objects:
 10203 ;;		On entry : 0/0
 10204 ;;		On exit  : 0/0
 10205 ;;		Unchanged: 0/0
 10206 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
 10207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10211 ;;Total ram usage:        0 bytes
 10212 ;; Hardware stack levels used: 1
 10213 ;; Hardware stack levels required when called: 2
 10214 ;; This function calls:
 10215 ;;		_TMR2_ISR
 10216 ;; This function is called by:
 10217 ;;		Interrupt level 2
 10218 ;; This function uses a non-reentrant model
 10219 ;;
 10220                           
 10221                           	psect	text60
 10222  0040E0                     __ptext60:
 10223                           	callstack 0
 10224  0040E0                     _INTERRUPT_InterruptManager:
 10225                           	callstack 114
 10226                           
 10227                           ;mcc_generated_files/interrupt_manager.c: 61:     if(PIE3bits.TMR2IE == 1 && PIR3bits.TM
      +                          R2IF == 1)
 10228                           
 10229                           ; BSR set to: 3
 10230                           ;incstack = 0
 10231  0040E0  A6AB               	btfss	171,3,c	;volatile
 10232  0040E2  0011               	retfie		f
 10233  0040E4  A6B6               	btfss	182,3,c	;volatile
 10234  0040E6  0011               	retfie		f
 10235                           
 10236                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR2_ISR();
 10237  0040E8  ECEC  F01F         	call	_TMR2_ISR	;wreg free
 10238  0040EC  0011               	retfie		f
 10239  0040EE                     __end_of_INTERRUPT_InterruptManager:
 10240                           	callstack 0
 10241                           
 10242 ;; *************** function _TMR2_ISR *****************
 10243 ;; Defined at:
 10244 ;;		line 165 in file "mcc_generated_files/tmr2.c"
 10245 ;; Parameters:    Size  Location     Type
 10246 ;;		None
 10247 ;; Auto vars:     Size  Location     Type
 10248 ;;		None
 10249 ;; Return value:  Size  Location     Type
 10250 ;;                  1    wreg      void 
 10251 ;; Registers used:
 10252 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 10253 ;; Tracked objects:
 10254 ;;		On entry : 0/0
 10255 ;;		On exit  : 0/0
 10256 ;;		Unchanged: 0/0
 10257 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
 10258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10262 ;;Total ram usage:        0 bytes
 10263 ;; Hardware stack levels used: 1
 10264 ;; Hardware stack levels required when called: 1
 10265 ;; This function calls:
 10266 ;;		Absolute function
 10267 ;;		_DCC_ISR
 10268 ;;		_TMR2_DefaultInterruptHandler
 10269 ;; This function is called by:
 10270 ;;		_INTERRUPT_InterruptManager
 10271 ;; This function uses a non-reentrant model
 10272 ;;
 10273                           
 10274                           	psect	text61
 10275  003FD8                     __ptext61:
 10276                           	callstack 0
 10277  003FD8                     _TMR2_ISR:
 10278                           	callstack 114
 10279                           
 10280                           ;mcc_generated_files/tmr2.c: 169:     PIR3bits.TMR2IF = 0;
 10281                           
 10282                           ;incstack = 0
 10283  003FD8  96B6               	bcf	182,3,c	;volatile
 10284                           
 10285                           ;mcc_generated_files/tmr2.c: 171:     if(TMR2_InterruptHandler)
 10286  003FDA  0105               	movlb	5	; () banked
 10287  003FDC  51F1               	movf	_TMR2_InterruptHandler& (0+255),w,b
 10288  003FDE  11F2               	iorwf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 10289  003FE0  B4D8               	btfsc	status,2,c
 10290  003FE2  0012               	return	
 10291                           
 10292                           ; BSR set to: 5
 10293                           ;mcc_generated_files/tmr2.c: 172:     {;mcc_generated_files/tmr2.c: 173:         TMR2_In
      +                          terruptHandler();
 10294  003FE4  D801               	call	i2u344_48
 10295  003FE6  0012               	return	
 10296  003FE8                     i2u344_48:
 10297  003FE8  0005               	push	
 10298  003FEA  6EFA               	movwf	pclath,c
 10299  003FEC  51F1               	movf	_TMR2_InterruptHandler& (0+255),w,b
 10300  003FEE  6EFD               	movwf	tosl,c
 10301  003FF0  51F2               	movf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 10302  003FF2  6EFE               	movwf	tosh,c
 10303  003FF4  6AFF               	clrf	tosu,c
 10304  003FF6  50FA               	movf	pclath,w,c
 10305  003FF8  0012               	return		;indir
 10306  003FFA                     __end_of_TMR2_ISR:
 10307                           	callstack 0
 10308                           
 10309 ;; *************** function _DCC_ISR *****************
 10310 ;; Defined at:
 10311 ;;		line 101 in file "dcc.c"
 10312 ;; Parameters:    Size  Location     Type
 10313 ;;		None
 10314 ;; Auto vars:     Size  Location     Type
 10315 ;;		None
 10316 ;; Return value:  Size  Location     Type
 10317 ;;                  1    wreg      void 
 10318 ;; Registers used:
 10319 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10320 ;; Tracked objects:
 10321 ;;		On entry : 3F/5
 10322 ;;		On exit  : 3F/3
 10323 ;;		Unchanged: 0/0
 10324 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
 10325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10327 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10328 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10329 ;;Total ram usage:        2 bytes
 10330 ;; Hardware stack levels used: 1
 10331 ;; This function calls:
 10332 ;;		Nothing
 10333 ;; This function is called by:
 10334 ;;		_main
 10335 ;;		_TMR2_ISR
 10336 ;; This function uses a non-reentrant model
 10337 ;;
 10338                           
 10339                           	psect	text62
 10340  003494                     __ptext62:
 10341                           	callstack 0
 10342  003494                     _DCC_ISR:
 10343                           	callstack 114
 10344                           
 10345                           ; BSR set to: 5
 10346                           ;dcc.c: 103:     ++dcc_interrupts;
 10347                           
 10348                           ;incstack = 0
 10349  003494  4BD7               	infsnz	_dcc_interrupts& (0+255),f,b	;volatile
 10350  003496  2BD8               	incf	(_dcc_interrupts+1)& (0+255),f,b	;volatile
 10351                           
 10352                           ; BSR set to: 5
 10353                           ;dcc.c: 107:     if (PORTAbits.RA4) {
 10354  003498  A8CE               	btfss	206,4,c	;volatile
 10355  00349A  D014               	goto	i2l3946
 10356                           
 10357                           ; BSR set to: 5
 10358                           ;dcc.c: 109:         ++dcc_zeros;
 10359  00349C  4BD3               	infsnz	_dcc_zeros& (0+255),f,b	;volatile
 10360  00349E  2BD4               	incf	(_dcc_zeros+1)& (0+255),f,b	;volatile
 10361                           
 10362                           ; BSR set to: 5
 10363                           ;dcc.c: 112:         if (dcc_bit == 9) {
 10364  0034A0  0E09               	movlw	9
 10365  0034A2  19F3               	xorwf	_dcc_bit& (0+255),w,b
 10366  0034A4  A4D8               	btfss	status,2,c
 10367  0034A6  D005               	goto	i2l3938
 10368                           
 10369                           ; BSR set to: 5
 10370                           ;dcc.c: 114:             if (preamble >= 10) {
 10371  0034A8  0E09               	movlw	9
 10372  0034AA  65DE               	cpfsgt	_preamble& (0+255),b
 10373  0034AC  D04F               	goto	i2l3982
 10374                           
 10375                           ; BSR set to: 5
 10376                           ;dcc.c: 115:                 dcc_bit = 7;
 10377  0034AE  0E07               	movlw	7
 10378  0034B0  D007               	goto	L7
 10379  0034B2                     i2l3938:
 10380                           
 10381                           ; BSR set to: 5
 10382                           ;dcc.c: 124:             if (dcc_bit) {
 10383  0034B2  51F3               	movf	_dcc_bit& (0+255),w,b
 10384  0034B4  B4D8               	btfsc	status,2,c
 10385  0034B6  D002               	goto	i2l3942
 10386  0034B8                     i2u322_40:
 10387                           
 10388                           ; BSR set to: 5
 10389                           ;dcc.c: 125:                 --dcc_bit;
 10390  0034B8  07F3               	decf	_dcc_bit& (0+255),f,b
 10391                           
 10392                           ;dcc.c: 128:             } else {
 10393  0034BA  D045               	goto	i2l3978
 10394  0034BC                     i2l3942:
 10395                           
 10396                           ; BSR set to: 5
 10397                           ;dcc.c: 129:                 ++dcc_byte;
 10398  0034BC  2BDF               	incf	_dcc_byte& (0+255),f,b
 10399                           
 10400                           ; BSR set to: 5
 10401                           ;dcc.c: 130:                 dcc_bit = 8;
 10402  0034BE  0E08               	movlw	8
 10403  0034C0                     L7:
 10404  0034C0  6FF3               	movwf	_dcc_bit& (0+255),b
 10405  0034C2  D041               	goto	i2l3978
 10406  0034C4                     i2l3946:
 10407                           
 10408                           ; BSR set to: 5
 10409                           ;dcc.c: 137:         ++dcc_ones;
 10410  0034C4  4BD1               	infsnz	_dcc_ones& (0+255),f,b	;volatile
 10411  0034C6  2BD2               	incf	(_dcc_ones+1)& (0+255),f,b	;volatile
 10412                           
 10413                           ; BSR set to: 5
 10414                           ;dcc.c: 140:         if (dcc_bit == 9) {
 10415  0034C8  0E09               	movlw	9
 10416  0034CA  19F3               	xorwf	_dcc_bit& (0+255),w,b
 10417  0034CC  A4D8               	btfss	status,2,c
 10418  0034CE  D002               	goto	i2l3952
 10419                           
 10420                           ; BSR set to: 5
 10421                           ;dcc.c: 142:             ++preamble;
 10422  0034D0  2BDE               	incf	_preamble& (0+255),f,b
 10423                           
 10424                           ;dcc.c: 145:         } else {
 10425  0034D2  D039               	goto	i2l3978
 10426  0034D4                     i2l3952:
 10427                           
 10428                           ; BSR set to: 5
 10429                           ;dcc.c: 147:             if (dcc_bit == 8) {
 10430  0034D4  0E08               	movlw	8
 10431  0034D6  19F3               	xorwf	_dcc_bit& (0+255),w,b
 10432  0034D8  A4D8               	btfss	status,2,c
 10433  0034DA  D017               	goto	i2l3964
 10434                           
 10435                           ; BSR set to: 5
 10436                           ;dcc.c: 149:                 if (!dcc_ready) {
 10437  0034DC  51E0               	movf	_dcc_ready& (0+255),w,b	;volatile
 10438  0034DE  A4D8               	btfss	status,2,c
 10439  0034E0  D011               	goto	i2l3960
 10440                           
 10441                           ; BSR set to: 5
 10442                           ;dcc.c: 150:                     dcc_mesg[0] = dcc_bits[0];
 10443  0034E2  C5B9  F5BF         	movff	_dcc_bits,_dcc_mesg
 10444                           
 10445                           ;dcc.c: 151:                     dcc_mesg[1] = dcc_bits[1];
 10446  0034E6  C5BA  F5C0         	movff	_dcc_bits+1,_dcc_mesg+1
 10447                           
 10448                           ;dcc.c: 152:                     dcc_mesg[2] = dcc_bits[2];
 10449  0034EA  C5BB  F5C1         	movff	_dcc_bits+2,_dcc_mesg+2
 10450                           
 10451                           ;dcc.c: 153:                     dcc_mesg[3] = dcc_bits[3];
 10452  0034EE  C5BC  F5C2         	movff	_dcc_bits+3,_dcc_mesg+3
 10453                           
 10454                           ;dcc.c: 154:                     dcc_mesg[4] = dcc_bits[4];
 10455  0034F2  C5BD  F5C3         	movff	_dcc_bits+4,_dcc_mesg+4
 10456                           
 10457                           ;dcc.c: 155:                     dcc_mesg[5] = dcc_bits[5];
 10458  0034F6  C5BE  F5C4         	movff	_dcc_bits+5,_dcc_mesg+5
 10459                           
 10460                           ;dcc.c: 156:                     dcc_len = dcc_byte;
 10461  0034FA  C5DF  F5E1         	movff	_dcc_byte,_dcc_len
 10462                           
 10463                           ; BSR set to: 5
 10464                           ;dcc.c: 157:                     dcc_ready = 1;
 10465  0034FE  0E01               	movlw	1
 10466  003500  6FE0               	movwf	_dcc_ready& (0+255),b	;volatile
 10467                           
 10468                           ;dcc.c: 158:                 } else {
 10469  003502  D024               	goto	i2l3982
 10470  003504                     i2l3960:
 10471                           
 10472                           ; BSR set to: 5
 10473                           ;dcc.c: 161:                     ++dcc_drops;
 10474  003504  4BD5               	infsnz	_dcc_drops& (0+255),f,b	;volatile
 10475  003506  2BD6               	incf	(_dcc_drops+1)& (0+255),f,b	;volatile
 10476  003508  D021               	goto	i2l3982
 10477  00350A                     i2l3964:
 10478                           
 10479                           ; BSR set to: 5
 10480                           ;dcc.c: 170:                 if (dcc_byte == 6) {
 10481  00350A  0E06               	movlw	6
 10482  00350C  19DF               	xorwf	_dcc_byte& (0+255),w,b
 10483  00350E  A4D8               	btfss	status,2,c
 10484  003510  D003               	goto	i2l3968
 10485                           
 10486                           ; BSR set to: 5
 10487                           ;dcc.c: 172:                     ++dcc_overrun;
 10488  003512  4BCF               	infsnz	_dcc_overrun& (0+255),f,b	;volatile
 10489  003514  2BD0               	incf	(_dcc_overrun+1)& (0+255),f,b	;volatile
 10490                           
 10491                           ;dcc.c: 174:                     goto reset;
 10492  003516  D01A               	goto	i2l3982
 10493  003518                     i2l3968:
 10494                           
 10495                           ; BSR set to: 5
 10496                           ;dcc.c: 177:                 dcc_bits[dcc_byte] |= 1 << dcc_bit;
 10497  003518  C5F3  F501         	movff	_dcc_bit,??_DCC_ISR
 10498  00351C  0E01               	movlw	1
 10499  00351E  6E02               	movwf	(??_DCC_ISR+1)^(0+1280),c
 10500  003520  2A01               	incf	??_DCC_ISR^(0+1280),f,c
 10501  003522  D002               	goto	i2u327_44
 10502  003524                     i2u327_45:
 10503  003524  90D8               	bcf	status,0,c
 10504  003526  3602               	rlcf	(??_DCC_ISR+1)^(0+1280),f,c
 10505  003528                     i2u327_44:
 10506  003528  2E01               	decfsz	??_DCC_ISR^(0+1280),f,c
 10507  00352A  D7FC               	goto	i2u327_45
 10508  00352C  0EB9               	movlw	low _dcc_bits
 10509  00352E  0105               	movlb	5	; () banked
 10510  003530  25DF               	addwf	_dcc_byte& (0+255),w,b
 10511  003532  6ED9               	movwf	fsr2l,c
 10512  003534  6ADA               	clrf	fsr2h,c
 10513  003536  0E05               	movlw	high _dcc_bits
 10514  003538  22DA               	addwfc	fsr2h,f,c
 10515  00353A  5002               	movf	(??_DCC_ISR+1)^(0+1280),w,c
 10516  00353C  12DF               	iorwf	indf2,f,c
 10517                           
 10518                           ; BSR set to: 5
 10519                           ;dcc.c: 179:                 if (dcc_bit) {
 10520  00353E  51F3               	movf	_dcc_bit& (0+255),w,b
 10521  003540  A4D8               	btfss	status,2,c
 10522  003542  D7BA               	goto	i2u322_40
 10523  003544  D7BB               	goto	i2l3942
 10524  003546                     i2l3978:
 10525                           
 10526                           ; BSR set to: 5
 10527                           ;dcc.c: 193:     T2CONbits.TMR2ON = 1;
 10528  003546  0103               	movlb	3	; () banked
 10529  003548  8F1E               	bsf	30,7,b	;volatile
 10530  00354A  0012               	return	
 10531  00354C                     i2l3982:
 10532                           
 10533                           ; BSR set to: 5
 10534                           ;dcc.c: 197:     dcc_bits[0] = 0;
 10535  00354C  0E00               	movlw	0
 10536  00354E  6FB9               	movwf	_dcc_bits& (0+255),b
 10537                           
 10538                           ;dcc.c: 198:     dcc_bits[1] = 0;
 10539  003550  0E00               	movlw	0
 10540  003552  6FBA               	movwf	(_dcc_bits+1)& (0+255),b
 10541                           
 10542                           ;dcc.c: 199:     dcc_bits[2] = 0;
 10543  003554  0E00               	movlw	0
 10544  003556  6FBB               	movwf	(_dcc_bits+2)& (0+255),b
 10545                           
 10546                           ;dcc.c: 200:     dcc_bits[3] = 0;
 10547  003558  0E00               	movlw	0
 10548  00355A  6FBC               	movwf	(_dcc_bits+3)& (0+255),b
 10549                           
 10550                           ;dcc.c: 201:     dcc_bits[4] = 0;
 10551  00355C  0E00               	movlw	0
 10552  00355E  6FBD               	movwf	(_dcc_bits+4)& (0+255),b
 10553                           
 10554                           ;dcc.c: 202:     dcc_bits[5] = 0;
 10555  003560  0E00               	movlw	0
 10556  003562  6FBE               	movwf	(_dcc_bits+5)& (0+255),b
 10557                           
 10558                           ;dcc.c: 203:     dcc_byte = 0;
 10559  003564  0E00               	movlw	0
 10560  003566  6FDF               	movwf	_dcc_byte& (0+255),b
 10561                           
 10562                           ;dcc.c: 204:     dcc_bit = 9;
 10563  003568  0E09               	movlw	9
 10564  00356A  6FF3               	movwf	_dcc_bit& (0+255),b
 10565                           
 10566                           ;dcc.c: 205:     preamble = 0;
 10567  00356C  0E00               	movlw	0
 10568  00356E  6FDE               	movwf	_preamble& (0+255),b
 10569                           
 10570                           ; BSR set to: 5
 10571                           ;dcc.c: 209:     T2CONbits.TMR2ON = 1;
 10572  003570  0103               	movlb	3	; () banked
 10573  003572  8F1E               	bsf	30,7,b	;volatile
 10574                           
 10575                           ; BSR set to: 3
 10576  003574  0012               	return		;funcret
 10577  003576                     __end_of_DCC_ISR:
 10578                           	callstack 0
 10579                           
 10580 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 10581 ;; Defined at:
 10582 ;;		line 182 in file "mcc_generated_files/tmr2.c"
 10583 ;; Parameters:    Size  Location     Type
 10584 ;;		None
 10585 ;; Auto vars:     Size  Location     Type
 10586 ;;		None
 10587 ;; Return value:  Size  Location     Type
 10588 ;;                  1    wreg      void 
 10589 ;; Registers used:
 10590 ;;		None
 10591 ;; Tracked objects:
 10592 ;;		On entry : 3F/5
 10593 ;;		On exit  : 3F/5
 10594 ;;		Unchanged: 3E/0
 10595 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
 10596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10599 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10600 ;;Total ram usage:        0 bytes
 10601 ;; Hardware stack levels used: 1
 10602 ;; This function calls:
 10603 ;;		Nothing
 10604 ;; This function is called by:
 10605 ;;		_TMR2_Initialize
 10606 ;;		_TMR2_ISR
 10607 ;; This function uses a non-reentrant model
 10608 ;;
 10609                           
 10610                           	psect	text63
 10611  004164                     __ptext63:
 10612                           	callstack 0
 10613  004164                     _TMR2_DefaultInterruptHandler:
 10614                           	callstack 114
 10615                           
 10616                           ; BSR set to: 5
 10617                           
 10618                           ; BSR set to: 3
 10619                           ;incstack = 0
 10620  004164  0012               	return		;funcret
 10621  004166                     __end_of_TMR2_DefaultInterruptHandler:
 10622                           	callstack 0
 10623                           
 10624                           ;
 10625                           ; Interrupt Vector Table @ 0x8
 10626                           ;
 10627                           
 10628                           	psect	ivt0x8
 10629  000008                     __pivt0x8:
 10630                           	callstack 0
 10631  000008                     ivt0x8_base:
 10632                           	callstack 0
 10633                           
 10634                           ; high-priority vector
 10635  000008  EF70  F020         	goto	_INTERRUPT_InterruptManager
 10636  000018                     	org	16
 10637                           
 10638                           ; low-priority vector
 10639  000018  00FF               	reset	
 10640                           
 10641                           	psect	text64
 10642  000000                     __ptext64:
 10643                           	callstack 0
 10644                           
 10645                           	psect	rparam
 10646  0000                     
 10647                           	psect	idloc
 10648                           
 10649                           ;Config register IDLOC0 @ 0x200000
 10650                           ;	unspecified, using default values
 10651  200000                     	org	2097152
 10652  200000  0FFF               	dw	4095
 10653                           
 10654                           ;Config register IDLOC1 @ 0x200002
 10655                           ;	unspecified, using default values
 10656  200002                     	org	2097154
 10657  200002  0FFF               	dw	4095
 10658                           
 10659                           ;Config register IDLOC2 @ 0x200004
 10660                           ;	unspecified, using default values
 10661  200004                     	org	2097156
 10662  200004  0FFF               	dw	4095
 10663                           
 10664                           ;Config register IDLOC3 @ 0x200006
 10665                           ;	unspecified, using default values
 10666  200006                     	org	2097158
 10667  200006  0FFF               	dw	4095
 10668                           
 10669                           ;Config register IDLOC4 @ 0x200008
 10670                           ;	unspecified, using default values
 10671  200008                     	org	2097160
 10672  200008  0FFF               	dw	4095
 10673                           
 10674                           ;Config register IDLOC5 @ 0x20000A
 10675                           ;	unspecified, using default values
 10676  20000A                     	org	2097162
 10677  20000A  0FFF               	dw	4095
 10678                           
 10679                           ;Config register IDLOC6 @ 0x20000C
 10680                           ;	unspecified, using default values
 10681  20000C                     	org	2097164
 10682  20000C  0FFF               	dw	4095
 10683                           
 10684                           ;Config register IDLOC7 @ 0x20000E
 10685                           ;	unspecified, using default values
 10686  20000E                     	org	2097166
 10687  20000E  0FFF               	dw	4095
 10688                           
 10689                           ;Config register IDLOC8 @ 0x200010
 10690                           ;	unspecified, using default values
 10691  200010                     	org	2097168
 10692  200010  0FFF               	dw	4095
 10693                           
 10694                           ;Config register IDLOC9 @ 0x200012
 10695                           ;	unspecified, using default values
 10696  200012                     	org	2097170
 10697  200012  0FFF               	dw	4095
 10698                           
 10699                           ;Config register IDLOC10 @ 0x200014
 10700                           ;	unspecified, using default values
 10701  200014                     	org	2097172
 10702  200014  0FFF               	dw	4095
 10703                           
 10704                           ;Config register IDLOC11 @ 0x200016
 10705                           ;	unspecified, using default values
 10706  200016                     	org	2097174
 10707  200016  0FFF               	dw	4095
 10708                           
 10709                           ;Config register IDLOC12 @ 0x200018
 10710                           ;	unspecified, using default values
 10711  200018                     	org	2097176
 10712  200018  0FFF               	dw	4095
 10713                           
 10714                           ;Config register IDLOC13 @ 0x20001A
 10715                           ;	unspecified, using default values
 10716  20001A                     	org	2097178
 10717  20001A  0FFF               	dw	4095
 10718                           
 10719                           ;Config register IDLOC14 @ 0x20001C
 10720                           ;	unspecified, using default values
 10721  20001C                     	org	2097180
 10722  20001C  0FFF               	dw	4095
 10723                           
 10724                           ;Config register IDLOC15 @ 0x20001E
 10725                           ;	unspecified, using default values
 10726  20001E                     	org	2097182
 10727  20001E  0FFF               	dw	4095
 10728                           
 10729                           ;Config register IDLOC16 @ 0x200020
 10730                           ;	unspecified, using default values
 10731  200020                     	org	2097184
 10732  200020  0FFF               	dw	4095
 10733                           
 10734                           ;Config register IDLOC17 @ 0x200022
 10735                           ;	unspecified, using default values
 10736  200022                     	org	2097186
 10737  200022  0FFF               	dw	4095
 10738                           
 10739                           ;Config register IDLOC18 @ 0x200024
 10740                           ;	unspecified, using default values
 10741  200024                     	org	2097188
 10742  200024  0FFF               	dw	4095
 10743                           
 10744                           ;Config register IDLOC19 @ 0x200026
 10745                           ;	unspecified, using default values
 10746  200026                     	org	2097190
 10747  200026  0FFF               	dw	4095
 10748                           
 10749                           ;Config register IDLOC20 @ 0x200028
 10750                           ;	unspecified, using default values
 10751  200028                     	org	2097192
 10752  200028  0FFF               	dw	4095
 10753                           
 10754                           ;Config register IDLOC21 @ 0x20002A
 10755                           ;	unspecified, using default values
 10756  20002A                     	org	2097194
 10757  20002A  0FFF               	dw	4095
 10758                           
 10759                           ;Config register IDLOC22 @ 0x20002C
 10760                           ;	unspecified, using default values
 10761  20002C                     	org	2097196
 10762  20002C  0FFF               	dw	4095
 10763                           
 10764                           ;Config register IDLOC23 @ 0x20002E
 10765                           ;	unspecified, using default values
 10766  20002E                     	org	2097198
 10767  20002E  0FFF               	dw	4095
 10768                           
 10769                           ;Config register IDLOC24 @ 0x200030
 10770                           ;	unspecified, using default values
 10771  200030                     	org	2097200
 10772  200030  0FFF               	dw	4095
 10773                           
 10774                           ;Config register IDLOC25 @ 0x200032
 10775                           ;	unspecified, using default values
 10776  200032                     	org	2097202
 10777  200032  0FFF               	dw	4095
 10778                           
 10779                           ;Config register IDLOC26 @ 0x200034
 10780                           ;	unspecified, using default values
 10781  200034                     	org	2097204
 10782  200034  0FFF               	dw	4095
 10783                           
 10784                           ;Config register IDLOC27 @ 0x200036
 10785                           ;	unspecified, using default values
 10786  200036                     	org	2097206
 10787  200036  0FFF               	dw	4095
 10788                           
 10789                           ;Config register IDLOC28 @ 0x200038
 10790                           ;	unspecified, using default values
 10791  200038                     	org	2097208
 10792  200038  0FFF               	dw	4095
 10793                           
 10794                           ;Config register IDLOC29 @ 0x20003A
 10795                           ;	unspecified, using default values
 10796  20003A                     	org	2097210
 10797  20003A  0FFF               	dw	4095
 10798                           
 10799                           ;Config register IDLOC30 @ 0x20003C
 10800                           ;	unspecified, using default values
 10801  20003C                     	org	2097212
 10802  20003C  0FFF               	dw	4095
 10803                           
 10804                           ;Config register IDLOC31 @ 0x20003E
 10805                           ;	unspecified, using default values
 10806  20003E                     	org	2097214
 10807  20003E  0FFF               	dw	4095
 10808                           
 10809                           	psect	config
 10810                           
 10811                           ;Config register CONFIG1 @ 0x300000
 10812                           ;	External Oscillator Selection
 10813                           ;	FEXTOSC = OFF, Oscillator not enabled
 10814                           ;	Reset Oscillator Selection
 10815                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
 10816  300000                     	org	3145728
 10817  300000  8C                 	db	140
 10818                           
 10819                           ;Config register CONFIG2 @ 0x300001
 10820                           ;	Clock out Enable bit
 10821                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 10822                           ;	PRLOCKED One-Way Set Enable bit
 10823                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
 10824                           ;	Clock Switch Enable bit
 10825                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 10826                           ;	Fail-Safe Clock Monitor Enable bit
 10827                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 10828                           ;	Fail-Safe Clock Monitor - Primary XTAL Enable bit
 10829                           ;	FCMENP = ON, Fail-Safe Clock Monitor enabled; timer will flag FSCMP bit and OSFIF inte
      +                          rrupt on EXTOSC failure.
 10830                           ;	Fail-Safe Clock Monitor - Secondary XTAL Enable bit
 10831                           ;	FCMENS = ON, Fail-Safe Clock Monitor enabled; timer will flag FSCMP bit and OSFIF inte
      +                          rrupt on SOSC failure.
 10832  300001                     	org	3145729
 10833  300001  FF                 	db	255
 10834                           
 10835                           ;Config register CONFIG3 @ 0x300002
 10836                           ;	MCLR Enable bit
 10837                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 10838                           ;	Power-up timer selection bits
 10839                           ;	PWRTS = PWRT_OFF, PWRT is disabled
 10840                           ;	Multi-vector enable bit
 10841                           ;	MVECEN = OFF, Interrupt contoller does not use vector table to prioritze interrupts
 10842                           ;	IVTLOCK bit One-way set enable bit
 10843                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
 10844                           ;	Low Power BOR Enable bit
 10845                           ;	LPBOREN = OFF, Low-Power BOR disabled
 10846                           ;	Brown-out Reset Enable bits
 10847                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 10848  300002                     	org	3145730
 10849  300002  F7                 	db	247
 10850                           
 10851                           ;Config register CONFIG4 @ 0x300003
 10852                           ;	Brown-out Reset Voltage Selection bits
 10853                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
 10854                           ;	ZCD Disable bit
 10855                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
 10856                           ;	PPSLOCK bit One-Way Set Enable bit
 10857                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
 10858                           ;	Stack Full/Underflow Reset Enable bit
 10859                           ;	STVREN = ON, Stack full/underflow will cause Reset
 10860                           ;	Low Voltage Programming Enable bit
 10861                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
 10862                           ;	Extended Instruction Set Enable bit
 10863                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 10864  300003                     	org	3145731
 10865  300003  DF                 	db	223
 10866                           
 10867                           ;Config register CONFIG5 @ 0x300004
 10868                           ;	WDT Period selection bits
 10869                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 10870                           ;	WDT operating mode
 10871                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 10872  300004                     	org	3145732
 10873  300004  9F                 	db	159
 10874                           
 10875                           ;Config register CONFIG6 @ 0x300005
 10876                           ;	WDT Window Select bits
 10877                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 10878                           ;	WDT input clock selector
 10879                           ;	WDTCCS = SC, Software Control
 10880  300005                     	org	3145733
 10881  300005  FF                 	db	255
 10882                           
 10883                           ;Config register CONFIG7 @ 0x300006
 10884                           ;	Boot Block Size selection bits
 10885                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 10886                           ;	Boot Block enable bit
 10887                           ;	BBEN = OFF, Boot block disabled
 10888                           ;	Storage Area Flash enable bit
 10889                           ;	SAFEN = OFF, SAF disabled
 10890                           ;	Background Debugger
 10891                           ;	DEBUG = OFF, Background Debugger disabled
 10892  300006                     	org	3145734
 10893  300006  FF                 	db	255
 10894                           
 10895                           ;Config register CONFIG8 @ 0x300007
 10896                           ;	Boot Block Write Protection bit
 10897                           ;	WRTB = OFF, Boot Block not Write protected
 10898                           ;	Configuration Register Write Protection bit
 10899                           ;	WRTC = OFF, Configuration registers not Write protected
 10900                           ;	Data EEPROM Write Protection bit
 10901                           ;	WRTD = OFF, Data EEPROM not Write protected
 10902                           ;	SAF Write protection bit
 10903                           ;	WRTSAF = OFF, SAF not Write Protected
 10904                           ;	Application Block write protection bit
 10905                           ;	WRTAPP = OFF, Application Block not write protected
 10906  300007                     	org	3145735
 10907  300007  FF                 	db	255
 10908                           
 10909                           ;Config register CONFIG9 @ 0x300008
 10910                           ;	PFM and Data EEPROM Code Protection bit
 10911                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 10912  300008                     	org	3145736
 10913  300008  FF                 	db	255
 10914                           
 10915                           ; Padding undefined space
 10916  300009                     	org	3145737
 10917  300009  FF                 	db	255
 10918                           tosu	equ	0x4FF
 10919                           tosh	equ	0x4FE
 10920                           tosl	equ	0x4FD
 10921                           stkptr	equ	0x4FC
 10922                           pclatu	equ	0x4FB
 10923                           pclath	equ	0x4FA
 10924                           pcl	equ	0x4F9
 10925                           tblptru	equ	0x4F8
 10926                           tblptrh	equ	0x4F7
 10927                           tblptrl	equ	0x4F6
 10928                           tablat	equ	0x4F5
 10929                           prodh	equ	0x4F4
 10930                           prodl	equ	0x4F3
 10931                           indf0	equ	0x4EF
 10932                           postinc0	equ	0x4EE
 10933                           postdec0	equ	0x4ED
 10934                           preinc0	equ	0x4EC
 10935                           plusw0	equ	0x4EB
 10936                           fsr0h	equ	0x4EA
 10937                           fsr0l	equ	0x4E9
 10938                           wreg	equ	0x4E8
 10939                           indf1	equ	0x4E7
 10940                           postinc1	equ	0x4E6
 10941                           postdec1	equ	0x4E5
 10942                           preinc1	equ	0x4E4
 10943                           plusw1	equ	0x4E3
 10944                           fsr1h	equ	0x4E2
 10945                           fsr1l	equ	0x4E1
 10946                           bsr	equ	0x4E0
 10947                           indf2	equ	0x4DF
 10948                           postinc2	equ	0x4DE
 10949                           postdec2	equ	0x4DD
 10950                           preinc2	equ	0x4DC
 10951                           plusw2	equ	0x4DB
 10952                           fsr2h	equ	0x4DA
 10953                           fsr2l	equ	0x4D9
 10954                           status	equ	0x4D8

Data Sizes:
    Strings     221
    Constant    0
    Data        34
    BSS         91
    Persistent  14
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     91      93
    BANK5           160     76     149
    BANK6           256      0      64
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_26(CODE[3]), STR_22(CODE[3]), STR_17(CODE[3]), STR_12(CODE[3]), 
		 -> STR_8(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_26(CODE[3]), STR_22(CODE[3]), STR_17(CODE[3]), STR_12(CODE[3]), 
		 -> STR_8(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(1) Largest target is 66
		 -> STR_5(CODE[27]), STR_4(CODE[50]), STR_3(CODE[66]), STR_2(CODE[47]), 
		 -> STR_1(CODE[16]), 

    strncmp@l	PTR const unsigned char  size(1) Largest target is 66
		 -> STR_5(CODE[27]), STR_4(CODE[50]), STR_3(CODE[66]), STR_2(CODE[47]), 
		 -> STR_1(CODE[16]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK6[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK6[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK6[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2376_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK5[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 66
		 -> STR_5(CODE[27]), STR_4(CODE[50]), STR_3(CODE[66]), STR_2(CODE[47]), 
		 -> STR_1(CODE[16]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 66
		 -> STR_5(CODE[27]), STR_4(CODE[50]), STR_3(CODE[66]), STR_2(CODE[47]), 
		 -> STR_1(CODE[16]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK5[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK6[32]), 

    printf@fmt	PTR const unsigned char  size(1) Largest target is 66
		 -> STR_5(CODE[27]), STR_4(CODE[50]), STR_3(CODE[66]), STR_2(CODE[47]), 
		 -> STR_1(CODE[16]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK5[2]), 

    PWM1_16BIT_Period_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> PWM1_16BIT_Period_DefaultInterruptHandler(), 

    PWM1_16BIT_Slice1Output2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> PWM1_16BIT_Slice1Output2_DefaultInterruptHandler(), 

    PWM1_16BIT_Slice1Output1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> PWM1_16BIT_Slice1Output1_DefaultInterruptHandler(), 

    PWM1_16BIT_Period_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> PWM1_16BIT_Period_DefaultInterruptHandler(), Absolute function(), 

    PWM1_16BIT_Slice1Output2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> PWM1_16BIT_Slice1Output2_DefaultInterruptHandler(), Absolute function(), 

    PWM1_16BIT_Slice1Output1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> PWM1_16BIT_Slice1Output1_DefaultInterruptHandler(), Absolute function(), 

    UART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultErrorHandler(), 

    UART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), 

    UART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), 

    UART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultErrorHandler(), Absolute function(), 

    UART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), Absolute function(), 

    UART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), Absolute function(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DCC_ISR(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DCC_ISR(), Absolute function(), TMR2_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _ctoa->_fputc
    _fputc->_putch
    _putch->_UART1_Write
    _motor_control->_PWM1_16BIT_SetSlice1Output2DutyCycleRegister
    _dcc_initialize->_cv_read
    _cv_read->_DATAEE_ReadByte
    _cv_factory_defaults->_cv_write
    _cv_write->_DATAEE_WriteByte
    _cv_write->_cv_read
    _UART1_Initialize->_UART1_SetErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorHandler
    _UART1_Initialize->_UART1_SetOverrunErrorHandler
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _PWM1_16BIT_Initialize->_PWM1_16BIT_Period_SetInterruptHandler
    _PWM1_16BIT_Initialize->_PWM1_16BIT_Slice1Output1_SetInterruptHandler
    _PWM1_16BIT_Initialize->_PWM1_16BIT_Slice1Output2_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR2_ISR->_DCC_ISR

Critical Paths under _main in BANK5

    _main->_dcc_decode
    _dcc_performance->_printf
    _dcc_decode->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  141836
                                             74 BANK5      2     2      0
                  _SYSTEM_Initialize
            _TMR0_HasOverflowOccured
                    _TMR0_Initialize
                    _TMR0_StartTimer
           _TMR2_SetInterruptHandler
                    _TMR2_StartTimer
                           _cv_check
                         _dcc_decode
                           _dcc_idle
                     _dcc_initialize
                    _dcc_performance
                             _printf
 ---------------------------------------------------------------------------------
 (1) _dcc_performance                                      0     0      0   29522
                             _printf
 ---------------------------------------------------------------------------------
 (1) _dcc_idle                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _dcc_decode                                          16    16      0   65001
                                             59 BANK5     15    15      0
                _cv_factory_defaults
                            _cv_read
                           _cv_write
                     _dcc_initialize
                   _function_control
                      _motor_control
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              39     4     35   29522
                                             22 BANK5     37     2     35
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             6     1      5   28955
                                             90 COMRAM     1     1      0
                                             17 BANK5      5     0      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           54    48      6   28413
                                             70 COMRAM    20    14      6
                                              0 BANK5     17    17      0
                               _ctoa
                               _dtoa
                              _fputc
                            _strncmp
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    7275
                                             31 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     512
                                              8 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     191
                                              2 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     191
                                              2 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     191
                                              2 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    6567
                                             31 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     412
                                              2 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     421
                                              2 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              7     3      4    1675
                                              2 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    7421
                                             31 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    4975
                                             20 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    2046
                                             13 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             20 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              2 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              2 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 8     5      3    2020
                                             13 COMRAM     8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1546
                                              4 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      62
                                              3 COMRAM     1     1      0
                        _UART1_Write
 ---------------------------------------------------------------------------------
 (9) _UART1_Write                                          1     1      0      31
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _motor_control                                        3     1      2    1080
                                              4 COMRAM     3     1      2
     _PWM1_16BIT_LoadBufferRegisters
_PWM1_16BIT_SetSlice1Output2DutyCycl
 ---------------------------------------------------------------------------------
 (3) _PWM1_16BIT_SetSlice1Output2DutyCycleRegister         2     0      2     121
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _PWM1_16BIT_LoadBufferRegisters                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _function_control                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _dcc_initialize                                       3     3      0    1001
                                              6 COMRAM     3     3      0
                            _cv_read
 ---------------------------------------------------------------------------------
 (1) _cv_check                                             0     0      0   15749
                _cv_factory_defaults
                            _cv_read
 ---------------------------------------------------------------------------------
 (2) _cv_read                                              2     0      2    1001
                                              4 COMRAM     2     0      2
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (3) _DATAEE_ReadByte                                      2     0      2     121
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _cv_factory_defaults                                  0     0      0   14748
                           _cv_write
 ---------------------------------------------------------------------------------
 (2) _cv_write                                             3     0      3   14748
                                              6 COMRAM     3     0      3
                   _DATAEE_WriteByte
                            _cv_read (ARG)
 ---------------------------------------------------------------------------------
 (3) _DATAEE_WriteByte                                     4     1      3     242
                                              2 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (1) _TMR2_StartTimer                                      0     0      0       0
                         _TMR2_Start
 ---------------------------------------------------------------------------------
 (2) _TMR2_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_HasOverflowOccured                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     762
                    _ADCC_Initialize
                    _CWG1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
              _PWM1_16BIT_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
                   _UART1_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0     294
              _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetOverrunErrorHandler                         2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetFramingErrorHandler                         2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetErrorHandler                                2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     174
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR2_SetInterruptHandler                             2     0      2     174
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_16BIT_Initialize                                0     0      0     294
_PWM1_16BIT_Period_SetInterruptHandl
_PWM1_16BIT_Slice1Output1_SetInterru
_PWM1_16BIT_Slice1Output2_SetInterru
 ---------------------------------------------------------------------------------
 (3) _PWM1_16BIT_Slice1Output2_SetInterruptHandler         2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _PWM1_16BIT_Slice1Output1_SetInterruptHandler         2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _PWM1_16BIT_Period_SetInterruptHandler                2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CWG1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                          0     0      0       0
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (12) _TMR2_ISR                                            0     0      0       0
                   Absolute function *
                            _DCC_ISR *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _DCC_ISR                                             2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
     _CWG1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM1_16BIT_Initialize
       _PWM1_16BIT_Period_SetInterruptHandler
       _PWM1_16BIT_Slice1Output1_SetInterruptHandler
       _PWM1_16BIT_Slice1Output2_SetInterruptHandler
     _TMR0_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
   _TMR0_HasOverflowOccured
   _TMR0_Initialize
   _TMR0_StartTimer
   _TMR2_SetInterruptHandler
   _TMR2_StartTimer
     _TMR2_Start
   _cv_check
     _cv_factory_defaults
       _cv_write
         _DATAEE_WriteByte
         _cv_read (ARG)
           _DATAEE_ReadByte
     _cv_read
   _dcc_decode
     _cv_factory_defaults
     _cv_read
     _cv_write
     _dcc_initialize
       _cv_read
     _function_control
     _motor_control
       _PWM1_16BIT_LoadBufferRegisters
       _PWM1_16BIT_SetSlice1Output2DutyCycleRegister
     _printf
       _vfprintf
         _vfpfcnvrt
           _ctoa
             _fputc
               _putch
                 _UART1_Write
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
               _fputs
                 _fputc
               _strlen
           _fputc
           _strncmp
           _utoa
             ___lodiv
             ___lomod
             _pad
           _xtoa
             _isalpha
             _isupper
             _pad
             _toupper
               _islower
   _dcc_idle
   _dcc_initialize
   _dcc_performance
     _printf
   _printf

 _INTERRUPT_InterruptManager (ROOT)
   _TMR2_ISR
     Absolute function(Fake) *
     _DCC_ISR *
     _TMR2_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0       0      37        0.0%
EEDATA             200      0       0       0        0.0%
BITBANK20          100      0       0      35        0.0%
BANK20             100      0       0      36        0.0%
BITBANK19          100      0       0      33        0.0%
BANK19             100      0       0      34        0.0%
BITBANK18          100      0       0      31        0.0%
BANK18             100      0       0      32        0.0%
BITBANK17          100      0       0      28        0.0%
BANK17             100      0       0      29        0.0%
BITBANK16          100      0       0      26        0.0%
BANK16             100      0       0      27        0.0%
BITBANK15          100      0       0      24        0.0%
BANK15             100      0       0      25        0.0%
BITBANK14          100      0       0      22        0.0%
BANK14             100      0       0      23        0.0%
BITBANK13          100      0       0      20        0.0%
BANK13             100      0       0      21        0.0%
BITBANK12          100      0       0      18        0.0%
BANK12             100      0       0      19        0.0%
BITBANK11          100      0       0      16        0.0%
BANK11             100      0       0      17        0.0%
BITBANK10          100      0       0      14        0.0%
BANK10             100      0       0      15        0.0%
BITBANK9           100      0       0      12        0.0%
BANK9              100      0       0      13        0.0%
BITBANK8           100      0       0      10        0.0%
BANK8              100      0       0      11        0.0%
BITBANK7           100      0       0       8        0.0%
BANK7              100      0       0       9        0.0%
BITBANK6           100      0       0       6        0.0%
BANK6              100      0      40       7       25.0%
BITBANK5            A0      0       0       4        0.0%
BANK5               A0     4C      95       5       93.1%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5B      5D       1       97.9%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     132      30        0.0%
DATA                 0      0     132       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Dec 12 11:07:41 2022

                            __end_of_TMR2_SetInterruptHandler 412C  
                             __end_of_TMR0_HasOverflowOccured 40FA  
                                                         l592 3DCE  
                                                         l943 172C  
                                                         _abs 3E50  
                                                         _pad 3846  
                                     __size_of_PMD_Initialize 001C  
                                             _TMR2_Initialize 3F10  
                                             __end_of_DCC_ISR 3576  
                                                         tosl 0004FD  
                                                         wreg 0004E8  
                            ??_PWM1_16BIT_LoadBufferRegisters 0503  
                             ?_PWM1_16BIT_LoadBufferRegisters 0501  
                                                        l1111 3C0C  
                                                        l1103 3BFE  
                                                        l1105 3C00  
                                                        l1123 3C24  
                                                        ?_abs 0515  
                                                        l1141 3C48  
                                                        l1117 3C18  
                                                        l1135 3C3C  
                                                        l1129 3C30  
                                                        l2036 3D90  
                                                        l1098 3BF8  
                                                        l4002 3990  
                                                        l4012 39B6  
                                                        l4030 3C32  
                                                        l4022 3C02  
                                                        l4032 3C3E  
                                                        l4024 3C0E  
                                                        l4026 3C1A  
                                                        l4028 3C26  
                                                        l5004 164A  
                                                        l1911 2FA4  
                                                        l1584 3622  
                                                        l5032 16D8  
                                                        l5016 1686  
                                                        l1913 2FAC  
                                                        l4074 3F60  
                                                        l1594 378A  
                                                        l5106 1852  
                                                        l5042 1704  
                                                        l5026 16B4  
                                                        l5034 16E8  
                                                        l5116 1884  
                                                        l5300 33EA  
                                                        l4510 325C  
                                                        l4502 3220  
                                                        l1926 2D74  
                                                        l5214 1C56  
                                                        l5206 1BFC  
                                                        l5142 195A  
                                                        l5134 1908  
                                                        l5126 18B6  
                                                        l4440 3A52  
                                                        l1928 2D7C  
                                                        l5232 1D88  
                                                        l5224 1CF8  
                                                        l5160 1AEA  
                                                        l5064 1748  
                                                        l5056 1726  
                                                        l5304 33FC  
                                                        l5312 3412  
                                                        l4506 3236  
                                                        l4530 32E8  
                                                        l4522 32AA  
                                                        l4450 3DEE  
                                                        l4602 3896  
                                                        l5218 1C8A  
                                                        l5234 1DAC  
                                                        l5170 1B34  
                                                        l5146 19EE  
                                                        l5082 1792  
                                                        l1875 37EC  
                                                        l1859 3874  
                                                        l4428 40C6  
                                                        l4532 32FC  
                                                        l4460 3EF0  
                                                        l5228 1D4A  
                                                        l5156 1A82  
                                                        l5148 19F4  
                                                        l5260 1EFE  
                                                        l5092 17EC  
                                                        l1981 3E78  
                                                        l4542 335A  
                                                        l4526 32CE  
                                                        l4454 3E04  
                                                        l4606 38C2  
                                                        l1886 2B86  
                                                        l5246 1E22  
                                                        l5262 1F02  
                                                        ?_pad 0515  
                                                        l3832 4078  
                                                        l1888 2B8E  
                                                        l5256 1EC2  
                                                        l5248 1E28  
                                                        l5096 1808  
                                                        l3922 3D38  
                                                        l4642 37E0  
                                                        l4490 31B0  
                                                        l4546 3380  
                                                        l4538 3344  
                                                        l4458 3EEC  
                                                        l4714 2D14  
                                                        l5098 180E  
                                                        l5290 33CC  
                                                        l4652 380E  
                                                        l4636 37BE  
                                                        l4492 31C4  
                                                        l4484 318A  
                                                        l4556 359C  
                                                        l4820 2F5E  
                                                        l4804 2EE8  
                                                        l4638 37CA  
                                                        l4478 3162  
                                                        l4718 2D2E  
                                                        l4830 3666  
                                                        l4558 35B0  
                                                        l4734 2FE4  
                                                        l5294 33D6  
                                                        l4656 3838  
                                                        l4648 37F6  
                                                        l4592 385E  
                                                        l4680 2BA8  
                                                        l4832 3670  
                                                        l4568 360C  
                                                        l4584 3774  
                                                        l4576 3718  
                                                        l4744 30D0  
                                                        l4920 2422  
                                                        l4666 2B68  
                                                        l4578 372C  
                                                        l4906 232E  
                                                        l4596 386C  
                                                        l4684 2BB8  
                                                        l4940 2584  
                                                        l4598 387E  
                                                        l4694 2CB0  
                                                        l4782 2DE2  
                                                        l4774 2DC0  
                                                        l4934 2542  
                                                        l4862 1FC6  
                                                        l4950 25A6  
                                                        l3992 396A  
                                                        l4768 2D90  
                                                        l4944 258E  
                                                        l3994 3974  
                                                        l4874 2094  
                                                        l4962 3CB6  
                                                        l4796 2E70  
                                                        l4964 3CDC  
                                                        l3998 3988  
                                                        l4886 21B0  
                                                        l4896 2262  
                                                        l4976 15EA  
                                                        l4994 161E  
                                                        l4986 1600  
                                                        l4978 15EC  
                                                        STR_1 15BF  
                                                        STR_2 1575  
                                                        STR_3 1501  
                                                        STR_4 1543  
                                                        STR_5 15A4  
                                                        STR_6 15D2  
                                                        STR_8 15D2  
                                                        _LATA 0004BE  
                                                        _LATB 0004BF  
                                                        u3015 3DDA  
                                                        _LATC 0004C0  
                                                        u3016 3DDC  
                                                        u3310 397C  
                                                        u5000 2F1A  
                                                        u5001 2F18  
                                                        u4210 3A4A  
                                                        u5010 2F28  
                                                        _T2PR 00031D  
                                                        u5020 2F2C  
                                                        u4301 3190  
                                                        u4230 3A92  
                                                        u4320 31C8  
                                                        u5200 2472  
                                                        u5120 2006  
                                                        u3450 40F6  
                                                        u4411 357C  
                                                        u4260 3EAA  
                                                        u5140 20E4  
                                                        u4430 35B4  
                                                        u4270 3EAC  
                                                        u4520 3E5E  
                                                        u5080 36CE  
                                                        u4530 3EDA  
                                                        u4380 3300  
                                                        u4460 3730  
                                                        u4540 3EDC  
                                                        u5180 236E  
                                                        _PMD0 000063  
                                                        _PMD1 000064  
                                                        u4710 2BA2  
                                                        u4550 3E48  
                                                        u5430 173A  
                                                        _PMD2 000065  
                                                        _PMD3 000066  
                                                        u4720 2CBE  
                                                        u4560 3E4A  
                                                        u5440 1742  
                                                        _PMD4 000067  
                                                        _PMD5 000068  
                                                        u4650 2B3A  
                                                        u4810 2F9A  
                                                        u4570 3D78  
                                                        u4740 2CE0  
                                                        u4660 2B3C  
                                                        u4580 3D7A  
                                                        u4900 2DDE  
                                                        u4741 2CDE  
                                                        u4750 2CEE  
                                                        u4910 2E14  
                                                        u5550 18B0  
                                                        u4760 2CF2  
                                                        u4840 30FA  
                                                        u4920 2E16  
                                                        u4841 30F8  
                                                        u4690 2B7C  
                                                        u4850 3108  
                                                        u4780 2CFE  
                                                        u4860 310C  
                                                        u4940 2E4E  
                                                        u4950 2E50  
                                                        u4880 2D6A  
                                                        u4970 2EC4  
                                                        u4980 2EF8  
                                                        u5854 1EA6  
                                                        u4975 2EB2  
                                                        u5855 1EA2  
                                                        u5864 1EDA  
                                                        u5865 1ED6  
                                                        _WPUA 000401  
                                                        _WPUB 000409  
                                                        _WPUC 000411  
                                                        abs@a 0515  
                                                        _dbuf 0600  
                                                        _ctoa 37AC  
                                                        _main 33A2  
                                                        _dtoa 2B12  
                                                        _prec 05CD  
                                             _TMR0_StartTimer 415A  
                                                        _nout 05C9  
                                                        pad@i 051C  
                                                        pad@p 0519  
                                                        fsr1h 0004E2  
                                                        fsr2h 0004DA  
                                                        indf2 0004DF  
                                                        fsr1l 0004E1  
                                                        pad@w 051E  
                                                        fsr2l 0004D9  
                                                        _utoa 2F88  
                                                        _xtoa 2D58  
                                __size_of_cv_factory_defaults 0532  
                                                        prodl 0004F3  
                                                        start 001A  
                                                ___param_bank 000000  
                                          dcc_decode@pkt_addr 05A5  
                                                       ??_abs 0517  
                                                       ??_pad 051B  
                                   __size_of_DATAEE_WriteByte 004A  
                                            _my_dcc_direction 05F4  
                                     __end_of_TMR0_Initialize 40B4  
                              __size_of_OSCILLATOR_Initialize 001C  
                               __end_of_OSCILLATOR_Initialize 406E  
                                             __end_of___aodiv 327E  
                                                       _ADCAP 0003F0  
                                                       _ADACT 0003F9  
                                                       ?_ctoa 050E  
                                                       ?_main 0501  
                                                       ?_dtoa 0520  
                                                       _ADCLK 0003FA  
                                             __end_of___aomod 33A2  
                                                       _ADPCH 0003EC  
                                                       _ADREF 0003F8  
                                                       STR_10 15D5  
                                                       STR_12 15D5  
                                                       STR_20 15DB  
                                                       STR_22 15DB  
                                                       STR_15 15D8  
                                                       STR_24 15CF  
                                                       STR_17 15D8  
                                                       STR_26 15CF  
                                                       _ADRPT 0003E7  
                                                       ?_utoa 0520  
                                             __end_of___lodiv 3644  
                                                       ?_xtoa 0520  
                                                       _U1P1H 0002A6  
                                                       _U1P2H 0002A8  
                                                       _U1P1L 0002A5  
                                                       _U1P3H 0002AA  
                                                       _T2CON 00031E  
                                                       _U1P2L 0002A7  
                                                       _U1P3L 0002A9  
                                             __end_of___lomod 37AC  
                                                       _T2HLT 00031F  
                                                       _T2TMR 00031C  
                                                       _U1UIR 0002B1  
                                                       _T2RST 000321  
                                                       _U1TXB 0002A3  
                                      ?_PWM1_16BIT_Initialize 0501  
                                                       _OSCEN 0000B3  
                                                vfpfcnvrt@fmt 0549  
                                                       _TMR0H 000319  
                                                vfpfcnvrt@llu 0569  
                                                       _TMR0L 000318  
                                                       _TRISA 0004C6  
                                                       _TRISB 0004C7  
                                                       _TRISC 0004C8  
                                            __end_of_TMR2_ISR 3FFA  
                                             __end_of_cv_read 4086  
            _PWM1_16BIT_Slice1Output1_DefaultInterruptHandler 000000  
                                             _DATAEE_ReadByte 401A  
                                                       _flags 055C  
                                                 ?_TMR2_Start 0501  
                                                       _fputc 3A3A  
                                             __end_of_isalpha 3E50  
                                                       _fputs 3DE4  
                                                       pad@fp 0515  
                                                       _width 05CB  
                                            _my_dcc_functions 05AC  
                                                       ctoa@c 0510  
                                                       _putch 40FA  
                                                       ctoa@l 0512  
                                                       ctoa@w 0514  
                                                       dtoa@d 0522  
                                                       dtoa@i 0542  
                                                       dtoa@n 053A  
                                                       dtoa@p 0534  
                                                       dtoa@s 0538  
                                                       dtoa@w 0536  
                                             __end_of_islower 3EB2  
                                             __end_of_isupper 3EE2  
                                                       pclath 0004FA  
                                                       tablat 0004F5  
                                     __end_of_CWG1_Initialize 3FB6  
                                                       utoa@d 0522  
                                                       utoa@i 053E  
                                                       utoa@n 0536  
                                                       utoa@p 0532  
                                                       utoa@w 0534  
                                                       status 0004D8  
                                                       xtoa@c 0545  
                                                       xtoa@d 0522  
                                                       xtoa@i 0543  
                                                       xtoa@n 053B  
                                                       xtoa@p 0537  
                                                       xtoa@w 0539  
                                                       xtoa@x 052A  
                                             _TMR2_StartTimer 414A  
                                            ??_dcc_initialize 0507  
                                             __end_of_strncmp 36FE  
                                             __end_of_toupper 3D9A  
                                            ___lodiv@dividend 0503  
                            _UART1_DefaultFramingErrorHandler 000000  
                                                _toupper$2594 050F  
                                             __initialization 39CE  
                                                __end_of_ctoa 3846  
                                                __end_of_main 3494  
                                                __end_of_dtoa 2D58  
                                                __end_of_utoa 3136  
                                                __end_of_xtoa 2F88  
                                     __end_of_TMR2_Initialize 3F3C  
                                 ?_INTERRUPT_InterruptManager 0501  
                                                   ??_DCC_ISR 0501  
                                                ?_UART1_Write 0501  
                                                      ??_ctoa 0511  
                                    _TMR2_SetInterruptHandler 4122  
                                                      ??_main 055C  
                                                      ??_dtoa 052A  
                                                      ??_utoa 052A  
                                                      ??_xtoa 052B  
                                               __activetblptr 000003  
                                    __size_of_dcc_performance 006A  
               __end_of_PWM1_16BIT_Period_SetInterruptHandler 414A  
              __size_of_PWM1_16BIT_Period_SetInterruptHandler 000A  
                     ??_PWM1_16BIT_Period_SetInterruptHandler 0505  
                      ?_PWM1_16BIT_Period_SetInterruptHandler 0503  
                       _PWM1_16BIT_Period_SetInterruptHandler 4140  
                                            ___lodiv@quotient 0513  
                                            _UART1_Initialize 3B7C  
                                     __end_of_TMR0_StartTimer 415E  
                                                      _ADACCU 0003E5  
                                                      _ADACQH 0003EF  
                                                      _ADACQL 0003EE  
                                                      _ADCON0 0003F3  
                                                      _ADCON1 0003F4  
                                                      _ADCON2 0003F5  
                                                      _ADCON3 0003F6  
                                                      ?_fputc 0505  
                                                      _ADLTHH 0003DA  
                                                      _ACTCON 0000AC  
                                                      _ADLTHL 0003D9  
                                                      ?_fputs 050E  
                                                      _ADPREH 0003F2  
                                                      _ADPREL 0003F1  
                                                      _ADSTAT 0003F7  
                                                      _ADUTHH 0003DC  
                                                      _ADUTHL 0003DB  
                                        dcc_decode@cv_address 05A7  
                                                      _ANSELA 000400  
                                                      ?_putch 0501  
                                                      _ANSELB 000408  
                                                      _ANSELC 000410  
                                                      _T0CON0 00031A  
                                                      _T0CON1 00031B  
                                                      _U1CON0 0002AB  
                                                      _U1CON1 0002AC  
                                                      _U1CON2 0002AD  
                                                      _U1BRGH 0002AF  
                                                      _U1FIFO 0002B0  
                                                      _U1BRGL 0002AE  
                                                      _RC0PPS 000211  
                                                      _RC1PPS 000212  
                                                      _RC4PPS 000215  
                                                      _RB7PPS 000210  
                                                      _RC5PPS 000216  
                                                      _ODCONA 000402  
                                                      _ODCONB 00040A  
                                                      _ODCONC 000412  
                                                      _INLVLA 000404  
                                                      _INLVLB 00040C  
                                                      _INLVLC 000414  
                                                      i2l3942 34BC  
                                                      i2l3960 3504  
                                                      i2l3952 34D4  
                                                      i2l3938 34B2  
                                                      i2l3946 34C4  
                                                      i2l3964 350A  
                                                      i2l3982 354C  
                                                      i2l3968 3518  
                                                      i2l3978 3546  
                                                      _OSCFRQ 0000B1  
                                            __end_of_dcc_idle 40C4  
                            __size_of_TMR0_HasOverflowOccured 000C  
                                       _UART1_SetErrorHandler 4118  
                                            __end_of_cv_check 3F66  
                                                vfprintf@cfmt 055B  
                                                   ??___aodiv 0513  
                                                   ??___aomod 0513  
                                            __end_of_cv_write 409E  
                                                   ??___lodiv 0513  
                                                   ??___lomod 0513  
                                         __size_of_TMR2_Start 0006  
                                            ?_TMR0_Initialize 0501  
                                                      clear_0 3A10  
                                                      clear_1 3A1C  
                                                      isa$std 000001  
                                                      _printf 3FB6  
                                                      pad@buf 0517  
                                                      ctoa@fp 050E  
                                                      dtoa@fp 0520  
                                     __end_of_DATAEE_ReadByte 4036  
                                                      _strlen 3EE2  
                                                   ??_cv_read 0507  
                                             _ADCC_Initialize 3C4C  
                                                      fputc@c 0505  
                                              _PMD_Initialize 4036  
                                                      fputs@c 0512  
                                                      fputs@i 0513  
                                    __end_of_function_control 3C4C  
                                                      fputs@s 050E  
                                                   ??_isalpha 0505  
                                                   ??_islower 0505  
                                                __mediumconst 0000  
                                                      tblptrh 0004F7  
                                                   ??_isupper 0505  
                                                      tblptrl 0004F6  
                                                      tblptru 0004F8  
                                             _motor_direction 05DB  
                                            __end_of_vfprintf 3CFC  
                                                      utoa@fp 0520  
                                     __end_of_TMR2_StartTimer 4150  
       PWM1_16BIT_Period_SetInterruptHandler@InterruptHandler 0503  
PWM1_16BIT_Slice1Output2_SetInterruptHandler@InterruptHandler 0503  
PWM1_16BIT_Slice1Output1_SetInterruptHandler@InterruptHandler 0503  
                    TMR2_SetInterruptHandler@InterruptHandler 0503  
                        __end_of_UART1_SetOverrunErrorHandler 410E  
                       __size_of_UART1_SetOverrunErrorHandler 000A  
                                _UART1_SetOverrunErrorHandler 4104  
                                   _UART1_DefaultErrorHandler 000000  
                                                      xtoa@fp 0520  
                                                   ??_strncmp 0507  
                                                   ??_toupper 050B  
                               __size_of_INTERRUPT_Initialize 0004  
                                           _SYSTEM_Initialize 3F66  
                                                  __accesstop 0560  
                                     __end_of__initialization 3A34  
                                            ?_CWG1_Initialize 0501  
                                             _dcc_decode$1841 059E  
                                             _dcc_decode$1845 05A0  
                                          ?_SYSTEM_Initialize 0501  
                                               ___rparam_used 000001  
                                              _my_dcc_address 05D9  
                                              __pcstackCOMRAM 0501  
                                                __pidataBANK5 4162  
                                                __pidataBANK6 3FFA  
                                         ??_SYSTEM_Initialize 0505  
                                                   ?_TMR2_ISR 0501  
                                            _DATAEE_WriteByte 3D9A  
                                               __end_of_fputc 3AA6  
                                               __end_of_fputs 3E1C  
                                               __end_of_putch 4104  
                                            ?_TMR2_Initialize 0501  
                                      __end_of_PMD_Initialize 4052  
                                           _my_dcc_speedsteps 05E3  
                                         _cv_factory_defaults 25E0  
                                                  _dcc_decode 15E0  
                                   _UART1_FramingErrorHandler 05EF  
                                                  _dcc_speeds 0620  
                                            ?_TMR0_StartTimer 0501  
                                                     ??_fputc 0509  
                                   __end_of_SYSTEM_Initialize 3F90  
                                                     ??_fputs 0512  
                                           ??_dcc_performance 055C  
                                                     ??_putch 0504  
                                                  __pbssBANK5 05AC  
                                                  __pbssBANK6 0600  
                               ?_UART1_SetOverrunErrorHandler 0503  
                                      ?_UART1_SetErrorHandler 0503  
                                        ?_cv_factory_defaults 0501  
                                                     IVTBASEH 00045E  
                                                     IVTBASEL 00045D  
                                                     IVTBASEU 00045F  
                                                  ??_TMR2_ISR 0503  
                                     __end_of_ADCC_Initialize 3CA8  
                                       __end_of_motor_control 39CE  
                                     ??_PWM1_16BIT_Initialize 0505  
                                                     _DCC_ISR 3494  
                                                     _ADSTPTH 0003E0  
                                                     _ADSTPTL 0003DF  
                                                     ?_printf 0576  
                                             ?_PMD_Initialize 0501  
                                                     _CWG1DBF 0003BF  
                                                     _CWG1AS0 0003C2  
                                                     _CWG1AS1 0003C3  
                                                     _CWG1DBR 0003BE  
                                                     _CWG1ISM 0003BD  
                                                     ?_strlen 0503  
                                                     _CWG1STR 0003C4  
                                            ?_DATAEE_ReadByte 0503  
                                                   ?_dcc_idle 0501  
                                                     _U1ERRIE 0002B3  
                                                     _U1ERRIR 0002B2  
                                                     _T2INPPS 000248  
                                        __size_of_UART1_Write 000E  
                                                     _U1RXPPS 000272  
                                                  _idle_count 05C5  
                                                     _OSCCON1 0000AD  
                                                     _OSCCON3 0000AF  
                                          __size_of_vfpfcnvrt 06D4  
                                                     _NVMADRH 000044  
                                                     _NVMADRL 000043  
                                                     _NVMADRU 000045  
                                                     _OSCTUNE 0000B0  
                                                     _PWM1CLK 000461  
                                                     _NVMDATL 000046  
                                                     _PWM1GIE 000468  
                                                     _PWM1CON 000469  
                                                     _PWM1GIR 000467  
                                                     _PWM1ERS 000460  
                                                     _PWM1LDS 000462  
                                                     _PWM1PRH 000464  
                                                     _PWM1PRL 000463  
                                                     _NVMLOCK 000042  
                                                     _SLRCONA 000403  
                                                     _SLRCONB 00040B  
                                                     _SLRCONC 000413  
                                                ??_TMR2_Start 0503  
   PWM1_16BIT_SetSlice1Output2DutyCycleRegister@registerValue 0503  
                                                   ?_cv_check 0501  
                                            ?_TMR2_StartTimer 0501  
                                            ___lomod@dividend 0503  
                                     _TMR0_HasOverflowOccured 40EE  
                                                   ?_cv_write 0507  
                                        DATAEE_WriteByte@bAdd 0503  
                                       ??_cv_factory_defaults 050A  
                                                     __Hparam 0000  
                                                     __Lparam 0000  
                                    __end_of_UART1_Initialize 3BE6  
                                  ??_TMR2_SetInterruptHandler 0505  
                                                     ___aodiv 3136  
                                                     ___aomod 327E  
                                                     ___lodiv 3576  
                                                     ___lomod 36FE  
                                                   ?_vfprintf 0571  
                                                __psmallconst 1500  
                                                     _dcc_bit 05F3  
                                                     _dcc_len 05E1  
                                          __end_of_TMR2_Start 4156  
                                                     __pcinit 39CE  
                                                     __ramtop 1500  
                                                     _cv_cv29 05DD  
                                                     __ptext0 33A2  
                                                     __ptext1 3B12  
                                                     __ptext2 40B4  
                                                     __ptext3 15E0  
                                                     __ptext4 3FB6  
                                                     __ptext5 3CA8  
                                                     __ptext6 1F0C  
                                                     __ptext7 2D58  
                                                     __ptext8 3D50  
                                                     __ptext9 3E82  
                                             __size_of_printf 0022  
                                                     _cv_read 406E  
                                                  ??_dcc_idle 0503  
                                                 ?_dcc_decode 0501  
                                             __size_of_strlen 002E  
        __end_of_PWM1_16BIT_Slice1Output1_SetInterruptHandler 4140  
       __size_of_PWM1_16BIT_Slice1Output1_SetInterruptHandler 000A  
              ??_PWM1_16BIT_Slice1Output1_SetInterruptHandler 0505  
               ?_PWM1_16BIT_Slice1Output1_SetInterruptHandler 0503  
                _PWM1_16BIT_Slice1Output1_SetInterruptHandler 4136  
                                       _OSCILLATOR_Initialize 4052  
                                                   _T2CONbits 00031E  
                                                __size_of_abs 0032  
                                                __size_of_pad 0096  
                                                     _isalpha 3E1C  
                                                     _islower 3E82  
                                    ??_PIN_MANAGER_Initialize 0503  
                                                     _isupper 3EB2  
                                                  ??_cv_check 050A  
                                  __size_of_SYSTEM_Initialize 002A  
                                                     main@idx 05AB  
                                                     main@xor 05AA  
                                                     _strncmp 3644  
                                                     _toupper 3D50  
                                        end_of_initialization 3A34  
            _PWM1_16BIT_Slice1Output2_DefaultInterruptHandler 000000  
                                                  ??_cv_write 050A  
                                                     fputc@fp 0507  
                                                     fputs@fp 0510  
                              ??_UART1_SetOverrunErrorHandler 0505  
                                           __end_of_vfpfcnvrt 25E0  
                                                     postdec1 0004E5  
                                                     postdec2 0004DD  
                                                   _PWM1S1CFG 00046A  
                                                   _PWM1S1P1H 00046C  
                                                   _PWM1S1P2H 00046E  
                                                   _PWM1S1P1L 00046B  
                                                   _PWM1S1P2L 00046D  
                                                     postinc0 0004EE  
                                                     postinc1 0004E6  
                                                     postinc2 0004DE  
                                                   _PWM1PIPOS 000466  
                                            ?_ADCC_Initialize 0501  
                                                  ??_vfprintf 055B  
                                           UART1_Write@txData 0503  
                                               cv_write@value 0509  
                                                     strlen@a 0505  
                                                     strlen@s 0503  
                                                   _PWMIN0PPS 000257  
                                                   _PWMIN1PPS 000258  
                                                   _PORTAbits 0004CE  
                                           ?_function_control 0501  
                                   ??_TMR0_HasOverflowOccured 0503  
                                          ??_function_control 0503  
                                    __end_of_DATAEE_WriteByte 3DE4  
                                           dcc_decode@i_start 05A2  
                                         __size_of_dcc_decode 092C  
                                __end_of_INTERRUPT_Initialize 4162  
                        __end_of_TMR2_DefaultInterruptHandler 4166  
                       __size_of_TMR2_DefaultInterruptHandler 0002  
                                _TMR2_DefaultInterruptHandler 4164  
                                                 vfpfcnvrt@ap 054B  
                                                 vfpfcnvrt@fp 0547  
                                                 vfpfcnvrt@ll 0560  
                                     __size_of_dcc_initialize 0054  
                                           __size_of_TMR2_ISR 0022  
                                             _dcc_performance 3B12  
                                      ?_OSCILLATOR_Initialize 0501  
                                              __end_of_printf 3FD8  
                                                  cv_write@cv 0507  
                                              __end_of_strlen 3F10  
                                         start_initialization 39CE  
                                             ___lodiv@divisor 050B  
                                             ___lodiv@counter 051B  
                                    __size_of_TMR0_Initialize 0016  
                             __size_of_PIN_MANAGER_Initialize 007A  
                                                 __end_of_abs 3E82  
                                                 __end_of_pad 38DC  
                                     ??_UART1_SetErrorHandler 0505  
                                                 putch@txData 0504  
                                                  ivt0x8_base 0008  
                                         DATAEE_ReadByte@bAdd 0503  
                                                 vfprintf@fmt 0573  
                                                 _dcc_overrun 05CF  
                                            ??_PMD_Initialize 0503  
                                    __size_of_CWG1_Initialize 0026  
                                                 __pdataBANK5 05F3  
                                                 __pdataBANK6 0620  
                               ?_TMR2_DefaultInterruptHandler 0501  
                                                    ?_DCC_ISR 0501  
                                                    ??_printf 055C  
                              __size_of_PWM1_16BIT_Initialize 006C  
                                                    ??_strlen 0505  
                               __end_of_PWM1_16BIT_Initialize 3B12  
                                          motor_control@speed 0505  
                                                 __pbssCOMRAM 055C  
                                          _UART1_ErrorHandler 05EB  
                                               __pcstackBANK5 0560  
                                           __size_of_dcc_idle 0010  
                                            ___aodiv@dividend 0503  
                                             dcc_decode@value 05A4  
                                    __size_of_TMR2_Initialize 002C  
                                                   _dcc_drops 05D5  
                                                   _dcc_ready 05E0  
                                           __size_of_cv_check 002A  
                                                   _dcc_zeros 05D3  
                                           __size_of_cv_write 0018  
                                                   __pnvBANK5 05E5  
                                    __size_of_TMR0_StartTimer 0004  
                                      _PIN_MANAGER_Initialize 38DC  
                                                   _dtoa$2466 0532  
                                           ?_UART1_Initialize 0501  
                                     __end_of_dcc_performance 3B7C  
                        __end_of_UART1_SetFramingErrorHandler 4118  
                       __size_of_UART1_SetFramingErrorHandler 000A  
                                _UART1_SetFramingErrorHandler 410E  
                                                    ?___aodiv 0503  
                                                    ?___aomod 0503  
                                            ___aodiv@quotient 0515  
                                                    ?___lodiv 0503  
                                                    ?___lomod 0503  
                                          ??_UART1_Initialize 0505  
                                                   _bufferRAM 001500  
                                            _uart1RxLastError 05E4  
                                               ??_UART1_Write 0503  
                                ??_INTERRUPT_InterruptManager 0503  
                                           __size_of_vfprintf 0054  
                                                    ?_cv_read 0505  
                                                ??_dcc_decode 059B  
                                             ___lomod@divisor 050B  
                                                 __smallconst 1500  
                                             ___lomod@counter 0513  
                            _UART1_DefaultOverrunErrorHandler 000000  
                                                    ?_isalpha 0503  
                                                    ?_islower 0503  
                                                    ?_isupper 0503  
                                 __end_of_cv_factory_defaults 2B12  
                                                    _CWG1CON0 0003C0  
                                                    _CWG1CON1 0003C1  
                                              __size_of_fputc 006C  
                                                    _T2CLKCON 000320  
                                              __size_of_fputs 0038  
                                    __size_of_DATAEE_ReadByte 001C  
                                                    ?_strncmp 0503  
                                                    ?_toupper 0509  
                                              __size_of_putch 000A  
                                        _INTERRUPT_Initialize 415E  
                   _PWM1_16BIT_Period_DefaultInterruptHandler 000000  
                                      __size_of_motor_control 0078  
                                           ??_TMR0_Initialize 0503  
                                                    _LATAbits 0004BE  
                       UART1_SetErrorHandler@interruptHandler 0503  
                                                    _LATBbits 0004BF  
                                                    _LATCbits 0004C0  
                                                    _PIE3bits 0004AB  
                                                    _PIE4bits 0004AC  
                                                 dcc_decode@i 05A9  
                                    __size_of_TMR2_StartTimer 0006  
                         __size_of_INTERRUPT_InterruptManager 000E  
                                                    i2u322_40 34B8  
                                          __end_of_dcc_decode 1F0C  
                                                    i2u327_44 3528  
                                                    i2u327_45 3524  
                                                    i2u344_48 3FE8  
                                                    _PIR3bits 0004B6  
                                                    _PIR4bits 0004B7  
                                                    _PWM1CPRE 000465  
                                                    _TMR2_ISR 3FD8  
                               ?_UART1_SetFramingErrorHandler 0503  
                                              _dcc_initialize 3CFC  
                      __end_of_PWM1_16BIT_LoadBufferRegisters 415A  
                     __size_of_PWM1_16BIT_LoadBufferRegisters 0004  
                              _PWM1_16BIT_LoadBufferRegisters 4156  
                                                   _vfpfcnvrt 1F0C  
                                                   _xtoa$2484 0533  
                                                   _xtoa$2485 0535  
                                            __size_of_DCC_ISR 00E2  
                                           ??_CWG1_Initialize 0503  
        __end_of_PWM1_16BIT_Slice1Output2_SetInterruptHandler 4136  
       __size_of_PWM1_16BIT_Slice1Output2_SetInterruptHandler 000A  
              ??_PWM1_16BIT_Slice1Output2_SetInterruptHandler 0505  
               ?_PWM1_16BIT_Slice1Output2_SetInterruptHandler 0503  
                _PWM1_16BIT_Slice1Output2_SetInterruptHandler 412C  
                                                   cv_read@cv 0505  
                                              _dcc_interrupts 05D7  
                              ??_TMR2_DefaultInterruptHandler 0501  
                           __size_of_TMR2_SetInterruptHandler 000A  
                                   ?_TMR2_SetInterruptHandler 0503  
                                         __end_of_UART1_Write 40D2  
                                       DATAEE_WriteByte@bData 0505  
                                                  vfpfcnvrt@c 0568  
                                                 _INTCON0bits 0004D6  
                   _PWM1_16BIT_Slice1Output1_InterruptHandler 05E9  
                                                   copy_data0 39E2  
                                       ?_INTERRUPT_Initialize 0501  
                                           ?_DATAEE_WriteByte 0503  
                                           ??_TMR2_Initialize 0505  
                                          ??_DATAEE_WriteByte 0506  
                                   __size_of_function_control 0066  
                                                    __Hrparam 0000  
                                                  vfprintf@ap 0574  
                                                    __Lrparam 0000  
                                                  vfprintf@fp 0571  
                                      __end_of_dcc_initialize 3D50  
                                            ?_dcc_performance 0501  
                                     ??_OSCILLATOR_Initialize 0503  
                                           ??_TMR0_StartTimer 0503  
                                            __size_of___aodiv 0148  
                                            __size_of___aomod 0124  
                                               _motor_control 3956  
                                            __size_of___lodiv 00CE  
                                            __size_of___lomod 00AE  
                                                  ?_vfpfcnvrt 0547  
                                             ___aodiv@divisor 050B  
                                             ___aodiv@counter 0513  
                                                  _CWG1CLKCON 0003BC  
                                                _my_dcc_speed 05E2  
                                                    _dcc_bits 05B9  
                                                    _dcc_idle 40B4  
                                                    _dcc_byte 05DF  
                                                    _dcc_mesg 05BF  
                                                    _dcc_ones 05D1  
                                            __size_of_cv_read 0018  
                                                  _T0CON0bits 00031A  
                                    __size_of_ADCC_Initialize 005C  
                                            __size_of_isalpha 0034  
                                                    __pivt0x8 0008  
                                            __size_of_islower 0030  
                                                    __ptext10 3EB2  
                                                    __ptext11 3E1C  
                                                    __ptext20 3E50  
                                                    __ptext12 2F88  
                                                    __ptext21 327E  
                                                    __ptext13 36FE  
                                                    __ptext30 3BE6  
                                                    __ptext22 3136  
                                                    __ptext14 3576  
                                                    __ptext31 3CFC  
                                                    __ptext23 37AC  
                                                    __ptext15 3644  
                                                    __ptext40 415A  
                                                    __ptext32 3F3C  
                                                    __ptext24 3A3A  
                                                    __ptext16 2B12  
                                                    __ptext41 40EE  
                                                    __ptext33 406E  
                                                    __ptext25 40FA  
                                                    __ptext17 3846  
                                                    __ptext50 3AA6  
                                                    __ptext42 3F66  
                                                    __ptext34 401A  
                                                    __ptext26 40C4  
                                                    __ptext18 3EE2  
                                                    __ptext51 412C  
                                                    __ptext43 3B7C  
                                                    __ptext35 25E0  
                                                    __ptext27 3956  
                                                    __ptext19 3DE4  
                                                    __ptext60 40E0  
                                                    __ptext52 4136  
                                                    __ptext44 4104  
                                                    __ptext36 4086  
                                                    __ptext28 40D2  
                                                    __ptext61 3FD8  
                                                    __ptext53 4140  
                                                    __ptext45 410E  
                                                    __ptext37 3D9A  
                                                    __ptext29 4156  
                                                    __ptext62 3494  
                                                    __ptext54 4036  
                                                    __ptext46 4118  
                                                    __ptext38 414A  
                                                    __ptext63 4164  
                                                    __ptext55 38DC  
                                                    __ptext47 3F10  
                                                    __ptext39 4150  
                                                    __ptext64 0000  
                                                    __ptext56 4052  
                                                    __ptext48 4122  
                                                    __ptext57 415E  
                                                    __ptext49 409E  
                                                    __ptext58 3F90  
                                                    __ptext59 3C4C  
                                            __size_of_isupper 0030  
                                                    _cv_check 3F3C  
                              __size_of_UART1_SetErrorHandler 000A  
                               __end_of_UART1_SetErrorHandler 4122  
                                 DATAEE_WriteByte@GIEBitValue 0506  
                                            __size_of_strncmp 00BA  
                                            __size_of_toupper 004A  
                                                    _cv_write 4086  
                                               __size_of_ctoa 009A  
                                               __size_of_main 00F2  
                                               __size_of_dtoa 0246  
                                               __size_of_utoa 01AE  
                                               __size_of_xtoa 0230  
                                           ??_DATAEE_ReadByte 0505  
                                                    _preamble 05DE  
                                   _UART1_OverrunErrorHandler 05ED  
                UART1_SetOverrunErrorHandler@interruptHandler 0503  
                                                    isa$xinst 000000  
                                             ?_dcc_initialize 0501  
                          _PWM1_16BIT_Period_InterruptHandler 05E5  
                                              ?_motor_control 0505  
                                      motor_control@direction 0506  
                                                    _vfprintf 3CA8  
                                           ??_TMR2_StartTimer 0503  
                          __end_of_INTERRUPT_InterruptManager 40EE  
                                  _INTERRUPT_InterruptManager 40E0  
                                                   printf@fmt 0576  
                                                 _UART1_Write 40C4  
                                     motor_control@speedsteps 0507  
                                            ___aomod@dividend 0503  
                                    ?_TMR0_HasOverflowOccured 0501  
                              ??_UART1_SetFramingErrorHandler 0505  
                                                 _PWM1CONbits 000469  
                                                 _NVMCON0bits 000040  
                                                 _NVMCON1bits 000041  
                                                 _PWM1GIRbits 000467  
                                                    isalpha@c 0503  
                                      ??_INTERRUPT_Initialize 0503  
        __end_of_PWM1_16BIT_SetSlice1Output2DutyCycleRegister 40E0  
       __size_of_PWM1_16BIT_SetSlice1Output2DutyCycleRegister 000E  
              ??_PWM1_16BIT_SetSlice1Output2DutyCycleRegister 0505  
               ?_PWM1_16BIT_SetSlice1Output2DutyCycleRegister 0503  
                _PWM1_16BIT_SetSlice1Output2DutyCycleRegister 40D2  
                                               dcc_decode@bit 05A3  
                                                    intlevel2 0000  
                                                    islower@c 0503  
                                     ?_PIN_MANAGER_Initialize 0501  
                                                    isupper@c 0503  
                                                   strncmp@_l 0503  
                                                   strncmp@_r 0504  
                                                    printf@ap 0599  
                   _PWM1_16BIT_Slice1Output2_InterruptHandler 05E7  
                UART1_SetFramingErrorHandler@interruptHandler 0503  
                                             ___aomod@divisor 050B  
                                                 ??_vfpfcnvrt 054D  
                                             ___aomod@counter 0513  
                                                 _motor_speed 05DC  
                                             _TMR0_Initialize 409E  
                                       _PWM1_16BIT_Initialize 3AA6  
                                                    strncmp@l 0508  
                                                    strncmp@n 0505  
                                                    strncmp@r 0509  
                                                    toupper@c 0509  
                                   __size_of_UART1_Initialize 006A  
                                                  _TMR2_Start 4150  
                                                ___aodiv@sign 0514  
                              __end_of_PIN_MANAGER_Initialize 3956  
                                           ??_ADCC_Initialize 0503  
                                       _TMR2_InterruptHandler 05F1  
                                            _function_control 3BE6  
                                                ___aomod@sign 0514  
                                             _CWG1_Initialize 3F90  
                                             ??_motor_control 0507  
